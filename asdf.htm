<!DOCTYPE html>
<html>
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=1" />
	<meta name="apple-mobile-web-app-capable" content="yes" />
	<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
	<style>
		iframe {
			display: inline-block;
		}
		#page {
		  position: absolute;
		  width: 100%;
		  height: 100%;
		  -webkit-box-sizing: border-box;
		  box-sizing: border-box;
		  border: none;
		}
		.windowtitle td, .windowtitle_i td {
			color: #ffffff;
			font-family: Trebuchet MS, Tahoma;
			font-size: 13px;
		}
		.windowtitle td {
			background: #009;
		}
		.windowtitle_i td {
			background: #808080;
		}
		.windowbutton, .windowbutton_a {
			border: solid 1px #bcbcbc;
			background: #fff;
			font-family: Trebuchet MS, Tahoma;
			font-size: 13px;
			font-weight: bold;
		}
		.windowbutton_a {
			background: #025;
			color: #ffff99;
			border-color: #3333ff;
		}
	</style>
	<script src="a1/wnd_2.js"></script>
	<script src="a1/taskbar.js"></script>
</head>
<body style="overflow:hidden; margin:0px;" onselectstart="return false;">

<div style="position:absolute; bottom:28px; left:0px; right:0px; top:0px; overflow: hidden;" id="di"></div>
<div id="tb" style="z-index:999;position:fixed; bottom:0px; left:0px; right:0px; height:28px; overflow:hidden; border-top: #d0d0d0 1px solid; background-color: #d4d0c8;"></div>


<div id="page"></div>
<script>
	/*
var page = document.getElementById('page'),
    ua = navigator.userAgent,
    iphone = ~ua.indexOf('iPhone') || ~ua.indexOf('iPod'),
    ipad = ~ua.indexOf('iPad'),
    ios = iphone || ipad,
    // Detect if this is running as a fullscreen app from the homescreen
    fullscreen = window.navigator.standalone,
    android = ~ua.indexOf('Android'),
    lastWidth = 0;

if (android) {
  // Android's browser adds the scroll position to the innerHeight, just to
  // make this really difficult. Thus, once we are scrolled, the
  // page height value needs to be corrected in case the page is loaded
  // when already scrolled down. The pageYOffset is of no use, since it always
  // returns 0 while the address bar is displayed.
  window.onscroll = function() {
    page.style.height = window.innerHeight + 'px'
  } 
}
var setupScroll = window.onload = function() {
  // Start out by adding the height of the location bar to the width, so that
  // we can scroll past it
  if (ios) {
    // iOS reliably returns the innerWindow size for documentElement.clientHeight
    // but window.innerHeight is sometimes the wrong value after rotating
    // the orientation
    var height = document.documentElement.clientHeight;
    // Only add extra padding to the height on iphone / ipod, since the ipad
    // browser doesn't scroll off the location bar.
    if (iphone && !fullscreen) height += 60;
    page.style.height = height + 'px';
  } else if (android) {
    // The stock Android browser has a location bar height of 56 pixels, but
    // this very likely could be broken in other Android browsers.
    page.style.height = (window.innerHeight + 56) + 'px'
  }
  // Scroll after a timeout, since iOS will scroll to the top of the page
  // after it fires the onload event
  setTimeout(scrollTo, 0, 0, 1);
};
(window.onresize = function() {
  var pageWidth = page.offsetWidth;
  // Android doesn't support orientation change, so check for when the width
  // changes to figure out when the orientation changes
  if (lastWidth == pageWidth) return;
  lastWidth = pageWidth;
  setupScroll();
})();
*/
</script>

<script>
	function newWin(url,title) {
		var w=(new wnd2(0,0,340,250,window,document.getElementById("di"),null,null,null));
		var ifr=document.createElement("iframe");
		ifr.src=url;
		ifr.style.cssText="border:none; width:100%; height:100%; margin:0px;padding:0px;";
		w.div_content.appendChild(ifr);
		w.setTitle(title);
		w.show();
		w.activate();
	}
	//new wnd2_helper(window);
	taskbar_init(document.getElementById("tb"),window);
	newWin("jackfft/jackfft.cppsp","jackfft");
</script>
</body>
</html>

