<%#
#include <iostream>
#include <unistd.h>
#include <sys/types.h>
#include <stdexcept>
#include <cppsp/common.H>
#include <delegate.H>
#include <dirent.h>
#include <sys/stat.h>
#include <fcntl.h>

using namespace CP;
%><%
	struct {
		StringPool& sp;
		StreamWriter& output;
		bool dirOnly;
		String root;
		void operator()(const char* name) {
			if(dirOnly) {
				String tmp=combinePath(root,name,sp);
				struct stat st;
				if(stat(tmp.toSTDString().c_str(),&st)<0) return;
				if(!S_ISDIR(st.st_mode)) return;
			}
			%><%=htmlEscape(name)%><%
			output.write('\n');
		}
	} cb {*sp,output,request->queryString["t"]=="d"};
	cb.root=mapPath(concat(*sp,"../",request->queryString["p"],"/"));
	struct stat st;
	if(stat((cb.root.toSTDString()+"index.txt").c_str(),&st)>=0) {
		try {
			File f(open((cb.root.toSTDString()+"index.txt").c_str(),O_RDONLY));
			f.readToEnd(*output.buffer);
			return;
		} catch(exception& ex) {}
	}
	listDirectory(cb.root.c_str(), &cb);
	return;
%>
