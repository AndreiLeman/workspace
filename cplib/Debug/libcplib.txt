
libcplib.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000015190 <_init>:
   15190:	48 83 ec 08          	sub    $0x8,%rsp
   15194:	e8 77 1a 00 00       	callq  16c10 <call_gmon_start>
   15199:	e8 12 1b 00 00       	callq  16cb0 <frame_dummy>
   1519e:	e8 ed ed 00 00       	callq  23f90 <__do_global_ctors_aux>
   151a3:	48 83 c4 08          	add    $0x8,%rsp
   151a7:	c3                   	retq   

Disassembly of section .plt:

00000000000151b0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8key_compEv@plt-0x10>:
   151b0:	ff 35 ca 4f 21 00    	pushq  0x214fca(%rip)        # 22a180 <_GLOBAL_OFFSET_TABLE_+0x8>
   151b6:	ff 25 cc 4f 21 00    	jmpq   *0x214fcc(%rip)        # 22a188 <_GLOBAL_OFFSET_TABLE_+0x10>
   151bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000151c0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8key_compEv@plt>:
   151c0:	ff 25 ca 4f 21 00    	jmpq   *0x214fca(%rip)        # 22a190 <_GLOBAL_OFFSET_TABLE_+0x18>
   151c6:	68 00 00 00 00       	pushq  $0x0
   151cb:	e9 e0 ff ff ff       	jmpq   151b0 <_init+0x20>

00000000000151d0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEC1EPKSt13_Rb_tree_nodeIS2_E@plt>:
   151d0:	ff 25 c2 4f 21 00    	jmpq   *0x214fc2(%rip)        # 22a198 <_GLOBAL_OFFSET_TABLE_+0x20>
   151d6:	68 01 00 00 00       	pushq  $0x1
   151db:	e9 d0 ff ff ff       	jmpq   151b0 <_init+0x20>

00000000000151e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E@plt>:
   151e0:	ff 25 ba 4f 21 00    	jmpq   *0x214fba(%rip)        # 22a1a0 <_GLOBAL_OFFSET_TABLE_+0x28>
   151e6:	68 02 00 00 00       	pushq  $0x2
   151eb:	e9 c0 ff ff ff       	jmpq   151b0 <_init+0x20>

00000000000151f0 <_ZN6xaxaxa9ExceptionC1Ev@plt>:
   151f0:	ff 25 b2 4f 21 00    	jmpq   *0x214fb2(%rip)        # 22a1a8 <_GLOBAL_OFFSET_TABLE_+0x30>
   151f6:	68 03 00 00 00       	pushq  $0x3
   151fb:	e9 b0 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015200 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4findERS1_@plt>:
   15200:	ff 25 aa 4f 21 00    	jmpq   *0x214faa(%rip)        # 22a1b0 <_GLOBAL_OFFSET_TABLE_+0x38>
   15206:	68 04 00 00 00       	pushq  $0x4
   1520b:	e9 a0 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015210 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv@plt>:
   15210:	ff 25 a2 4f 21 00    	jmpq   *0x214fa2(%rip)        # 22a1b8 <_GLOBAL_OFFSET_TABLE_+0x40>
   15216:	68 05 00 00 00       	pushq  $0x5
   1521b:	e9 90 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015220 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5clearEv@plt>:
   15220:	ff 25 9a 4f 21 00    	jmpq   *0x214f9a(%rip)        # 22a1c0 <_GLOBAL_OFFSET_TABLE_+0x48>
   15226:	68 06 00 00 00       	pushq  $0x6
   1522b:	e9 80 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015230 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv@plt>:
   15230:	ff 25 92 4f 21 00    	jmpq   *0x214f92(%rip)        # 22a1c8 <_GLOBAL_OFFSET_TABLE_+0x50>
   15236:	68 07 00 00 00       	pushq  $0x7
   1523b:	e9 70 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015240 <_ZN6xaxaxa7Sockets6SOCKS58CallbackC1Ev@plt>:
   15240:	ff 25 8a 4f 21 00    	jmpq   *0x214f8a(%rip)        # 22a1d0 <_GLOBAL_OFFSET_TABLE_+0x58>
   15246:	68 08 00 00 00       	pushq  $0x8
   1524b:	e9 60 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015250 <_ZNSsC1Ev@plt>:
   15250:	ff 25 82 4f 21 00    	jmpq   *0x214f82(%rip)        # 22a1d8 <_GLOBAL_OFFSET_TABLE_+0x60>
   15256:	68 09 00 00 00       	pushq  $0x9
   1525b:	e9 50 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>:
   15260:	ff 25 7a 4f 21 00    	jmpq   *0x214f7a(%rip)        # 22a1e0 <_GLOBAL_OFFSET_TABLE_+0x68>
   15266:	68 0a 00 00 00       	pushq  $0xa
   1526b:	e9 40 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015270 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE8allocateEmPKv@plt>:
   15270:	ff 25 72 4f 21 00    	jmpq   *0x214f72(%rip)        # 22a1e8 <_GLOBAL_OFFSET_TABLE_+0x70>
   15276:	68 0b 00 00 00       	pushq  $0xb
   1527b:	e9 30 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015280 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv@plt>:
   15280:	ff 25 6a 4f 21 00    	jmpq   *0x214f6a(%rip)        # 22a1f0 <_GLOBAL_OFFSET_TABLE_+0x78>
   15286:	68 0c 00 00 00       	pushq  $0xc
   1528b:	e9 20 ff ff ff       	jmpq   151b0 <_init+0x20>

0000000000015290 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bvEEOT_OT0_@plt>:
   15290:	ff 25 62 4f 21 00    	jmpq   *0x214f62(%rip)        # 22a1f8 <_GLOBAL_OFFSET_TABLE_+0x80>
   15296:	68 0d 00 00 00       	pushq  $0xd
   1529b:	e9 10 ff ff ff       	jmpq   151b0 <_init+0x20>

00000000000152a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EEC1Ev@plt>:
   152a0:	ff 25 5a 4f 21 00    	jmpq   *0x214f5a(%rip)        # 22a200 <_GLOBAL_OFFSET_TABLE_+0x88>
   152a6:	68 0e 00 00 00       	pushq  $0xe
   152ab:	e9 00 ff ff ff       	jmpq   151b0 <_init+0x20>

00000000000152b0 <_ZN6xaxaxa4FileD1Ev@plt>:
   152b0:	ff 25 52 4f 21 00    	jmpq   *0x214f52(%rip)        # 22a208 <_GLOBAL_OFFSET_TABLE_+0x90>
   152b6:	68 0f 00 00 00       	pushq  $0xf
   152bb:	e9 f0 fe ff ff       	jmpq   151b0 <_init+0x20>

00000000000152c0 <_ZN6xaxaxa9ExceptionC1ERKS0_@plt>:
   152c0:	ff 25 4a 4f 21 00    	jmpq   *0x214f4a(%rip)        # 22a210 <_GLOBAL_OFFSET_TABLE_+0x98>
   152c6:	68 10 00 00 00       	pushq  $0x10
   152cb:	e9 e0 fe ff ff       	jmpq   151b0 <_init+0x20>

00000000000152d0 <_ZN5boost3argILi6EEC1Ev@plt>:
   152d0:	ff 25 42 4f 21 00    	jmpq   *0x214f42(%rip)        # 22a218 <_GLOBAL_OFFSET_TABLE_+0xa0>
   152d6:	68 11 00 00 00       	pushq  $0x11
   152db:	e9 d0 fe ff ff       	jmpq   151b0 <_init+0x20>

00000000000152e0 <_ZN5boost6detail12shared_countD1Ev@plt>:
   152e0:	ff 25 3a 4f 21 00    	jmpq   *0x214f3a(%rip)        # 22a220 <_GLOBAL_OFFSET_TABLE_+0xa8>
   152e6:	68 12 00 00 00       	pushq  $0x12
   152eb:	e9 c0 fe ff ff       	jmpq   151b0 <_init+0x20>

00000000000152f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_@plt>:
   152f0:	ff 25 32 4f 21 00    	jmpq   *0x214f32(%rip)        # 22a228 <_GLOBAL_OFFSET_TABLE_+0xb0>
   152f6:	68 13 00 00 00       	pushq  $0x13
   152fb:	e9 b0 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015300 <_ZNSolsEi@plt>:
   15300:	ff 25 2a 4f 21 00    	jmpq   *0x214f2a(%rip)        # 22a230 <_GLOBAL_OFFSET_TABLE_+0xb8>
   15306:	68 14 00 00 00       	pushq  $0x14
   1530b:	e9 a0 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015310 <_ZN6xaxaxa4File4ReadENS_6BufferE@plt>:
   15310:	ff 25 22 4f 21 00    	jmpq   *0x214f22(%rip)        # 22a238 <_GLOBAL_OFFSET_TABLE_+0xc0>
   15316:	68 15 00 00 00       	pushq  $0x15
   1531b:	e9 90 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015320 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEppEi@plt>:
   15320:	ff 25 1a 4f 21 00    	jmpq   *0x214f1a(%rip)        # 22a240 <_GLOBAL_OFFSET_TABLE_+0xc8>
   15326:	68 16 00 00 00       	pushq  $0x16
   1532b:	e9 80 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015330 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE10deallocateEPS9_m@plt>:
   15330:	ff 25 12 4f 21 00    	jmpq   *0x214f12(%rip)        # 22a248 <_GLOBAL_OFFSET_TABLE_+0xd0>
   15336:	68 17 00 00 00       	pushq  $0x17
   1533b:	e9 70 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015340 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_@plt>:
   15340:	ff 25 0a 4f 21 00    	jmpq   *0x214f0a(%rip)        # 22a250 <_GLOBAL_OFFSET_TABLE_+0xd8>
   15346:	68 18 00 00 00       	pushq  $0x18
   1534b:	e9 60 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015350 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEeqERKS3_@plt>:
   15350:	ff 25 02 4f 21 00    	jmpq   *0x214f02(%rip)        # 22a258 <_GLOBAL_OFFSET_TABLE_+0xe0>
   15356:	68 19 00 00 00       	pushq  $0x19
   1535b:	e9 50 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015360 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base@plt>:
   15360:	ff 25 fa 4e 21 00    	jmpq   *0x214efa(%rip)        # 22a260 <_GLOBAL_OFFSET_TABLE_+0xe8>
   15366:	68 1a 00 00 00       	pushq  $0x1a
   1536b:	e9 40 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015370 <backtrace@plt>:
   15370:	ff 25 f2 4e 21 00    	jmpq   *0x214ef2(%rip)        # 22a268 <_GLOBAL_OFFSET_TABLE_+0xf0>
   15376:	68 1b 00 00 00       	pushq  $0x1b
   1537b:	e9 30 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015380 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEED1Ev@plt>:
   15380:	ff 25 ea 4e 21 00    	jmpq   *0x214eea(%rip)        # 22a270 <_GLOBAL_OFFSET_TABLE_+0xf8>
   15386:	68 1c 00 00 00       	pushq  $0x1c
   1538b:	e9 20 fe ff ff       	jmpq   151b0 <_init+0x20>

0000000000015390 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>:
   15390:	ff 25 e2 4e 21 00    	jmpq   *0x214ee2(%rip)        # 22a278 <_GLOBAL_OFFSET_TABLE_+0x100>
   15396:	68 1d 00 00 00       	pushq  $0x1d
   1539b:	e9 10 fe ff ff       	jmpq   151b0 <_init+0x20>

00000000000153a0 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEC1IS4_vEERS0_OT_@plt>:
   153a0:	ff 25 da 4e 21 00    	jmpq   *0x214eda(%rip)        # 22a280 <_GLOBAL_OFFSET_TABLE_+0x108>
   153a6:	68 1e 00 00 00       	pushq  $0x1e
   153ab:	e9 00 fe ff ff       	jmpq   151b0 <_init+0x20>

00000000000153b0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseERS1_@plt>:
   153b0:	ff 25 d2 4e 21 00    	jmpq   *0x214ed2(%rip)        # 22a288 <_GLOBAL_OFFSET_TABLE_+0x110>
   153b6:	68 1f 00 00 00       	pushq  $0x1f
   153bb:	e9 f0 fd ff ff       	jmpq   151b0 <_init+0x20>

00000000000153c0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE7destroyEPS5_@plt>:
   153c0:	ff 25 ca 4e 21 00    	jmpq   *0x214eca(%rip)        # 22a290 <_GLOBAL_OFFSET_TABLE_+0x118>
   153c6:	68 20 00 00 00       	pushq  $0x20
   153cb:	e9 e0 fd ff ff       	jmpq   151b0 <_init+0x20>

00000000000153d0 <_ZN5boost6detail15sp_counted_base12weak_releaseEv@plt>:
   153d0:	ff 25 c2 4e 21 00    	jmpq   *0x214ec2(%rip)        # 22a298 <_GLOBAL_OFFSET_TABLE_+0x120>
   153d6:	68 21 00 00 00       	pushq  $0x21
   153db:	e9 d0 fd ff ff       	jmpq   151b0 <_init+0x20>

00000000000153e0 <_ZN5boost3argILi9EEC1Ev@plt>:
   153e0:	ff 25 ba 4e 21 00    	jmpq   *0x214eba(%rip)        # 22a2a0 <_GLOBAL_OFFSET_TABLE_+0x128>
   153e6:	68 22 00 00 00       	pushq  $0x22
   153eb:	e9 c0 fd ff ff       	jmpq   151b0 <_init+0x20>

00000000000153f0 <_ZN5boost6detail12shared_countC1ERKS1_@plt>:
   153f0:	ff 25 b2 4e 21 00    	jmpq   *0x214eb2(%rip)        # 22a2a8 <_GLOBAL_OFFSET_TABLE_+0x130>
   153f6:	68 23 00 00 00       	pushq  $0x23
   153fb:	e9 b0 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015400 <close@plt>:
   15400:	ff 25 aa 4e 21 00    	jmpq   *0x214eaa(%rip)        # 22a2b0 <_GLOBAL_OFFSET_TABLE_+0x138>
   15406:	68 24 00 00 00       	pushq  $0x24
   1540b:	e9 a0 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015410 <_ZN6xaxaxa9ExceptionD1Ev@plt>:
   15410:	ff 25 a2 4e 21 00    	jmpq   *0x214ea2(%rip)        # 22a2b8 <_GLOBAL_OFFSET_TABLE_+0x140>
   15416:	68 25 00 00 00       	pushq  $0x25
   1541b:	e9 90 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015420 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_@plt>:
   15420:	ff 25 9a 4e 21 00    	jmpq   *0x214e9a(%rip)        # 22a2c0 <_GLOBAL_OFFSET_TABLE_+0x148>
   15426:	68 26 00 00 00       	pushq  $0x26
   1542b:	e9 80 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015430 <_ZN5boost3argILi8EEC1Ev@plt>:
   15430:	ff 25 92 4e 21 00    	jmpq   *0x214e92(%rip)        # 22a2c8 <_GLOBAL_OFFSET_TABLE_+0x150>
   15436:	68 27 00 00 00       	pushq  $0x27
   1543b:	e9 70 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015440 <_ZNSt4pairIKibEC1IS0_bEEOS_IT_T0_E@plt>:
   15440:	ff 25 8a 4e 21 00    	jmpq   *0x214e8a(%rip)        # 22a2d0 <_GLOBAL_OFFSET_TABLE_+0x158>
   15446:	68 28 00 00 00       	pushq  $0x28
   1544b:	e9 60 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015450 <_ZNKSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE8key_compEv@plt>:
   15450:	ff 25 82 4e 21 00    	jmpq   *0x214e82(%rip)        # 22a2d8 <_GLOBAL_OFFSET_TABLE_+0x160>
   15456:	68 29 00 00 00       	pushq  $0x29
   1545b:	e9 50 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015460 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_@plt>:
   15460:	ff 25 7a 4e 21 00    	jmpq   *0x214e7a(%rip)        # 22a2e0 <_GLOBAL_OFFSET_TABLE_+0x168>
   15466:	68 2a 00 00 00       	pushq  $0x2a
   1546b:	e9 40 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015470 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEmmEv@plt>:
   15470:	ff 25 72 4e 21 00    	jmpq   *0x214e72(%rip)        # 22a2e8 <_GLOBAL_OFFSET_TABLE_+0x170>
   15476:	68 2b 00 00 00       	pushq  $0x2b
   1547b:	e9 30 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015480 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE5beginEv@plt>:
   15480:	ff 25 6a 4e 21 00    	jmpq   *0x214e6a(%rip)        # 22a2f0 <_GLOBAL_OFFSET_TABLE_+0x178>
   15486:	68 2c 00 00 00       	pushq  $0x2c
   1548b:	e9 20 fd ff ff       	jmpq   151b0 <_init+0x20>

0000000000015490 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseERS1_@plt>:
   15490:	ff 25 62 4e 21 00    	jmpq   *0x214e62(%rip)        # 22a2f8 <_GLOBAL_OFFSET_TABLE_+0x180>
   15496:	68 2d 00 00 00       	pushq  $0x2d
   1549b:	e9 10 fd ff ff       	jmpq   151b0 <_init+0x20>

00000000000154a0 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEC1IS0_S4_EEOS_IT_T0_E@plt>:
   154a0:	ff 25 5a 4e 21 00    	jmpq   *0x214e5a(%rip)        # 22a300 <_GLOBAL_OFFSET_TABLE_+0x188>
   154a6:	68 2e 00 00 00       	pushq  $0x2e
   154ab:	e9 00 fd ff ff       	jmpq   151b0 <_init+0x20>

00000000000154b0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv@plt>:
   154b0:	ff 25 52 4e 21 00    	jmpq   *0x214e52(%rip)        # 22a308 <_GLOBAL_OFFSET_TABLE_+0x190>
   154b6:	68 2f 00 00 00       	pushq  $0x2f
   154bb:	e9 f0 fc ff ff       	jmpq   151b0 <_init+0x20>

00000000000154c0 <_ZN6xaxaxa7Sockets12IPv6EndPointC1ER12sockaddr_in6@plt>:
   154c0:	ff 25 4a 4e 21 00    	jmpq   *0x214e4a(%rip)        # 22a310 <_GLOBAL_OFFSET_TABLE_+0x198>
   154c6:	68 30 00 00 00       	pushq  $0x30
   154cb:	e9 e0 fc ff ff       	jmpq   151b0 <_init+0x20>

00000000000154d0 <_ZNSt13_Rb_tree_nodeISt4pairIKibEEC1IIS2_EEEDpOT_@plt>:
   154d0:	ff 25 42 4e 21 00    	jmpq   *0x214e42(%rip)        # 22a318 <_GLOBAL_OFFSET_TABLE_+0x1a0>
   154d6:	68 31 00 00 00       	pushq  $0x31
   154db:	e9 d0 fc ff ff       	jmpq   151b0 <_init+0x20>

00000000000154e0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE3endEv@plt>:
   154e0:	ff 25 3a 4e 21 00    	jmpq   *0x214e3a(%rip)        # 22a320 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   154e6:	68 32 00 00 00       	pushq  $0x32
   154eb:	e9 c0 fc ff ff       	jmpq   151b0 <_init+0x20>

00000000000154f0 <_ZN6xaxaxa7Sockets13SocketManager6CancelENS0_6SocketE@plt>:
   154f0:	ff 25 32 4e 21 00    	jmpq   *0x214e32(%rip)        # 22a328 <_GLOBAL_OFFSET_TABLE_+0x1b0>
   154f6:	68 33 00 00 00       	pushq  $0x33
   154fb:	e9 b0 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015500 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_@plt>:
   15500:	ff 25 2a 4e 21 00    	jmpq   *0x214e2a(%rip)        # 22a330 <_GLOBAL_OFFSET_TABLE_+0x1b8>
   15506:	68 34 00 00 00       	pushq  $0x34
   1550b:	e9 a0 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015510 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_@plt>:
   15510:	ff 25 22 4e 21 00    	jmpq   *0x214e22(%rip)        # 22a338 <_GLOBAL_OFFSET_TABLE_+0x1c0>
   15516:	68 35 00 00 00       	pushq  $0x35
   1551b:	e9 90 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015520 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEppEi@plt>:
   15520:	ff 25 1a 4e 21 00    	jmpq   *0x214e1a(%rip)        # 22a340 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   15526:	68 36 00 00 00       	pushq  $0x36
   1552b:	e9 80 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015530 <_ZN6xaxaxa6BufferD1Ev@plt>:
   15530:	ff 25 12 4e 21 00    	jmpq   *0x214e12(%rip)        # 22a348 <_GLOBAL_OFFSET_TABLE_+0x1d0>
   15536:	68 37 00 00 00       	pushq  $0x37
   1553b:	e9 70 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015540 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE21_M_get_Node_allocatorEv@plt>:
   15540:	ff 25 0a 4e 21 00    	jmpq   *0x214e0a(%rip)        # 22a350 <_GLOBAL_OFFSET_TABLE_+0x1d8>
   15546:	68 38 00 00 00       	pushq  $0x38
   1554b:	e9 60 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015550 <epoll_create@plt>:
   15550:	ff 25 02 4e 21 00    	jmpq   *0x214e02(%rip)        # 22a358 <_GLOBAL_OFFSET_TABLE_+0x1e0>
   15556:	68 39 00 00 00       	pushq  $0x39
   1555b:	e9 50 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>:
   15560:	ff 25 fa 4d 21 00    	jmpq   *0x214dfa(%rip)        # 22a360 <_GLOBAL_OFFSET_TABLE_+0x1e8>
   15566:	68 3a 00 00 00       	pushq  $0x3a
   1556b:	e9 40 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015570 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base@plt>:
   15570:	ff 25 f2 4d 21 00    	jmpq   *0x214df2(%rip)        # 22a368 <_GLOBAL_OFFSET_TABLE_+0x1f0>
   15576:	68 3b 00 00 00       	pushq  $0x3b
   1557b:	e9 30 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>:
   15580:	ff 25 ea 4d 21 00    	jmpq   *0x214dea(%rip)        # 22a370 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15586:	68 3c 00 00 00       	pushq  $0x3c
   1558b:	e9 20 fc ff ff       	jmpq   151b0 <_init+0x20>

0000000000015590 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEC2Ev@plt>:
   15590:	ff 25 e2 4d 21 00    	jmpq   *0x214de2(%rip)        # 22a378 <_GLOBAL_OFFSET_TABLE_+0x200>
   15596:	68 3d 00 00 00       	pushq  $0x3d
   1559b:	e9 10 fc ff ff       	jmpq   151b0 <_init+0x20>

00000000000155a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>:
   155a0:	ff 25 da 4d 21 00    	jmpq   *0x214dda(%rip)        # 22a380 <_GLOBAL_OFFSET_TABLE_+0x208>
   155a6:	68 3e 00 00 00       	pushq  $0x3e
   155ab:	e9 00 fc ff ff       	jmpq   151b0 <_init+0x20>

00000000000155b0 <_Znam@plt>:
   155b0:	ff 25 d2 4d 21 00    	jmpq   *0x214dd2(%rip)        # 22a388 <_GLOBAL_OFFSET_TABLE_+0x210>
   155b6:	68 3f 00 00 00       	pushq  $0x3f
   155bb:	e9 f0 fb ff ff       	jmpq   151b0 <_init+0x20>

00000000000155c0 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEC1IS4_vEERS0_OT_@plt>:
   155c0:	ff 25 ca 4d 21 00    	jmpq   *0x214dca(%rip)        # 22a390 <_GLOBAL_OFFSET_TABLE_+0x218>
   155c6:	68 40 00 00 00       	pushq  $0x40
   155cb:	e9 e0 fb ff ff       	jmpq   151b0 <_init+0x20>

00000000000155d0 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_@plt>:
   155d0:	ff 25 c2 4d 21 00    	jmpq   *0x214dc2(%rip)        # 22a398 <_GLOBAL_OFFSET_TABLE_+0x220>
   155d6:	68 41 00 00 00       	pushq  $0x41
   155db:	e9 d0 fb ff ff       	jmpq   151b0 <_init+0x20>

00000000000155e0 <_ZN6xaxaxa6BufferC1Ei@plt>:
   155e0:	ff 25 ba 4d 21 00    	jmpq   *0x214dba(%rip)        # 22a3a0 <_GLOBAL_OFFSET_TABLE_+0x228>
   155e6:	68 42 00 00 00       	pushq  $0x42
   155eb:	e9 c0 fb ff ff       	jmpq   151b0 <_init+0x20>

00000000000155f0 <_ZdlPv@plt>:
   155f0:	ff 25 b2 4d 21 00    	jmpq   *0x214db2(%rip)        # 22a3a8 <_GLOBAL_OFFSET_TABLE_+0x230>
   155f6:	68 43 00 00 00       	pushq  $0x43
   155fb:	e9 b0 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_M_rootEv@plt>:
   15600:	ff 25 aa 4d 21 00    	jmpq   *0x214daa(%rip)        # 22a3b0 <_GLOBAL_OFFSET_TABLE_+0x238>
   15606:	68 44 00 00 00       	pushq  $0x44
   1560b:	e9 a0 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015610 <htons@plt>:
   15610:	ff 25 a2 4d 21 00    	jmpq   *0x214da2(%rip)        # 22a3b8 <_GLOBAL_OFFSET_TABLE_+0x240>
   15616:	68 45 00 00 00       	pushq  $0x45
   1561b:	e9 90 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015620 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEE13_M_const_castEv@plt>:
   15620:	ff 25 9a 4d 21 00    	jmpq   *0x214d9a(%rip)        # 22a3c0 <_GLOBAL_OFFSET_TABLE_+0x248>
   15626:	68 46 00 00 00       	pushq  $0x46
   1562b:	e9 80 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015630 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE8max_sizeEv@plt>:
   15630:	ff 25 92 4d 21 00    	jmpq   *0x214d92(%rip)        # 22a3c8 <_GLOBAL_OFFSET_TABLE_+0x250>
   15636:	68 47 00 00 00       	pushq  $0x47
   1563b:	e9 70 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015640 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE8allocateEmPKv@plt>:
   15640:	ff 25 8a 4d 21 00    	jmpq   *0x214d8a(%rip)        # 22a3d0 <_GLOBAL_OFFSET_TABLE_+0x258>
   15646:	68 48 00 00 00       	pushq  $0x48
   1564b:	e9 60 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015650 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_@plt>:
   15650:	ff 25 82 4d 21 00    	jmpq   *0x214d82(%rip)        # 22a3d8 <_GLOBAL_OFFSET_TABLE_+0x260>
   15656:	68 49 00 00 00       	pushq  $0x49
   1565b:	e9 50 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015660 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev@plt>:
   15660:	ff 25 7a 4d 21 00    	jmpq   *0x214d7a(%rip)        # 22a3e0 <_GLOBAL_OFFSET_TABLE_+0x268>
   15666:	68 4a 00 00 00       	pushq  $0x4a
   1566b:	e9 40 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015670 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceISA_E4typeE@plt>:
   15670:	ff 25 72 4d 21 00    	jmpq   *0x214d72(%rip)        # 22a3e8 <_GLOBAL_OFFSET_TABLE_+0x270>
   15676:	68 4b 00 00 00       	pushq  $0x4b
   1567b:	e9 30 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015680 <_ZN6xaxaxa9ExceptionC1Ei@plt>:
   15680:	ff 25 6a 4d 21 00    	jmpq   *0x214d6a(%rip)        # 22a3f0 <_GLOBAL_OFFSET_TABLE_+0x278>
   15686:	68 4c 00 00 00       	pushq  $0x4c
   1568b:	e9 20 fb ff ff       	jmpq   151b0 <_init+0x20>

0000000000015690 <_ZN6xaxaxa6ObjectC2ERKS0_@plt>:
   15690:	ff 25 62 4d 21 00    	jmpq   *0x214d62(%rip)        # 22a3f8 <_GLOBAL_OFFSET_TABLE_+0x280>
   15696:	68 4d 00 00 00       	pushq  $0x4d
   1569b:	e9 10 fb ff ff       	jmpq   151b0 <_init+0x20>

00000000000156a0 <_ZN5boost3argILi7EEC1Ev@plt>:
   156a0:	ff 25 5a 4d 21 00    	jmpq   *0x214d5a(%rip)        # 22a400 <_GLOBAL_OFFSET_TABLE_+0x288>
   156a6:	68 4e 00 00 00       	pushq  $0x4e
   156ab:	e9 00 fb ff ff       	jmpq   151b0 <_init+0x20>

00000000000156b0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_M_rootEv@plt>:
   156b0:	ff 25 52 4d 21 00    	jmpq   *0x214d52(%rip)        # 22a408 <_GLOBAL_OFFSET_TABLE_+0x290>
   156b6:	68 4f 00 00 00       	pushq  $0x4f
   156bb:	e9 f0 fa ff ff       	jmpq   151b0 <_init+0x20>

00000000000156c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_get_nodeEv@plt>:
   156c0:	ff 25 4a 4d 21 00    	jmpq   *0x214d4a(%rip)        # 22a410 <_GLOBAL_OFFSET_TABLE_+0x298>
   156c6:	68 50 00 00 00       	pushq  $0x50
   156cb:	e9 e0 fa ff ff       	jmpq   151b0 <_init+0x20>

00000000000156d0 <_ZSt7forwardIKiEOT_RNSt16remove_referenceIS1_E4typeE@plt>:
   156d0:	ff 25 42 4d 21 00    	jmpq   *0x214d42(%rip)        # 22a418 <_GLOBAL_OFFSET_TABLE_+0x2a0>
   156d6:	68 51 00 00 00       	pushq  $0x51
   156db:	e9 d0 fa ff ff       	jmpq   151b0 <_init+0x20>

00000000000156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>:
   156e0:	ff 25 3a 4d 21 00    	jmpq   *0x214d3a(%rip)        # 22a420 <_GLOBAL_OFFSET_TABLE_+0x2a8>
   156e6:	68 52 00 00 00       	pushq  $0x52
   156eb:	e9 c0 fa ff ff       	jmpq   151b0 <_init+0x20>

00000000000156f0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEneERKS7_@plt>:
   156f0:	ff 25 32 4d 21 00    	jmpq   *0x214d32(%rip)        # 22a428 <_GLOBAL_OFFSET_TABLE_+0x2b0>
   156f6:	68 53 00 00 00       	pushq  $0x53
   156fb:	e9 b0 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015700 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEmmEv@plt>:
   15700:	ff 25 2a 4d 21 00    	jmpq   *0x214d2a(%rip)        # 22a430 <_GLOBAL_OFFSET_TABLE_+0x2b8>
   15706:	68 54 00 00 00       	pushq  $0x54
   1570b:	e9 a0 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015710 <_ZN5boost12shared_arrayIhEC1EPh@plt>:
   15710:	ff 25 22 4d 21 00    	jmpq   *0x214d22(%rip)        # 22a438 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   15716:	68 55 00 00 00       	pushq  $0x55
   1571b:	e9 90 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015720 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKibEEeqERKS3_@plt>:
   15720:	ff 25 1a 4d 21 00    	jmpq   *0x214d1a(%rip)        # 22a440 <_GLOBAL_OFFSET_TABLE_+0x2c8>
   15726:	68 56 00 00 00       	pushq  $0x56
   1572b:	e9 80 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015730 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>:
   15730:	ff 25 12 4d 21 00    	jmpq   *0x214d12(%rip)        # 22a448 <_GLOBAL_OFFSET_TABLE_+0x2d0>
   15736:	68 57 00 00 00       	pushq  $0x57
   1573b:	e9 70 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015740 <__cxa_rethrow@plt>:
   15740:	ff 25 0a 4d 21 00    	jmpq   *0x214d0a(%rip)        # 22a450 <_GLOBAL_OFFSET_TABLE_+0x2d8>
   15746:	68 58 00 00 00       	pushq  $0x58
   1574b:	e9 60 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015750 <_ZNSt8ios_base4InitC1Ev@plt>:
   15750:	ff 25 02 4d 21 00    	jmpq   *0x214d02(%rip)        # 22a458 <_GLOBAL_OFFSET_TABLE_+0x2e0>
   15756:	68 59 00 00 00       	pushq  $0x59
   1575b:	e9 50 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015760 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_@plt>:
   15760:	ff 25 fa 4c 21 00    	jmpq   *0x214cfa(%rip)        # 22a460 <_GLOBAL_OFFSET_TABLE_+0x2e8>
   15766:	68 5a 00 00 00       	pushq  $0x5a
   1576b:	e9 40 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015770 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv@plt>:
   15770:	ff 25 f2 4c 21 00    	jmpq   *0x214cf2(%rip)        # 22a468 <_GLOBAL_OFFSET_TABLE_+0x2f0>
   15776:	68 5b 00 00 00       	pushq  $0x5b
   1577b:	e9 30 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015780 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IRS7_bvEEOT_OT0_@plt>:
   15780:	ff 25 ea 4c 21 00    	jmpq   *0x214cea(%rip)        # 22a470 <_GLOBAL_OFFSET_TABLE_+0x2f8>
   15786:	68 5c 00 00 00       	pushq  $0x5c
   1578b:	e9 20 fa ff ff       	jmpq   151b0 <_init+0x20>

0000000000015790 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>:
   15790:	ff 25 e2 4c 21 00    	jmpq   *0x214ce2(%rip)        # 22a478 <_GLOBAL_OFFSET_TABLE_+0x300>
   15796:	68 5d 00 00 00       	pushq  $0x5d
   1579b:	e9 10 fa ff ff       	jmpq   151b0 <_init+0x20>

00000000000157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>:
   157a0:	ff 25 da 4c 21 00    	jmpq   *0x214cda(%rip)        # 22a480 <_GLOBAL_OFFSET_TABLE_+0x308>
   157a6:	68 5e 00 00 00       	pushq  $0x5e
   157ab:	e9 00 fa ff ff       	jmpq   151b0 <_init+0x20>

00000000000157b0 <read@plt>:
   157b0:	ff 25 d2 4c 21 00    	jmpq   *0x214cd2(%rip)        # 22a488 <_GLOBAL_OFFSET_TABLE_+0x310>
   157b6:	68 5f 00 00 00       	pushq  $0x5f
   157bb:	e9 f0 f9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>:
   157c0:	ff 25 ca 4c 21 00    	jmpq   *0x214cca(%rip)        # 22a490 <_GLOBAL_OFFSET_TABLE_+0x318>
   157c6:	68 60 00 00 00       	pushq  $0x60
   157cb:	e9 e0 f9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000157d0 <malloc@plt>:
   157d0:	ff 25 c2 4c 21 00    	jmpq   *0x214cc2(%rip)        # 22a498 <_GLOBAL_OFFSET_TABLE_+0x320>
   157d6:	68 61 00 00 00       	pushq  $0x61
   157db:	e9 d0 f9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000157e0 <_ZN6xaxaxa7Sockets6Socket8GetFlagsEv@plt>:
   157e0:	ff 25 ba 4c 21 00    	jmpq   *0x214cba(%rip)        # 22a4a0 <_GLOBAL_OFFSET_TABLE_+0x328>
   157e6:	68 62 00 00 00       	pushq  $0x62
   157eb:	e9 c0 f9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000157f0 <recv@plt>:
   157f0:	ff 25 b2 4c 21 00    	jmpq   *0x214cb2(%rip)        # 22a4a8 <_GLOBAL_OFFSET_TABLE_+0x330>
   157f6:	68 63 00 00 00       	pushq  $0x63
   157fb:	e9 b0 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015800 <_ZNSaISt13_Rb_tree_nodeISt4pairIKibEEED2Ev@plt>:
   15800:	ff 25 aa 4c 21 00    	jmpq   *0x214caa(%rip)        # 22a4b0 <_GLOBAL_OFFSET_TABLE_+0x338>
   15806:	68 64 00 00 00       	pushq  $0x64
   1580b:	e9 a0 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015810 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE8allocateEmPKv@plt>:
   15810:	ff 25 a2 4c 21 00    	jmpq   *0x214ca2(%rip)        # 22a4b8 <_GLOBAL_OFFSET_TABLE_+0x340>
   15816:	68 65 00 00 00       	pushq  $0x65
   1581b:	e9 90 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015820 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>:
   15820:	ff 25 9a 4c 21 00    	jmpq   *0x214c9a(%rip)        # 22a4c0 <_GLOBAL_OFFSET_TABLE_+0x348>
   15826:	68 66 00 00 00       	pushq  $0x66
   1582b:	e9 80 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015830 <_ZN5boost6detail12shared_count4swapERS1_@plt>:
   15830:	ff 25 92 4c 21 00    	jmpq   *0x214c92(%rip)        # 22a4c8 <_GLOBAL_OFFSET_TABLE_+0x350>
   15836:	68 67 00 00 00       	pushq  $0x67
   1583b:	e9 70 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015840 <_ZSt4swapIPhEvRT_S2_@plt>:
   15840:	ff 25 8a 4c 21 00    	jmpq   *0x214c8a(%rip)        # 22a4d0 <_GLOBAL_OFFSET_TABLE_+0x358>
   15846:	68 68 00 00 00       	pushq  $0x68
   1584b:	e9 60 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015850 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>:
   15850:	ff 25 82 4c 21 00    	jmpq   *0x214c82(%rip)        # 22a4d8 <_GLOBAL_OFFSET_TABLE_+0x360>
   15856:	68 69 00 00 00       	pushq  $0x69
   1585b:	e9 50 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015860 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoC1Ev@plt>:
   15860:	ff 25 7a 4c 21 00    	jmpq   *0x214c7a(%rip)        # 22a4e0 <_GLOBAL_OFFSET_TABLE_+0x368>
   15866:	68 6a 00 00 00       	pushq  $0x6a
   1586b:	e9 40 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015870 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_create_nodeIIS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_@plt>:
   15870:	ff 25 72 4c 21 00    	jmpq   *0x214c72(%rip)        # 22a4e8 <_GLOBAL_OFFSET_TABLE_+0x370>
   15876:	68 6b 00 00 00       	pushq  $0x6b
   1587b:	e9 30 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015880 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>:
   15880:	ff 25 6a 4c 21 00    	jmpq   *0x214c6a(%rip)        # 22a4f0 <_GLOBAL_OFFSET_TABLE_+0x378>
   15886:	68 6c 00 00 00       	pushq  $0x6c
   1588b:	e9 20 f9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015890 <_ZNK5boost21checked_array_deleterIhEclEPh@plt>:
   15890:	ff 25 62 4c 21 00    	jmpq   *0x214c62(%rip)        # 22a4f8 <_GLOBAL_OFFSET_TABLE_+0x380>
   15896:	68 6d 00 00 00       	pushq  $0x6d
   1589b:	e9 10 f9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000158a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
   158a0:	ff 25 5a 4c 21 00    	jmpq   *0x214c5a(%rip)        # 22a500 <_GLOBAL_OFFSET_TABLE_+0x388>
   158a6:	68 6e 00 00 00       	pushq  $0x6e
   158ab:	e9 00 f9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000158b0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEC1Ev@plt>:
   158b0:	ff 25 52 4c 21 00    	jmpq   *0x214c52(%rip)        # 22a508 <_GLOBAL_OFFSET_TABLE_+0x390>
   158b6:	68 6f 00 00 00       	pushq  $0x6f
   158bb:	e9 f0 f8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000158c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_E@plt>:
   158c0:	ff 25 4a 4c 21 00    	jmpq   *0x214c4a(%rip)        # 22a510 <_GLOBAL_OFFSET_TABLE_+0x398>
   158c6:	68 70 00 00 00       	pushq  $0x70
   158cb:	e9 e0 f8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000158d0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv@plt>:
   158d0:	ff 25 42 4c 21 00    	jmpq   *0x214c42(%rip)        # 22a518 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   158d6:	68 71 00 00 00       	pushq  $0x71
   158db:	e9 d0 f8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>:
   158e0:	ff 25 3a 4c 21 00    	jmpq   *0x214c3a(%rip)        # 22a520 <_GLOBAL_OFFSET_TABLE_+0x3a8>
   158e6:	68 72 00 00 00       	pushq  $0x72
   158eb:	e9 c0 f8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000158f0 <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi@plt>:
   158f0:	ff 25 32 4c 21 00    	jmpq   *0x214c32(%rip)        # 22a528 <_GLOBAL_OFFSET_TABLE_+0x3b0>
   158f6:	68 73 00 00 00       	pushq  $0x73
   158fb:	e9 b0 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015900 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>:
   15900:	ff 25 2a 4c 21 00    	jmpq   *0x214c2a(%rip)        # 22a530 <_GLOBAL_OFFSET_TABLE_+0x3b8>
   15906:	68 74 00 00 00       	pushq  $0x74
   1590b:	e9 a0 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015910 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_@plt>:
   15910:	ff 25 22 4c 21 00    	jmpq   *0x214c22(%rip)        # 22a538 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   15916:	68 75 00 00 00       	pushq  $0x75
   1591b:	e9 90 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015920 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>:
   15920:	ff 25 1a 4c 21 00    	jmpq   *0x214c1a(%rip)        # 22a540 <_GLOBAL_OFFSET_TABLE_+0x3c8>
   15926:	68 76 00 00 00       	pushq  $0x76
   1592b:	e9 80 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015930 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEppEv@plt>:
   15930:	ff 25 12 4c 21 00    	jmpq   *0x214c12(%rip)        # 22a548 <_GLOBAL_OFFSET_TABLE_+0x3d0>
   15936:	68 77 00 00 00       	pushq  $0x77
   1593b:	e9 70 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015940 <_ZNSsC1ERKSs@plt>:
   15940:	ff 25 0a 4c 21 00    	jmpq   *0x214c0a(%rip)        # 22a550 <_GLOBAL_OFFSET_TABLE_+0x3d8>
   15946:	68 78 00 00 00       	pushq  $0x78
   1594b:	e9 60 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015950 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1Ev@plt>:
   15950:	ff 25 02 4c 21 00    	jmpq   *0x214c02(%rip)        # 22a558 <_GLOBAL_OFFSET_TABLE_+0x3e0>
   15956:	68 79 00 00 00       	pushq  $0x79
   1595b:	e9 50 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015960 <_ZN6xaxaxa7Sockets6SOCKS53tmpC1Ev@plt>:
   15960:	ff 25 fa 4b 21 00    	jmpq   *0x214bfa(%rip)        # 22a560 <_GLOBAL_OFFSET_TABLE_+0x3e8>
   15966:	68 7a 00 00 00       	pushq  $0x7a
   1596b:	e9 40 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015970 <__cxa_atexit@plt>:
   15970:	ff 25 f2 4b 21 00    	jmpq   *0x214bf2(%rip)        # 22a568 <_GLOBAL_OFFSET_TABLE_+0x3f0>
   15976:	68 7b 00 00 00       	pushq  $0x7b
   1597b:	e9 30 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015980 <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE@plt>:
   15980:	ff 25 ea 4b 21 00    	jmpq   *0x214bea(%rip)        # 22a570 <_GLOBAL_OFFSET_TABLE_+0x3f8>
   15986:	68 7c 00 00 00       	pushq  $0x7c
   1598b:	e9 20 f8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015990 <_ZnwmPv@plt>:
   15990:	ff 25 e2 4b 21 00    	jmpq   *0x214be2(%rip)        # 22a578 <_GLOBAL_OFFSET_TABLE_+0x400>
   15996:	68 7d 00 00 00       	pushq  $0x7d
   1599b:	e9 10 f8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000159a0 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEC1Ev@plt>:
   159a0:	ff 25 da 4b 21 00    	jmpq   *0x214bda(%rip)        # 22a580 <_GLOBAL_OFFSET_TABLE_+0x408>
   159a6:	68 7e 00 00 00       	pushq  $0x7e
   159ab:	e9 00 f8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000159b0 <_ZN5boost3argILi4EEC1Ev@plt>:
   159b0:	ff 25 d2 4b 21 00    	jmpq   *0x214bd2(%rip)        # 22a588 <_GLOBAL_OFFSET_TABLE_+0x410>
   159b6:	68 7f 00 00 00       	pushq  $0x7f
   159bb:	e9 f0 f7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000159c0 <_ZN6xaxaxa13StringBuilderD1Ev@plt>:
   159c0:	ff 25 ca 4b 21 00    	jmpq   *0x214bca(%rip)        # 22a590 <_GLOBAL_OFFSET_TABLE_+0x418>
   159c6:	68 80 00 00 00       	pushq  $0x80
   159cb:	e9 e0 f7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000159d0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>:
   159d0:	ff 25 c2 4b 21 00    	jmpq   *0x214bc2(%rip)        # 22a598 <_GLOBAL_OFFSET_TABLE_+0x420>
   159d6:	68 81 00 00 00       	pushq  $0x81
   159db:	e9 d0 f7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000159e0 <_ZN6xaxaxa16PointerExceptionC1Ev@plt>:
   159e0:	ff 25 ba 4b 21 00    	jmpq   *0x214bba(%rip)        # 22a5a0 <_GLOBAL_OFFSET_TABLE_+0x428>
   159e6:	68 82 00 00 00       	pushq  $0x82
   159eb:	e9 c0 f7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000159f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5clearEv@plt>:
   159f0:	ff 25 b2 4b 21 00    	jmpq   *0x214bb2(%rip)        # 22a5a8 <_GLOBAL_OFFSET_TABLE_+0x430>
   159f6:	68 83 00 00 00       	pushq  $0x83
   159fb:	e9 b0 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>:
   15a00:	ff 25 aa 4b 21 00    	jmpq   *0x214baa(%rip)        # 22a5b0 <_GLOBAL_OFFSET_TABLE_+0x438>
   15a06:	68 84 00 00 00       	pushq  $0x84
   15a0b:	e9 a0 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a10 <_ZN6xaxaxa6StreamD1Ev@plt>:
   15a10:	ff 25 a2 4b 21 00    	jmpq   *0x214ba2(%rip)        # 22a5b8 <_GLOBAL_OFFSET_TABLE_+0x440>
   15a16:	68 85 00 00 00       	pushq  $0x85
   15a1b:	e9 90 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a20 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>:
   15a20:	ff 25 9a 4b 21 00    	jmpq   *0x214b9a(%rip)        # 22a5c0 <_GLOBAL_OFFSET_TABLE_+0x448>
   15a26:	68 86 00 00 00       	pushq  $0x86
   15a2b:	e9 80 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a30 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>:
   15a30:	ff 25 92 4b 21 00    	jmpq   *0x214b92(%rip)        # 22a5c8 <_GLOBAL_OFFSET_TABLE_+0x450>
   15a36:	68 87 00 00 00       	pushq  $0x87
   15a3b:	e9 70 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a40 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_@plt>:
   15a40:	ff 25 8a 4b 21 00    	jmpq   *0x214b8a(%rip)        # 22a5d0 <_GLOBAL_OFFSET_TABLE_+0x458>
   15a46:	68 88 00 00 00       	pushq  $0x88
   15a4b:	e9 60 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt18_Rb_tree_node_base@plt>:
   15a50:	ff 25 82 4b 21 00    	jmpq   *0x214b82(%rip)        # 22a5d8 <_GLOBAL_OFFSET_TABLE_+0x460>
   15a56:	68 89 00 00 00       	pushq  $0x89
   15a5b:	e9 50 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a60 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEmmEv@plt>:
   15a60:	ff 25 7a 4b 21 00    	jmpq   *0x214b7a(%rip)        # 22a5e0 <_GLOBAL_OFFSET_TABLE_+0x468>
   15a66:	68 8a 00 00 00       	pushq  $0x8a
   15a6b:	e9 40 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>:
   15a70:	ff 25 72 4b 21 00    	jmpq   *0x214b72(%rip)        # 22a5e8 <_GLOBAL_OFFSET_TABLE_+0x470>
   15a76:	68 8b 00 00 00       	pushq  $0x8b
   15a7b:	e9 30 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a80 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E@plt>:
   15a80:	ff 25 6a 4b 21 00    	jmpq   *0x214b6a(%rip)        # 22a5f0 <_GLOBAL_OFFSET_TABLE_+0x478>
   15a86:	68 8c 00 00 00       	pushq  $0x8c
   15a8b:	e9 20 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015a90 <_ZN6xaxaxa6BufferC1EPhi@plt>:
   15a90:	ff 25 62 4b 21 00    	jmpq   *0x214b62(%rip)        # 22a5f8 <_GLOBAL_OFFSET_TABLE_+0x480>
   15a96:	68 8d 00 00 00       	pushq  $0x8d
   15a9b:	e9 10 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015aa0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EE13_M_initializeEv@plt>:
   15aa0:	ff 25 5a 4b 21 00    	jmpq   *0x214b5a(%rip)        # 22a600 <_GLOBAL_OFFSET_TABLE_+0x488>
   15aa6:	68 8e 00 00 00       	pushq  $0x8e
   15aab:	e9 00 f7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ab0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
   15ab0:	ff 25 52 4b 21 00    	jmpq   *0x214b52(%rip)        # 22a608 <_GLOBAL_OFFSET_TABLE_+0x490>
   15ab6:	68 8f 00 00 00       	pushq  $0x8f
   15abb:	e9 f0 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ac0 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKibEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>:
   15ac0:	ff 25 4a 4b 21 00    	jmpq   *0x214b4a(%rip)        # 22a610 <_GLOBAL_OFFSET_TABLE_+0x498>
   15ac6:	68 90 00 00 00       	pushq  $0x90
   15acb:	e9 e0 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>:
   15ad0:	ff 25 42 4b 21 00    	jmpq   *0x214b42(%rip)        # 22a618 <_GLOBAL_OFFSET_TABLE_+0x4a0>
   15ad6:	68 91 00 00 00       	pushq  $0x91
   15adb:	e9 d0 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ae0 <_ZN6xaxaxa2IO17FileStreamManagerD1Ev@plt>:
   15ae0:	ff 25 3a 4b 21 00    	jmpq   *0x214b3a(%rip)        # 22a620 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   15ae6:	68 92 00 00 00       	pushq  $0x92
   15aeb:	e9 c0 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015af0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8key_compEv@plt>:
   15af0:	ff 25 32 4b 21 00    	jmpq   *0x214b32(%rip)        # 22a628 <_GLOBAL_OFFSET_TABLE_+0x4b0>
   15af6:	68 93 00 00 00       	pushq  $0x93
   15afb:	e9 b0 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b00 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEE13_M_const_castEv@plt>:
   15b00:	ff 25 2a 4b 21 00    	jmpq   *0x214b2a(%rip)        # 22a630 <_GLOBAL_OFFSET_TABLE_+0x4b8>
   15b06:	68 94 00 00 00       	pushq  $0x94
   15b0b:	e9 a0 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b10 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEdeEv@plt>:
   15b10:	ff 25 22 4b 21 00    	jmpq   *0x214b22(%rip)        # 22a638 <_GLOBAL_OFFSET_TABLE_+0x4c0>
   15b16:	68 95 00 00 00       	pushq  $0x95
   15b1b:	e9 90 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>:
   15b20:	ff 25 1a 4b 21 00    	jmpq   *0x214b1a(%rip)        # 22a640 <_GLOBAL_OFFSET_TABLE_+0x4c8>
   15b26:	68 96 00 00 00       	pushq  $0x96
   15b2b:	e9 80 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b30 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERKS6_@plt>:
   15b30:	ff 25 12 4b 21 00    	jmpq   *0x214b12(%rip)        # 22a648 <_GLOBAL_OFFSET_TABLE_+0x4d0>
   15b36:	68 97 00 00 00       	pushq  $0x97
   15b3b:	e9 70 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b40 <_ZNSsD1Ev@plt>:
   15b40:	ff 25 0a 4b 21 00    	jmpq   *0x214b0a(%rip)        # 22a650 <_GLOBAL_OFFSET_TABLE_+0x4d8>
   15b46:	68 98 00 00 00       	pushq  $0x98
   15b4b:	e9 60 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b50 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>:
   15b50:	ff 25 02 4b 21 00    	jmpq   *0x214b02(%rip)        # 22a658 <_GLOBAL_OFFSET_TABLE_+0x4e0>
   15b56:	68 99 00 00 00       	pushq  $0x99
   15b5b:	e9 50 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b60 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEC1ERKSt17_Rb_tree_iteratorIS2_E@plt>:
   15b60:	ff 25 fa 4a 21 00    	jmpq   *0x214afa(%rip)        # 22a660 <_GLOBAL_OFFSET_TABLE_+0x4e8>
   15b66:	68 9a 00 00 00       	pushq  $0x9a
   15b6b:	e9 40 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b70 <_ZNSt4pairIKibEC1IbvEERS0_OT_@plt>:
   15b70:	ff 25 f2 4a 21 00    	jmpq   *0x214af2(%rip)        # 22a668 <_GLOBAL_OFFSET_TABLE_+0x4f0>
   15b76:	68 9b 00 00 00       	pushq  $0x9b
   15b7b:	e9 30 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E@plt>:
   15b80:	ff 25 ea 4a 21 00    	jmpq   *0x214aea(%rip)        # 22a670 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   15b86:	68 9c 00 00 00       	pushq  $0x9c
   15b8b:	e9 20 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015b90 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EED1Ev@plt>:
   15b90:	ff 25 e2 4a 21 00    	jmpq   *0x214ae2(%rip)        # 22a678 <_GLOBAL_OFFSET_TABLE_+0x500>
   15b96:	68 9d 00 00 00       	pushq  $0x9d
   15b9b:	e9 10 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ba0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11lower_boundERS1_@plt>:
   15ba0:	ff 25 da 4a 21 00    	jmpq   *0x214ada(%rip)        # 22a680 <_GLOBAL_OFFSET_TABLE_+0x508>
   15ba6:	68 9e 00 00 00       	pushq  $0x9e
   15bab:	e9 00 f6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015bb0 <free@plt>:
   15bb0:	ff 25 d2 4a 21 00    	jmpq   *0x214ad2(%rip)        # 22a688 <_GLOBAL_OFFSET_TABLE_+0x510>
   15bb6:	68 9f 00 00 00       	pushq  $0x9f
   15bbb:	e9 f0 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015bc0 <_ZN6xaxaxa6STRINGC1Ev@plt>:
   15bc0:	ff 25 ca 4a 21 00    	jmpq   *0x214aca(%rip)        # 22a690 <_GLOBAL_OFFSET_TABLE_+0x518>
   15bc6:	68 a0 00 00 00       	pushq  $0xa0
   15bcb:	e9 e0 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015bd0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv@plt>:
   15bd0:	ff 25 c2 4a 21 00    	jmpq   *0x214ac2(%rip)        # 22a698 <_GLOBAL_OFFSET_TABLE_+0x520>
   15bd6:	68 a1 00 00 00       	pushq  $0xa1
   15bdb:	e9 d0 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev@plt>:
   15be0:	ff 25 ba 4a 21 00    	jmpq   *0x214aba(%rip)        # 22a6a0 <_GLOBAL_OFFSET_TABLE_+0x528>
   15be6:	68 a2 00 00 00       	pushq  $0xa2
   15beb:	e9 c0 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015bf0 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEED1Ev@plt>:
   15bf0:	ff 25 b2 4a 21 00    	jmpq   *0x214ab2(%rip)        # 22a6a8 <_GLOBAL_OFFSET_TABLE_+0x530>
   15bf6:	68 a3 00 00 00       	pushq  $0xa3
   15bfb:	e9 b0 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c00 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKibEEEOT_RNSt16remove_referenceIS5_E4typeE@plt>:
   15c00:	ff 25 aa 4a 21 00    	jmpq   *0x214aaa(%rip)        # 22a6b0 <_GLOBAL_OFFSET_TABLE_+0x538>
   15c06:	68 a4 00 00 00       	pushq  $0xa4
   15c0b:	e9 a0 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c10 <_ZN5boost6detail15sp_counted_baseD2Ev@plt>:
   15c10:	ff 25 a2 4a 21 00    	jmpq   *0x214aa2(%rip)        # 22a6b8 <_GLOBAL_OFFSET_TABLE_+0x540>
   15c16:	68 a5 00 00 00       	pushq  $0xa5
   15c1b:	e9 90 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c20 <strlen@plt>:
   15c20:	ff 25 9a 4a 21 00    	jmpq   *0x214a9a(%rip)        # 22a6c0 <_GLOBAL_OFFSET_TABLE_+0x548>
   15c26:	68 a6 00 00 00       	pushq  $0xa6
   15c2b:	e9 80 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c30 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E@plt>:
   15c30:	ff 25 92 4a 21 00    	jmpq   *0x214a92(%rip)        # 22a6c8 <_GLOBAL_OFFSET_TABLE_+0x550>
   15c36:	68 a7 00 00 00       	pushq  $0xa7
   15c3b:	e9 70 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c40 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEdeEv@plt>:
   15c40:	ff 25 8a 4a 21 00    	jmpq   *0x214a8a(%rip)        # 22a6d0 <_GLOBAL_OFFSET_TABLE_+0x558>
   15c46:	68 a8 00 00 00       	pushq  $0xa8
   15c4b:	e9 60 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv@plt>:
   15c50:	ff 25 82 4a 21 00    	jmpq   *0x214a82(%rip)        # 22a6d8 <_GLOBAL_OFFSET_TABLE_+0x560>
   15c56:	68 a9 00 00 00       	pushq  $0xa9
   15c5b:	e9 50 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c60 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EED1Ev@plt>:
   15c60:	ff 25 7a 4a 21 00    	jmpq   *0x214a7a(%rip)        # 22a6e0 <_GLOBAL_OFFSET_TABLE_+0x568>
   15c66:	68 aa 00 00 00       	pushq  $0xaa
   15c6b:	e9 40 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c70 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E@plt>:
   15c70:	ff 25 72 4a 21 00    	jmpq   *0x214a72(%rip)        # 22a6e8 <_GLOBAL_OFFSET_TABLE_+0x570>
   15c76:	68 ab 00 00 00       	pushq  $0xab
   15c7b:	e9 30 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>:
   15c80:	ff 25 6a 4a 21 00    	jmpq   *0x214a6a(%rip)        # 22a6f0 <_GLOBAL_OFFSET_TABLE_+0x578>
   15c86:	68 ac 00 00 00       	pushq  $0xac
   15c8b:	e9 20 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015c90 <_ZN6xaxaxa2IO17FileStreamManager6CancelENS_4FileE@plt>:
   15c90:	ff 25 62 4a 21 00    	jmpq   *0x214a62(%rip)        # 22a6f8 <_GLOBAL_OFFSET_TABLE_+0x580>
   15c96:	68 ad 00 00 00       	pushq  $0xad
   15c9b:	e9 10 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ca0 <_ZN5boost3argILi2EEC1Ev@plt>:
   15ca0:	ff 25 5a 4a 21 00    	jmpq   *0x214a5a(%rip)        # 22a700 <_GLOBAL_OFFSET_TABLE_+0x588>
   15ca6:	68 ae 00 00 00       	pushq  $0xae
   15cab:	e9 00 f5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015cb0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_@plt>:
   15cb0:	ff 25 52 4a 21 00    	jmpq   *0x214a52(%rip)        # 22a708 <_GLOBAL_OFFSET_TABLE_+0x590>
   15cb6:	68 af 00 00 00       	pushq  $0xaf
   15cbb:	e9 f0 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015cc0 <_ZN6xaxaxa7Sockets13SocketManager8CallbackC1Ev@plt>:
   15cc0:	ff 25 4a 4a 21 00    	jmpq   *0x214a4a(%rip)        # 22a710 <_GLOBAL_OFFSET_TABLE_+0x598>
   15cc6:	68 b0 00 00 00       	pushq  $0xb0
   15ccb:	e9 e0 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015cd0 <_ZN6xaxaxa4FileC1Ei@plt>:
   15cd0:	ff 25 42 4a 21 00    	jmpq   *0x214a42(%rip)        # 22a718 <_GLOBAL_OFFSET_TABLE_+0x5a0>
   15cd6:	68 b1 00 00 00       	pushq  $0xb1
   15cdb:	e9 d0 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ce0 <_ZN5boost6detail15sp_counted_base7releaseEv@plt>:
   15ce0:	ff 25 3a 4a 21 00    	jmpq   *0x214a3a(%rip)        # 22a720 <_GLOBAL_OFFSET_TABLE_+0x5a8>
   15ce6:	68 b2 00 00 00       	pushq  $0xb2
   15ceb:	e9 c0 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015cf0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv@plt>:
   15cf0:	ff 25 32 4a 21 00    	jmpq   *0x214a32(%rip)        # 22a728 <_GLOBAL_OFFSET_TABLE_+0x5b0>
   15cf6:	68 b3 00 00 00       	pushq  $0xb3
   15cfb:	e9 b0 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d00 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE7destroyEPS9_@plt>:
   15d00:	ff 25 2a 4a 21 00    	jmpq   *0x214a2a(%rip)        # 22a730 <_GLOBAL_OFFSET_TABLE_+0x5b8>
   15d06:	68 b4 00 00 00       	pushq  $0xb4
   15d0b:	e9 a0 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d10 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE11lower_boundERS7_@plt>:
   15d10:	ff 25 22 4a 21 00    	jmpq   *0x214a22(%rip)        # 22a738 <_GLOBAL_OFFSET_TABLE_+0x5c0>
   15d16:	68 b5 00 00 00       	pushq  $0xb5
   15d1b:	e9 90 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d20 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEED2Ev@plt>:
   15d20:	ff 25 1a 4a 21 00    	jmpq   *0x214a1a(%rip)        # 22a740 <_GLOBAL_OFFSET_TABLE_+0x5c8>
   15d26:	68 b6 00 00 00       	pushq  $0xb6
   15d2b:	e9 80 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d30 <_ZN6xaxaxa7Sockets11IPv6AddressC1ER8in6_addr@plt>:
   15d30:	ff 25 12 4a 21 00    	jmpq   *0x214a12(%rip)        # 22a748 <_GLOBAL_OFFSET_TABLE_+0x5d0>
   15d36:	68 b7 00 00 00       	pushq  $0xb7
   15d3b:	e9 70 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEED2Ev@plt>:
   15d40:	ff 25 0a 4a 21 00    	jmpq   *0x214a0a(%rip)        # 22a750 <_GLOBAL_OFFSET_TABLE_+0x5d8>
   15d46:	68 b8 00 00 00       	pushq  $0xb8
   15d4b:	e9 60 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d50 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE6insertIS4_vEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EOT_@plt>:
   15d50:	ff 25 02 4a 21 00    	jmpq   *0x214a02(%rip)        # 22a758 <_GLOBAL_OFFSET_TABLE_+0x5e0>
   15d56:	68 b9 00 00 00       	pushq  $0xb9
   15d5b:	e9 50 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d60 <__cxa_finalize@plt>:
   15d60:	ff 25 fa 49 21 00    	jmpq   *0x2149fa(%rip)        # 22a760 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   15d66:	68 ba 00 00 00       	pushq  $0xba
   15d6b:	e9 40 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d70 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEmmEv@plt>:
   15d70:	ff 25 f2 49 21 00    	jmpq   *0x2149f2(%rip)        # 22a768 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   15d76:	68 bb 00 00 00       	pushq  $0xbb
   15d7b:	e9 30 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d80 <_ZNKSt4lessIiEclERKiS2_@plt>:
   15d80:	ff 25 ea 49 21 00    	jmpq   *0x2149ea(%rip)        # 22a770 <_GLOBAL_OFFSET_TABLE_+0x5f8>
   15d86:	68 bc 00 00 00       	pushq  $0xbc
   15d8b:	e9 20 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015d90 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E@plt>:
   15d90:	ff 25 e2 49 21 00    	jmpq   *0x2149e2(%rip)        # 22a778 <_GLOBAL_OFFSET_TABLE_+0x600>
   15d96:	68 bd 00 00 00       	pushq  $0xbd
   15d9b:	e9 10 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015da0 <_ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_@plt>:
   15da0:	ff 25 da 49 21 00    	jmpq   *0x2149da(%rip)        # 22a780 <_GLOBAL_OFFSET_TABLE_+0x608>
   15da6:	68 be 00 00 00       	pushq  $0xbe
   15dab:	e9 00 f4 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015db0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv@plt>:
   15db0:	ff 25 d2 49 21 00    	jmpq   *0x2149d2(%rip)        # 22a788 <_GLOBAL_OFFSET_TABLE_+0x610>
   15db6:	68 bf 00 00 00       	pushq  $0xbf
   15dbb:	e9 f0 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015dc0 <_ZN6xaxaxa6BufferC1EPhiN5boost12shared_arrayIhEE@plt>:
   15dc0:	ff 25 ca 49 21 00    	jmpq   *0x2149ca(%rip)        # 22a790 <_GLOBAL_OFFSET_TABLE_+0x618>
   15dc6:	68 c0 00 00 00       	pushq  $0xc0
   15dcb:	e9 e0 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015dd0 <_ZN5boost12shared_arrayIhEC1ERKS1_@plt>:
   15dd0:	ff 25 c2 49 21 00    	jmpq   *0x2149c2(%rip)        # 22a798 <_GLOBAL_OFFSET_TABLE_+0x620>
   15dd6:	68 c1 00 00 00       	pushq  $0xc1
   15ddb:	e9 d0 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015de0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EE13_M_initializeEv@plt>:
   15de0:	ff 25 ba 49 21 00    	jmpq   *0x2149ba(%rip)        # 22a7a0 <_GLOBAL_OFFSET_TABLE_+0x628>
   15de6:	68 c2 00 00 00       	pushq  $0xc2
   15deb:	e9 c0 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015df0 <_ZN6xaxaxa13StringBuilder6AppendEPc@plt>:
   15df0:	ff 25 b2 49 21 00    	jmpq   *0x2149b2(%rip)        # 22a7a8 <_GLOBAL_OFFSET_TABLE_+0x630>
   15df6:	68 c3 00 00 00       	pushq  $0xc3
   15dfb:	e9 b0 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e00 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE8max_sizeEv@plt>:
   15e00:	ff 25 aa 49 21 00    	jmpq   *0x2149aa(%rip)        # 22a7b0 <_GLOBAL_OFFSET_TABLE_+0x638>
   15e06:	68 c4 00 00 00       	pushq  $0xc4
   15e0b:	e9 a0 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e10 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEED1Ev@plt>:
   15e10:	ff 25 a2 49 21 00    	jmpq   *0x2149a2(%rip)        # 22a7b8 <_GLOBAL_OFFSET_TABLE_+0x640>
   15e16:	68 c5 00 00 00       	pushq  $0xc5
   15e1b:	e9 90 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>:
   15e20:	ff 25 9a 49 21 00    	jmpq   *0x21499a(%rip)        # 22a7c0 <_GLOBAL_OFFSET_TABLE_+0x648>
   15e26:	68 c6 00 00 00       	pushq  $0xc6
   15e2b:	e9 80 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e30 <_ZN6xaxaxa7Sockets9IPAddressC1ER7in_addr@plt>:
   15e30:	ff 25 92 49 21 00    	jmpq   *0x214992(%rip)        # 22a7c8 <_GLOBAL_OFFSET_TABLE_+0x650>
   15e36:	68 c7 00 00 00       	pushq  $0xc7
   15e3b:	e9 70 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e40 <ntohs@plt>:
   15e40:	ff 25 8a 49 21 00    	jmpq   *0x21498a(%rip)        # 22a7d0 <_GLOBAL_OFFSET_TABLE_+0x658>
   15e46:	68 c8 00 00 00       	pushq  $0xc8
   15e4b:	e9 60 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev@plt>:
   15e50:	ff 25 82 49 21 00    	jmpq   *0x214982(%rip)        # 22a7d8 <_GLOBAL_OFFSET_TABLE_+0x660>
   15e56:	68 c9 00 00 00       	pushq  $0xc9
   15e5b:	e9 50 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e60 <_ZNSt13_Rb_tree_nodeISt4pairIKibEED1Ev@plt>:
   15e60:	ff 25 7a 49 21 00    	jmpq   *0x21497a(%rip)        # 22a7e0 <_GLOBAL_OFFSET_TABLE_+0x668>
   15e66:	68 ca 00 00 00       	pushq  $0xca
   15e6b:	e9 40 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e70 <_ZN5boost12shared_arrayIhEaSERKS1_@plt>:
   15e70:	ff 25 72 49 21 00    	jmpq   *0x214972(%rip)        # 22a7e8 <_GLOBAL_OFFSET_TABLE_+0x670>
   15e76:	68 cb 00 00 00       	pushq  $0xcb
   15e7b:	e9 30 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e80 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb@plt>:
   15e80:	ff 25 6a 49 21 00    	jmpq   *0x21496a(%rip)        # 22a7f0 <_GLOBAL_OFFSET_TABLE_+0x678>
   15e86:	68 cc 00 00 00       	pushq  $0xcc
   15e8b:	e9 20 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015e90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEED2Ev@plt>:
   15e90:	ff 25 62 49 21 00    	jmpq   *0x214962(%rip)        # 22a7f8 <_GLOBAL_OFFSET_TABLE_+0x680>
   15e96:	68 cd 00 00 00       	pushq  $0xcd
   15e9b:	e9 10 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ea0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_E@plt>:
   15ea0:	ff 25 5a 49 21 00    	jmpq   *0x21495a(%rip)        # 22a800 <_GLOBAL_OFFSET_TABLE_+0x688>
   15ea6:	68 ce 00 00 00       	pushq  $0xce
   15eab:	e9 00 f3 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015eb0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE5clearEv@plt>:
   15eb0:	ff 25 52 49 21 00    	jmpq   *0x214952(%rip)        # 22a808 <_GLOBAL_OFFSET_TABLE_+0x690>
   15eb6:	68 cf 00 00 00       	pushq  $0xcf
   15ebb:	e9 f0 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ec0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_@plt>:
   15ec0:	ff 25 4a 49 21 00    	jmpq   *0x21494a(%rip)        # 22a810 <_GLOBAL_OFFSET_TABLE_+0x698>
   15ec6:	68 d0 00 00 00       	pushq  $0xd0
   15ecb:	e9 e0 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ed0 <_ZSt7forwardIN6xaxaxa2IO17FileStreamManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE@plt>:
   15ed0:	ff 25 42 49 21 00    	jmpq   *0x214942(%rip)        # 22a818 <_GLOBAL_OFFSET_TABLE_+0x6a0>
   15ed6:	68 d1 00 00 00       	pushq  $0xd1
   15edb:	e9 d0 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ee0 <_ZN5boost3argILi3EEC1Ev@plt>:
   15ee0:	ff 25 3a 49 21 00    	jmpq   *0x21493a(%rip)        # 22a820 <_GLOBAL_OFFSET_TABLE_+0x6a8>
   15ee6:	68 d2 00 00 00       	pushq  $0xd2
   15eeb:	e9 c0 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ef0 <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE8key_compEv@plt>:
   15ef0:	ff 25 32 49 21 00    	jmpq   *0x214932(%rip)        # 22a828 <_GLOBAL_OFFSET_TABLE_+0x6b0>
   15ef6:	68 d3 00 00 00       	pushq  $0xd3
   15efb:	e9 b0 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f00 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEED1Ev@plt>:
   15f00:	ff 25 2a 49 21 00    	jmpq   *0x21492a(%rip)        # 22a830 <_GLOBAL_OFFSET_TABLE_+0x6b8>
   15f06:	68 d4 00 00 00       	pushq  $0xd4
   15f0b:	e9 a0 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f10 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>:
   15f10:	ff 25 22 49 21 00    	jmpq   *0x214922(%rip)        # 22a838 <_GLOBAL_OFFSET_TABLE_+0x6c0>
   15f16:	68 d5 00 00 00       	pushq  $0xd5
   15f1b:	e9 90 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f20 <_ZN5boost6detail15sp_counted_base12add_ref_copyEv@plt>:
   15f20:	ff 25 1a 49 21 00    	jmpq   *0x21491a(%rip)        # 22a840 <_GLOBAL_OFFSET_TABLE_+0x6c8>
   15f26:	68 d6 00 00 00       	pushq  $0xd6
   15f2b:	e9 80 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>:
   15f30:	ff 25 12 49 21 00    	jmpq   *0x214912(%rip)        # 22a848 <_GLOBAL_OFFSET_TABLE_+0x6d0>
   15f36:	68 d7 00 00 00       	pushq  $0xd7
   15f3b:	e9 70 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f40 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEED1Ev@plt>:
   15f40:	ff 25 0a 49 21 00    	jmpq   *0x21490a(%rip)        # 22a850 <_GLOBAL_OFFSET_TABLE_+0x6d8>
   15f46:	68 d8 00 00 00       	pushq  $0xd8
   15f4b:	e9 60 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f50 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEmmEv@plt>:
   15f50:	ff 25 02 49 21 00    	jmpq   *0x214902(%rip)        # 22a858 <_GLOBAL_OFFSET_TABLE_+0x6e0>
   15f56:	68 d9 00 00 00       	pushq  $0xd9
   15f5b:	e9 50 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f60 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>:
   15f60:	ff 25 fa 48 21 00    	jmpq   *0x2148fa(%rip)        # 22a860 <_GLOBAL_OFFSET_TABLE_+0x6e8>
   15f66:	68 da 00 00 00       	pushq  $0xda
   15f6b:	e9 40 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>:
   15f70:	ff 25 f2 48 21 00    	jmpq   *0x2148f2(%rip)        # 22a868 <_GLOBAL_OFFSET_TABLE_+0x6f0>
   15f76:	68 db 00 00 00       	pushq  $0xdb
   15f7b:	e9 30 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_create_nodeIIS6_EEEPSt13_Rb_tree_nodeIS6_EDpOT_@plt>:
   15f80:	ff 25 ea 48 21 00    	jmpq   *0x2148ea(%rip)        # 22a870 <_GLOBAL_OFFSET_TABLE_+0x6f8>
   15f86:	68 dc 00 00 00       	pushq  $0xdc
   15f8b:	e9 20 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015f90 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_@plt>:
   15f90:	ff 25 e2 48 21 00    	jmpq   *0x2148e2(%rip)        # 22a878 <_GLOBAL_OFFSET_TABLE_+0x700>
   15f96:	68 dd 00 00 00       	pushq  $0xdd
   15f9b:	e9 10 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015fa0 <_ZNK6xaxaxa6Buffer9SubBufferEii@plt>:
   15fa0:	ff 25 da 48 21 00    	jmpq   *0x2148da(%rip)        # 22a880 <_GLOBAL_OFFSET_TABLE_+0x708>
   15fa6:	68 de 00 00 00       	pushq  $0xde
   15fab:	e9 00 f2 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>:
   15fb0:	ff 25 d2 48 21 00    	jmpq   *0x2148d2(%rip)        # 22a888 <_GLOBAL_OFFSET_TABLE_+0x710>
   15fb6:	68 df 00 00 00       	pushq  $0xdf
   15fbb:	e9 f0 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015fc0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IRS3_bvEEOT_OT0_@plt>:
   15fc0:	ff 25 ca 48 21 00    	jmpq   *0x2148ca(%rip)        # 22a890 <_GLOBAL_OFFSET_TABLE_+0x718>
   15fc6:	68 e0 00 00 00       	pushq  $0xe0
   15fcb:	e9 e0 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015fd0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E@plt>:
   15fd0:	ff 25 c2 48 21 00    	jmpq   *0x2148c2(%rip)        # 22a898 <_GLOBAL_OFFSET_TABLE_+0x720>
   15fd6:	68 e1 00 00 00       	pushq  $0xe1
   15fdb:	e9 d0 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015fe0 <_ZNSsC1EPKcRKSaIcE@plt>:
   15fe0:	ff 25 ba 48 21 00    	jmpq   *0x2148ba(%rip)        # 22a8a0 <_GLOBAL_OFFSET_TABLE_+0x728>
   15fe6:	68 e2 00 00 00       	pushq  $0xe2
   15feb:	e9 c0 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000015ff0 <strerror@plt>:
   15ff0:	ff 25 b2 48 21 00    	jmpq   *0x2148b2(%rip)        # 22a8a8 <_GLOBAL_OFFSET_TABLE_+0x730>
   15ff6:	68 e3 00 00 00       	pushq  $0xe3
   15ffb:	e9 b0 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016000 <epoll_ctl@plt>:
   16000:	ff 25 aa 48 21 00    	jmpq   *0x2148aa(%rip)        # 22a8b0 <_GLOBAL_OFFSET_TABLE_+0x738>
   16006:	68 e4 00 00 00       	pushq  $0xe4
   1600b:	e9 a0 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016010 <_ZN6xaxaxa7Sockets6SocketC1Ei@plt>:
   16010:	ff 25 a2 48 21 00    	jmpq   *0x2148a2(%rip)        # 22a8b8 <_GLOBAL_OFFSET_TABLE_+0x740>
   16016:	68 e5 00 00 00       	pushq  $0xe5
   1601b:	e9 90 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016020 <_ZN6xaxaxa6ObjectD1Ev@plt>:
   16020:	ff 25 9a 48 21 00    	jmpq   *0x21489a(%rip)        # 22a8c0 <_GLOBAL_OFFSET_TABLE_+0x748>
   16026:	68 e6 00 00 00       	pushq  $0xe6
   1602b:	e9 80 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016030 <_ZN6xaxaxa7Sockets6Socket6AcceptEi@plt>:
   16030:	ff 25 92 48 21 00    	jmpq   *0x214892(%rip)        # 22a8c8 <_GLOBAL_OFFSET_TABLE_+0x750>
   16036:	68 e7 00 00 00       	pushq  $0xe7
   1603b:	e9 70 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016040 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEppEv@plt>:
   16040:	ff 25 8a 48 21 00    	jmpq   *0x21488a(%rip)        # 22a8d0 <_GLOBAL_OFFSET_TABLE_+0x758>
   16046:	68 e8 00 00 00       	pushq  $0xe8
   1604b:	e9 60 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016050 <_ZN6xaxaxa6ObjectC2Ev@plt>:
   16050:	ff 25 82 48 21 00    	jmpq   *0x214882(%rip)        # 22a8d8 <_GLOBAL_OFFSET_TABLE_+0x760>
   16056:	68 e9 00 00 00       	pushq  $0xe9
   1605b:	e9 50 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016060 <_ZN6xaxaxa9ExceptionC1ESs@plt>:
   16060:	ff 25 7a 48 21 00    	jmpq   *0x21487a(%rip)        # 22a8e0 <_GLOBAL_OFFSET_TABLE_+0x768>
   16066:	68 ea 00 00 00       	pushq  $0xea
   1606b:	e9 40 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016070 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EEC1Ev@plt>:
   16070:	ff 25 72 48 21 00    	jmpq   *0x214872(%rip)        # 22a8e8 <_GLOBAL_OFFSET_TABLE_+0x770>
   16076:	68 eb 00 00 00       	pushq  $0xeb
   1607b:	e9 30 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016080 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4sizeEv@plt>:
   16080:	ff 25 6a 48 21 00    	jmpq   *0x21486a(%rip)        # 22a8f0 <_GLOBAL_OFFSET_TABLE_+0x778>
   16086:	68 ec 00 00 00       	pushq  $0xec
   1608b:	e9 20 f1 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016090 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEEC2Ev@plt>:
   16090:	ff 25 62 48 21 00    	jmpq   *0x214862(%rip)        # 22a8f8 <_GLOBAL_OFFSET_TABLE_+0x780>
   16096:	68 ed 00 00 00       	pushq  $0xed
   1609b:	e9 10 f1 ff ff       	jmpq   151b0 <_init+0x20>

00000000000160a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E@plt>:
   160a0:	ff 25 5a 48 21 00    	jmpq   *0x21485a(%rip)        # 22a900 <_GLOBAL_OFFSET_TABLE_+0x788>
   160a6:	68 ee 00 00 00       	pushq  $0xee
   160ab:	e9 00 f1 ff ff       	jmpq   151b0 <_init+0x20>

00000000000160b0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_@plt>:
   160b0:	ff 25 52 48 21 00    	jmpq   *0x214852(%rip)        # 22a908 <_GLOBAL_OFFSET_TABLE_+0x790>
   160b6:	68 ef 00 00 00       	pushq  $0xef
   160bb:	e9 f0 f0 ff ff       	jmpq   151b0 <_init+0x20>

00000000000160c0 <_ZSt7forwardIN6xaxaxa7Sockets13SocketManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE@plt>:
   160c0:	ff 25 4a 48 21 00    	jmpq   *0x21484a(%rip)        # 22a910 <_GLOBAL_OFFSET_TABLE_+0x798>
   160c6:	68 f0 00 00 00       	pushq  $0xf0
   160cb:	e9 e0 f0 ff ff       	jmpq   151b0 <_init+0x20>

00000000000160d0 <_ZN6xaxaxa4FileC1ERKS0_@plt>:
   160d0:	ff 25 42 48 21 00    	jmpq   *0x214842(%rip)        # 22a918 <_GLOBAL_OFFSET_TABLE_+0x7a0>
   160d6:	68 f1 00 00 00       	pushq  $0xf1
   160db:	e9 d0 f0 ff ff       	jmpq   151b0 <_init+0x20>

00000000000160e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_E@plt>:
   160e0:	ff 25 3a 48 21 00    	jmpq   *0x21483a(%rip)        # 22a920 <_GLOBAL_OFFSET_TABLE_+0x7a8>
   160e6:	68 f2 00 00 00       	pushq  $0xf2
   160eb:	e9 c0 f0 ff ff       	jmpq   151b0 <_init+0x20>

00000000000160f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEED2Ev@plt>:
   160f0:	ff 25 32 48 21 00    	jmpq   *0x214832(%rip)        # 22a928 <_GLOBAL_OFFSET_TABLE_+0x7b0>
   160f6:	68 f3 00 00 00       	pushq  $0xf3
   160fb:	e9 b0 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>:
   16100:	ff 25 2a 48 21 00    	jmpq   *0x21482a(%rip)        # 22a930 <_GLOBAL_OFFSET_TABLE_+0x7b8>
   16106:	68 f4 00 00 00       	pushq  $0xf4
   1610b:	e9 a0 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016110 <__dynamic_cast@plt>:
   16110:	ff 25 22 48 21 00    	jmpq   *0x214822(%rip)        # 22a938 <_GLOBAL_OFFSET_TABLE_+0x7c0>
   16116:	68 f5 00 00 00       	pushq  $0xf5
   1611b:	e9 90 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016120 <_ZN6xaxaxa6BufferC1Ev@plt>:
   16120:	ff 25 1a 48 21 00    	jmpq   *0x21481a(%rip)        # 22a940 <_GLOBAL_OFFSET_TABLE_+0x7c8>
   16126:	68 f6 00 00 00       	pushq  $0xf6
   1612b:	e9 80 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016130 <_ZN6xaxaxa7Sockets13SocketManagerD1Ev@plt>:
   16130:	ff 25 12 48 21 00    	jmpq   *0x214812(%rip)        # 22a948 <_GLOBAL_OFFSET_TABLE_+0x7d0>
   16136:	68 f7 00 00 00       	pushq  $0xf7
   1613b:	e9 70 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016140 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_@plt>:
   16140:	ff 25 0a 48 21 00    	jmpq   *0x21480a(%rip)        # 22a950 <_GLOBAL_OFFSET_TABLE_+0x7d8>
   16146:	68 f8 00 00 00       	pushq  $0xf8
   1614b:	e9 60 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016150 <_ZNKSt10_Select1stISt4pairIKibEEclERKS2_@plt>:
   16150:	ff 25 02 48 21 00    	jmpq   *0x214802(%rip)        # 22a958 <_GLOBAL_OFFSET_TABLE_+0x7e0>
   16156:	68 f9 00 00 00       	pushq  $0xf9
   1615b:	e9 50 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016160 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_@plt>:
   16160:	ff 25 fa 47 21 00    	jmpq   *0x2147fa(%rip)        # 22a960 <_GLOBAL_OFFSET_TABLE_+0x7e8>
   16166:	68 fa 00 00 00       	pushq  $0xfa
   1616b:	e9 40 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016170 <connect@plt>:
   16170:	ff 25 f2 47 21 00    	jmpq   *0x2147f2(%rip)        # 22a968 <_GLOBAL_OFFSET_TABLE_+0x7f0>
   16176:	68 fb 00 00 00       	pushq  $0xfb
   1617b:	e9 30 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016180 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_get_nodeEv@plt>:
   16180:	ff 25 ea 47 21 00    	jmpq   *0x2147ea(%rip)        # 22a970 <_GLOBAL_OFFSET_TABLE_+0x7f8>
   16186:	68 fc 00 00 00       	pushq  $0xfc
   1618b:	e9 20 f0 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016190 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE@plt>:
   16190:	ff 25 e2 47 21 00    	jmpq   *0x2147e2(%rip)        # 22a978 <_GLOBAL_OFFSET_TABLE_+0x800>
   16196:	68 fd 00 00 00       	pushq  $0xfd
   1619b:	e9 10 f0 ff ff       	jmpq   151b0 <_init+0x20>

00000000000161a0 <_ZN6xaxaxa9ExceptionaSERKS0_@plt>:
   161a0:	ff 25 da 47 21 00    	jmpq   *0x2147da(%rip)        # 22a980 <_GLOBAL_OFFSET_TABLE_+0x808>
   161a6:	68 fe 00 00 00       	pushq  $0xfe
   161ab:	e9 00 f0 ff ff       	jmpq   151b0 <_init+0x20>

00000000000161b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>:
   161b0:	ff 25 d2 47 21 00    	jmpq   *0x2147d2(%rip)        # 22a988 <_GLOBAL_OFFSET_TABLE_+0x810>
   161b6:	68 ff 00 00 00       	pushq  $0xff
   161bb:	e9 f0 ef ff ff       	jmpq   151b0 <_init+0x20>

00000000000161c0 <_ZN5boost3argILi5EEC1Ev@plt>:
   161c0:	ff 25 ca 47 21 00    	jmpq   *0x2147ca(%rip)        # 22a990 <_GLOBAL_OFFSET_TABLE_+0x818>
   161c6:	68 00 01 00 00       	pushq  $0x100
   161cb:	e9 e0 ef ff ff       	jmpq   151b0 <_init+0x20>

00000000000161d0 <_ZN6xaxaxa7Sockets6Socket8SetFlagsEi@plt>:
   161d0:	ff 25 c2 47 21 00    	jmpq   *0x2147c2(%rip)        # 22a998 <_GLOBAL_OFFSET_TABLE_+0x820>
   161d6:	68 01 01 00 00       	pushq  $0x101
   161db:	e9 d0 ef ff ff       	jmpq   151b0 <_init+0x20>

00000000000161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>:
   161e0:	ff 25 ba 47 21 00    	jmpq   *0x2147ba(%rip)        # 22a9a0 <_GLOBAL_OFFSET_TABLE_+0x828>
   161e6:	68 02 01 00 00       	pushq  $0x102
   161eb:	e9 c0 ef ff ff       	jmpq   151b0 <_init+0x20>

00000000000161f0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bEEOS_IT_T0_E@plt>:
   161f0:	ff 25 b2 47 21 00    	jmpq   *0x2147b2(%rip)        # 22a9a8 <_GLOBAL_OFFSET_TABLE_+0x830>
   161f6:	68 03 01 00 00       	pushq  $0x103
   161fb:	e9 b0 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016200 <_ZNKSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE8key_compEv@plt>:
   16200:	ff 25 aa 47 21 00    	jmpq   *0x2147aa(%rip)        # 22a9b0 <_GLOBAL_OFFSET_TABLE_+0x838>
   16206:	68 04 01 00 00       	pushq  $0x104
   1620b:	e9 a0 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016210 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base@plt>:
   16210:	ff 25 a2 47 21 00    	jmpq   *0x2147a2(%rip)        # 22a9b8 <_GLOBAL_OFFSET_TABLE_+0x840>
   16216:	68 05 01 00 00       	pushq  $0x105
   1621b:	e9 90 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016220 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEC1IS0_S4_EEOS_IT_T0_E@plt>:
   16220:	ff 25 9a 47 21 00    	jmpq   *0x21479a(%rip)        # 22a9c0 <_GLOBAL_OFFSET_TABLE_+0x848>
   16226:	68 06 01 00 00       	pushq  $0x106
   1622b:	e9 80 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016230 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEppEv@plt>:
   16230:	ff 25 92 47 21 00    	jmpq   *0x214792(%rip)        # 22a9c8 <_GLOBAL_OFFSET_TABLE_+0x850>
   16236:	68 07 01 00 00       	pushq  $0x107
   1623b:	e9 70 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016240 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEmmEv@plt>:
   16240:	ff 25 8a 47 21 00    	jmpq   *0x21478a(%rip)        # 22a9d0 <_GLOBAL_OFFSET_TABLE_+0x858>
   16246:	68 08 01 00 00       	pushq  $0x108
   1624b:	e9 60 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016250 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE6insertIS8_vEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EOT_@plt>:
   16250:	ff 25 82 47 21 00    	jmpq   *0x214782(%rip)        # 22a9d8 <_GLOBAL_OFFSET_TABLE_+0x860>
   16256:	68 09 01 00 00       	pushq  $0x109
   1625b:	e9 50 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE12_M_rightmostEv@plt>:
   16260:	ff 25 7a 47 21 00    	jmpq   *0x21477a(%rip)        # 22a9e0 <_GLOBAL_OFFSET_TABLE_+0x868>
   16266:	68 0a 01 00 00       	pushq  $0x10a
   1626b:	e9 40 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016270 <_ZN6xaxaxa6StreamC2Ev@plt>:
   16270:	ff 25 72 47 21 00    	jmpq   *0x214772(%rip)        # 22a9e8 <_GLOBAL_OFFSET_TABLE_+0x870>
   16276:	68 0b 01 00 00       	pushq  $0x10b
   1627b:	e9 30 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016280 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEC2Ev@plt>:
   16280:	ff 25 6a 47 21 00    	jmpq   *0x21476a(%rip)        # 22a9f0 <_GLOBAL_OFFSET_TABLE_+0x878>
   16286:	68 0c 01 00 00       	pushq  $0x10c
   1628b:	e9 20 ef ff ff       	jmpq   151b0 <_init+0x20>

0000000000016290 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb@plt>:
   16290:	ff 25 62 47 21 00    	jmpq   *0x214762(%rip)        # 22a9f8 <_GLOBAL_OFFSET_TABLE_+0x880>
   16296:	68 0d 01 00 00       	pushq  $0x10d
   1629b:	e9 10 ef ff ff       	jmpq   151b0 <_init+0x20>

00000000000162a0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>:
   162a0:	ff 25 5a 47 21 00    	jmpq   *0x21475a(%rip)        # 22aa00 <_GLOBAL_OFFSET_TABLE_+0x888>
   162a6:	68 0e 01 00 00       	pushq  $0x10e
   162ab:	e9 00 ef ff ff       	jmpq   151b0 <_init+0x20>

00000000000162b0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_@plt>:
   162b0:	ff 25 52 47 21 00    	jmpq   *0x214752(%rip)        # 22aa08 <_GLOBAL_OFFSET_TABLE_+0x890>
   162b6:	68 0f 01 00 00       	pushq  $0x10f
   162bb:	e9 f0 ee ff ff       	jmpq   151b0 <_init+0x20>

00000000000162c0 <signal@plt>:
   162c0:	ff 25 4a 47 21 00    	jmpq   *0x21474a(%rip)        # 22aa10 <_GLOBAL_OFFSET_TABLE_+0x898>
   162c6:	68 10 01 00 00       	pushq  $0x110
   162cb:	e9 e0 ee ff ff       	jmpq   151b0 <_init+0x20>

00000000000162d0 <_ZN6xaxaxa2IO17FileStreamManager8CallbackC1Ev@plt>:
   162d0:	ff 25 42 47 21 00    	jmpq   *0x214742(%rip)        # 22aa18 <_GLOBAL_OFFSET_TABLE_+0x8a0>
   162d6:	68 11 01 00 00       	pushq  $0x111
   162db:	e9 d0 ee ff ff       	jmpq   151b0 <_init+0x20>

00000000000162e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11lower_boundERS1_@plt>:
   162e0:	ff 25 3a 47 21 00    	jmpq   *0x21473a(%rip)        # 22aa20 <_GLOBAL_OFFSET_TABLE_+0x8a8>
   162e6:	68 12 01 00 00       	pushq  $0x112
   162eb:	e9 c0 ee ff ff       	jmpq   151b0 <_init+0x20>

00000000000162f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt13_Rb_tree_nodeIS6_E@plt>:
   162f0:	ff 25 32 47 21 00    	jmpq   *0x214732(%rip)        # 22aa28 <_GLOBAL_OFFSET_TABLE_+0x8b0>
   162f6:	68 13 01 00 00       	pushq  $0x113
   162fb:	e9 b0 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016300 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EEC1Ev@plt>:
   16300:	ff 25 2a 47 21 00    	jmpq   *0x21472a(%rip)        # 22aa30 <_GLOBAL_OFFSET_TABLE_+0x8b8>
   16306:	68 14 01 00 00       	pushq  $0x114
   1630b:	e9 a0 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016310 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv@plt>:
   16310:	ff 25 22 47 21 00    	jmpq   *0x214722(%rip)        # 22aa38 <_GLOBAL_OFFSET_TABLE_+0x8c0>
   16316:	68 15 01 00 00       	pushq  $0x115
   1631b:	e9 90 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016320 <_ZN5boost3argILi1EEC1Ev@plt>:
   16320:	ff 25 1a 47 21 00    	jmpq   *0x21471a(%rip)        # 22aa40 <_GLOBAL_OFFSET_TABLE_+0x8c8>
   16326:	68 16 01 00 00       	pushq  $0x116
   1632b:	e9 80 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016330 <_ZN6xaxaxa10FileStream5CloseEv@plt>:
   16330:	ff 25 12 47 21 00    	jmpq   *0x214712(%rip)        # 22aa48 <_GLOBAL_OFFSET_TABLE_+0x8d0>
   16336:	68 17 01 00 00       	pushq  $0x117
   1633b:	e9 70 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016340 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8key_compEv@plt>:
   16340:	ff 25 0a 47 21 00    	jmpq   *0x21470a(%rip)        # 22aa50 <_GLOBAL_OFFSET_TABLE_+0x8d8>
   16346:	68 18 01 00 00       	pushq  $0x118
   1634b:	e9 60 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016350 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoC1ERKS2_@plt>:
   16350:	ff 25 02 47 21 00    	jmpq   *0x214702(%rip)        # 22aa58 <_GLOBAL_OFFSET_TABLE_+0x8e0>
   16356:	68 19 01 00 00       	pushq  $0x119
   1635b:	e9 50 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016360 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_get_nodeEv@plt>:
   16360:	ff 25 fa 46 21 00    	jmpq   *0x2146fa(%rip)        # 22aa60 <_GLOBAL_OFFSET_TABLE_+0x8e8>
   16366:	68 1a 01 00 00       	pushq  $0x11a
   1636b:	e9 40 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016370 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11lower_boundERS1_@plt>:
   16370:	ff 25 f2 46 21 00    	jmpq   *0x2146f2(%rip)        # 22aa68 <_GLOBAL_OFFSET_TABLE_+0x8f0>
   16376:	68 1b 01 00 00       	pushq  $0x11b
   1637b:	e9 30 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016380 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEED2Ev@plt>:
   16380:	ff 25 ea 46 21 00    	jmpq   *0x2146ea(%rip)        # 22aa70 <_GLOBAL_OFFSET_TABLE_+0x8f8>
   16386:	68 1c 01 00 00       	pushq  $0x11c
   1638b:	e9 20 ee ff ff       	jmpq   151b0 <_init+0x20>

0000000000016390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>:
   16390:	ff 25 e2 46 21 00    	jmpq   *0x2146e2(%rip)        # 22aa78 <_GLOBAL_OFFSET_TABLE_+0x900>
   16396:	68 1d 01 00 00       	pushq  $0x11d
   1639b:	e9 10 ee ff ff       	jmpq   151b0 <_init+0x20>

00000000000163a0 <_ZNKSt9type_infoeqERKS_@plt>:
   163a0:	ff 25 da 46 21 00    	jmpq   *0x2146da(%rip)        # 22aa80 <_GLOBAL_OFFSET_TABLE_+0x908>
   163a6:	68 1e 01 00 00       	pushq  $0x11e
   163ab:	e9 00 ee ff ff       	jmpq   151b0 <_init+0x20>

00000000000163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>:
   163b0:	ff 25 d2 46 21 00    	jmpq   *0x2146d2(%rip)        # 22aa88 <_GLOBAL_OFFSET_TABLE_+0x910>
   163b6:	68 1f 01 00 00       	pushq  $0x11f
   163bb:	e9 f0 ed ff ff       	jmpq   151b0 <_init+0x20>

00000000000163c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>:
   163c0:	ff 25 ca 46 21 00    	jmpq   *0x2146ca(%rip)        # 22aa90 <_GLOBAL_OFFSET_TABLE_+0x918>
   163c6:	68 20 01 00 00       	pushq  $0x120
   163cb:	e9 e0 ed ff ff       	jmpq   151b0 <_init+0x20>

00000000000163d0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE11lower_boundERS3_@plt>:
   163d0:	ff 25 c2 46 21 00    	jmpq   *0x2146c2(%rip)        # 22aa98 <_GLOBAL_OFFSET_TABLE_+0x920>
   163d6:	68 21 01 00 00       	pushq  $0x121
   163db:	e9 d0 ed ff ff       	jmpq   151b0 <_init+0x20>

00000000000163e0 <__errno_location@plt>:
   163e0:	ff 25 ba 46 21 00    	jmpq   *0x2146ba(%rip)        # 22aaa0 <_GLOBAL_OFFSET_TABLE_+0x928>
   163e6:	68 22 01 00 00       	pushq  $0x122
   163eb:	e9 c0 ed ff ff       	jmpq   151b0 <_init+0x20>

00000000000163f0 <accept4@plt>:
   163f0:	ff 25 b2 46 21 00    	jmpq   *0x2146b2(%rip)        # 22aaa8 <_GLOBAL_OFFSET_TABLE_+0x930>
   163f6:	68 23 01 00 00       	pushq  $0x123
   163fb:	e9 b0 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>:
   16400:	ff 25 aa 46 21 00    	jmpq   *0x2146aa(%rip)        # 22aab0 <_GLOBAL_OFFSET_TABLE_+0x938>
   16406:	68 24 01 00 00       	pushq  $0x124
   1640b:	e9 a0 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016410 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
   16410:	ff 25 a2 46 21 00    	jmpq   *0x2146a2(%rip)        # 22aab8 <_GLOBAL_OFFSET_TABLE_+0x940>
   16416:	68 25 01 00 00       	pushq  $0x125
   1641b:	e9 90 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016420 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEED1Ev@plt>:
   16420:	ff 25 9a 46 21 00    	jmpq   *0x21469a(%rip)        # 22aac0 <_GLOBAL_OFFSET_TABLE_+0x948>
   16426:	68 26 01 00 00       	pushq  $0x126
   1642b:	e9 80 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016430 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base@plt>:
   16430:	ff 25 92 46 21 00    	jmpq   *0x214692(%rip)        # 22aac8 <_GLOBAL_OFFSET_TABLE_+0x950>
   16436:	68 27 01 00 00       	pushq  $0x127
   1643b:	e9 70 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016440 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_ESE_@plt>:
   16440:	ff 25 8a 46 21 00    	jmpq   *0x21468a(%rip)        # 22aad0 <_GLOBAL_OFFSET_TABLE_+0x958>
   16446:	68 28 01 00 00       	pushq  $0x128
   1644b:	e9 60 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016450 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E@plt>:
   16450:	ff 25 82 46 21 00    	jmpq   *0x214682(%rip)        # 22aad8 <_GLOBAL_OFFSET_TABLE_+0x960>
   16456:	68 29 01 00 00       	pushq  $0x129
   1645b:	e9 50 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>:
   16460:	ff 25 7a 46 21 00    	jmpq   *0x21467a(%rip)        # 22aae0 <_GLOBAL_OFFSET_TABLE_+0x968>
   16466:	68 2a 01 00 00       	pushq  $0x12a
   1646b:	e9 40 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016470 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt13_Rb_tree_nodeIS6_E@plt>:
   16470:	ff 25 72 46 21 00    	jmpq   *0x214672(%rip)        # 22aae8 <_GLOBAL_OFFSET_TABLE_+0x970>
   16476:	68 2b 01 00 00       	pushq  $0x12b
   1647b:	e9 30 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016480 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_leftmostEv@plt>:
   16480:	ff 25 6a 46 21 00    	jmpq   *0x21466a(%rip)        # 22aaf0 <_GLOBAL_OFFSET_TABLE_+0x978>
   16486:	68 2c 01 00 00       	pushq  $0x12c
   1648b:	e9 20 ed ff ff       	jmpq   151b0 <_init+0x20>

0000000000016490 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IRS7_bvEEOT_OT0_@plt>:
   16490:	ff 25 62 46 21 00    	jmpq   *0x214662(%rip)        # 22aaf8 <_GLOBAL_OFFSET_TABLE_+0x980>
   16496:	68 2d 01 00 00       	pushq  $0x12d
   1649b:	e9 10 ed ff ff       	jmpq   151b0 <_init+0x20>

00000000000164a0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>:
   164a0:	ff 25 5a 46 21 00    	jmpq   *0x21465a(%rip)        # 22ab00 <_GLOBAL_OFFSET_TABLE_+0x988>
   164a6:	68 2e 01 00 00       	pushq  $0x12e
   164ab:	e9 00 ed ff ff       	jmpq   151b0 <_init+0x20>

00000000000164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>:
   164b0:	ff 25 52 46 21 00    	jmpq   *0x214652(%rip)        # 22ab08 <_GLOBAL_OFFSET_TABLE_+0x990>
   164b6:	68 2f 01 00 00       	pushq  $0x12f
   164bb:	e9 f0 ec ff ff       	jmpq   151b0 <_init+0x20>

00000000000164c0 <strcmp@plt>:
   164c0:	ff 25 4a 46 21 00    	jmpq   *0x21464a(%rip)        # 22ab10 <_GLOBAL_OFFSET_TABLE_+0x998>
   164c6:	68 30 01 00 00       	pushq  $0x130
   164cb:	e9 e0 ec ff ff       	jmpq   151b0 <_init+0x20>

00000000000164d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EED1Ev@plt>:
   164d0:	ff 25 42 46 21 00    	jmpq   *0x214642(%rip)        # 22ab18 <_GLOBAL_OFFSET_TABLE_+0x9a0>
   164d6:	68 31 01 00 00       	pushq  $0x131
   164db:	e9 d0 ec ff ff       	jmpq   151b0 <_init+0x20>

00000000000164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>:
   164e0:	ff 25 3a 46 21 00    	jmpq   *0x21463a(%rip)        # 22ab20 <_GLOBAL_OFFSET_TABLE_+0x9a8>
   164e6:	68 32 01 00 00       	pushq  $0x132
   164eb:	e9 c0 ec ff ff       	jmpq   151b0 <_init+0x20>

00000000000164f0 <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE5countERS3_@plt>:
   164f0:	ff 25 32 46 21 00    	jmpq   *0x214632(%rip)        # 22ab28 <_GLOBAL_OFFSET_TABLE_+0x9b0>
   164f6:	68 33 01 00 00       	pushq  $0x133
   164fb:	e9 b0 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016500 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1IIS6_EEEDpOT_@plt>:
   16500:	ff 25 2a 46 21 00    	jmpq   *0x21462a(%rip)        # 22ab30 <_GLOBAL_OFFSET_TABLE_+0x9b8>
   16506:	68 34 01 00 00       	pushq  $0x134
   1650b:	e9 a0 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016510 <_ZN6xaxaxa9ExceptionD2Ev@plt>:
   16510:	ff 25 22 46 21 00    	jmpq   *0x214622(%rip)        # 22ab38 <_GLOBAL_OFFSET_TABLE_+0x9c0>
   16516:	68 35 01 00 00       	pushq  $0x135
   1651b:	e9 90 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016520 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_E@plt>:
   16520:	ff 25 1a 46 21 00    	jmpq   *0x21461a(%rip)        # 22ab40 <_GLOBAL_OFFSET_TABLE_+0x9c8>
   16526:	68 36 01 00 00       	pushq  $0x136
   1652b:	e9 80 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016530 <__cxa_allocate_exception@plt>:
   16530:	ff 25 12 46 21 00    	jmpq   *0x214612(%rip)        # 22ab48 <_GLOBAL_OFFSET_TABLE_+0x9d0>
   16536:	68 37 01 00 00       	pushq  $0x137
   1653b:	e9 70 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016540 <_ZNSaIcED1Ev@plt>:
   16540:	ff 25 0a 46 21 00    	jmpq   *0x21460a(%rip)        # 22ab50 <_GLOBAL_OFFSET_TABLE_+0x9d8>
   16546:	68 38 01 00 00       	pushq  $0x138
   1654b:	e9 60 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016550 <send@plt>:
   16550:	ff 25 02 46 21 00    	jmpq   *0x214602(%rip)        # 22ab58 <_GLOBAL_OFFSET_TABLE_+0x9e0>
   16556:	68 39 01 00 00       	pushq  $0x139
   1655b:	e9 50 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016560 <_ZN6xaxaxa9Exception4initEiSs@plt>:
   16560:	ff 25 fa 45 21 00    	jmpq   *0x2145fa(%rip)        # 22ab60 <_GLOBAL_OFFSET_TABLE_+0x9e8>
   16566:	68 3a 01 00 00       	pushq  $0x13a
   1656b:	e9 40 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016570 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE10deallocateEPS5_m@plt>:
   16570:	ff 25 f2 45 21 00    	jmpq   *0x2145f2(%rip)        # 22ab68 <_GLOBAL_OFFSET_TABLE_+0x9f0>
   16576:	68 3b 01 00 00       	pushq  $0x13b
   1657b:	e9 30 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016580 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_@plt>:
   16580:	ff 25 ea 45 21 00    	jmpq   *0x2145ea(%rip)        # 22ab70 <_GLOBAL_OFFSET_TABLE_+0x9f8>
   16586:	68 3c 01 00 00       	pushq  $0x13c
   1658b:	e9 20 ec ff ff       	jmpq   151b0 <_init+0x20>

0000000000016590 <_ZN5boost12shared_arrayIhE4swapERS1_@plt>:
   16590:	ff 25 e2 45 21 00    	jmpq   *0x2145e2(%rip)        # 22ab78 <_GLOBAL_OFFSET_TABLE_+0xa00>
   16596:	68 3d 01 00 00       	pushq  $0x13d
   1659b:	e9 10 ec ff ff       	jmpq   151b0 <_init+0x20>

00000000000165a0 <_ZN6xaxaxa9ExceptionC2ESs@plt>:
   165a0:	ff 25 da 45 21 00    	jmpq   *0x2145da(%rip)        # 22ab80 <_GLOBAL_OFFSET_TABLE_+0xa08>
   165a6:	68 3e 01 00 00       	pushq  $0x13e
   165ab:	e9 00 ec ff ff       	jmpq   151b0 <_init+0x20>

00000000000165b0 <__cxa_free_exception@plt>:
   165b0:	ff 25 d2 45 21 00    	jmpq   *0x2145d2(%rip)        # 22ab88 <_GLOBAL_OFFSET_TABLE_+0xa10>
   165b6:	68 3f 01 00 00       	pushq  $0x13f
   165bb:	e9 f0 eb ff ff       	jmpq   151b0 <_init+0x20>

00000000000165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>:
   165c0:	ff 25 ca 45 21 00    	jmpq   *0x2145ca(%rip)        # 22ab90 <_GLOBAL_OFFSET_TABLE_+0xa18>
   165c6:	68 40 01 00 00       	pushq  $0x140
   165cb:	e9 e0 eb ff ff       	jmpq   151b0 <_init+0x20>

00000000000165d0 <epoll_wait@plt>:
   165d0:	ff 25 c2 45 21 00    	jmpq   *0x2145c2(%rip)        # 22ab98 <_GLOBAL_OFFSET_TABLE_+0xa20>
   165d6:	68 41 01 00 00       	pushq  $0x141
   165db:	e9 d0 eb ff ff       	jmpq   151b0 <_init+0x20>

00000000000165e0 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE6insertIS8_vEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EOT_@plt>:
   165e0:	ff 25 ba 45 21 00    	jmpq   *0x2145ba(%rip)        # 22aba0 <_GLOBAL_OFFSET_TABLE_+0xa28>
   165e6:	68 42 01 00 00       	pushq  $0x142
   165eb:	e9 c0 eb ff ff       	jmpq   151b0 <_init+0x20>

00000000000165f0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_@plt>:
   165f0:	ff 25 b2 45 21 00    	jmpq   *0x2145b2(%rip)        # 22aba8 <_GLOBAL_OFFSET_TABLE_+0xa30>
   165f6:	68 43 01 00 00       	pushq  $0x143
   165fb:	e9 b0 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>:
   16600:	ff 25 aa 45 21 00    	jmpq   *0x2145aa(%rip)        # 22abb0 <_GLOBAL_OFFSET_TABLE_+0xa38>
   16606:	68 44 01 00 00       	pushq  $0x144
   1660b:	e9 a0 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016610 <_ZN6xaxaxa6Stream8CallbackC1EPFvPvPS0_ES2_@plt>:
   16610:	ff 25 a2 45 21 00    	jmpq   *0x2145a2(%rip)        # 22abb8 <_GLOBAL_OFFSET_TABLE_+0xa40>
   16616:	68 45 01 00 00       	pushq  $0x145
   1661b:	e9 90 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016620 <_ZNSaISt13_Rb_tree_nodeISt4pairIKibEEEC2Ev@plt>:
   16620:	ff 25 9a 45 21 00    	jmpq   *0x21459a(%rip)        # 22abc0 <_GLOBAL_OFFSET_TABLE_+0xa48>
   16626:	68 46 01 00 00       	pushq  $0x146
   1662b:	e9 80 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016630 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERKS6_@plt>:
   16630:	ff 25 92 45 21 00    	jmpq   *0x214592(%rip)        # 22abc8 <_GLOBAL_OFFSET_TABLE_+0xa50>
   16636:	68 47 01 00 00       	pushq  $0x147
   1663b:	e9 70 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016640 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>:
   16640:	ff 25 8a 45 21 00    	jmpq   *0x21458a(%rip)        # 22abd0 <_GLOBAL_OFFSET_TABLE_+0xa58>
   16646:	68 48 01 00 00       	pushq  $0x148
   1664b:	e9 60 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016650 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>:
   16650:	ff 25 82 45 21 00    	jmpq   *0x214582(%rip)        # 22abd8 <_GLOBAL_OFFSET_TABLE_+0xa60>
   16656:	68 49 01 00 00       	pushq  $0x149
   1665b:	e9 50 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016660 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEEC1ES2_RS4_@plt>:
   16660:	ff 25 7a 45 21 00    	jmpq   *0x21457a(%rip)        # 22abe0 <_GLOBAL_OFFSET_TABLE_+0xa68>
   16666:	68 4a 01 00 00       	pushq  $0x14a
   1666b:	e9 40 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016670 <_ZdaPv@plt>:
   16670:	ff 25 72 45 21 00    	jmpq   *0x214572(%rip)        # 22abe8 <_GLOBAL_OFFSET_TABLE_+0xa70>
   16676:	68 4b 01 00 00       	pushq  $0x14b
   1667b:	e9 30 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016680 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>:
   16680:	ff 25 6a 45 21 00    	jmpq   *0x21456a(%rip)        # 22abf0 <_GLOBAL_OFFSET_TABLE_+0xa78>
   16686:	68 4c 01 00 00       	pushq  $0x14c
   1668b:	e9 20 eb ff ff       	jmpq   151b0 <_init+0x20>

0000000000016690 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>:
   16690:	ff 25 62 45 21 00    	jmpq   *0x214562(%rip)        # 22abf8 <_GLOBAL_OFFSET_TABLE_+0xa80>
   16696:	68 4d 01 00 00       	pushq  $0x14d
   1669b:	e9 10 eb ff ff       	jmpq   151b0 <_init+0x20>

00000000000166a0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEC1Ev@plt>:
   166a0:	ff 25 5a 45 21 00    	jmpq   *0x21455a(%rip)        # 22ac00 <_GLOBAL_OFFSET_TABLE_+0xa88>
   166a6:	68 4e 01 00 00       	pushq  $0x14e
   166ab:	e9 00 eb ff ff       	jmpq   151b0 <_init+0x20>

00000000000166b0 <_ZN6xaxaxa7Sockets9IPAddressC1Ev@plt>:
   166b0:	ff 25 52 45 21 00    	jmpq   *0x214552(%rip)        # 22ac08 <_GLOBAL_OFFSET_TABLE_+0xa90>
   166b6:	68 4f 01 00 00       	pushq  $0x14f
   166bb:	e9 f0 ea ff ff       	jmpq   151b0 <_init+0x20>

00000000000166c0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>:
   166c0:	ff 25 4a 45 21 00    	jmpq   *0x21454a(%rip)        # 22ac10 <_GLOBAL_OFFSET_TABLE_+0xa98>
   166c6:	68 50 01 00 00       	pushq  $0x150
   166cb:	e9 e0 ea ff ff       	jmpq   151b0 <_init+0x20>

00000000000166d0 <memcmp@plt>:
   166d0:	ff 25 42 45 21 00    	jmpq   *0x214542(%rip)        # 22ac18 <_GLOBAL_OFFSET_TABLE_+0xaa0>
   166d6:	68 51 01 00 00       	pushq  $0x151
   166db:	e9 d0 ea ff ff       	jmpq   151b0 <_init+0x20>

00000000000166e0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE7destroyEPS9_@plt>:
   166e0:	ff 25 3a 45 21 00    	jmpq   *0x21453a(%rip)        # 22ac20 <_GLOBAL_OFFSET_TABLE_+0xaa8>
   166e6:	68 52 01 00 00       	pushq  $0x152
   166eb:	e9 c0 ea ff ff       	jmpq   151b0 <_init+0x20>

00000000000166f0 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoD1Ev@plt>:
   166f0:	ff 25 32 45 21 00    	jmpq   *0x214532(%rip)        # 22ac28 <_GLOBAL_OFFSET_TABLE_+0xab0>
   166f6:	68 53 01 00 00       	pushq  $0x153
   166fb:	e9 b0 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016700 <_ZN6xaxaxa13StringBuilder8ToStringEv@plt>:
   16700:	ff 25 2a 45 21 00    	jmpq   *0x21452a(%rip)        # 22ac30 <_GLOBAL_OFFSET_TABLE_+0xab8>
   16706:	68 54 01 00 00       	pushq  $0x154
   1670b:	e9 a0 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016710 <__cxa_throw@plt>:
   16710:	ff 25 22 45 21 00    	jmpq   *0x214522(%rip)        # 22ac38 <_GLOBAL_OFFSET_TABLE_+0xac0>
   16716:	68 55 01 00 00       	pushq  $0x155
   1671b:	e9 90 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016720 <backtrace_symbols_fd@plt>:
   16720:	ff 25 1a 45 21 00    	jmpq   *0x21451a(%rip)        # 22ac40 <_GLOBAL_OFFSET_TABLE_+0xac8>
   16726:	68 56 01 00 00       	pushq  $0x156
   1672b:	e9 80 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016730 <_ZNSolsEPFRSoS_E@plt>:
   16730:	ff 25 12 45 21 00    	jmpq   *0x214512(%rip)        # 22ac48 <_GLOBAL_OFFSET_TABLE_+0xad0>
   16736:	68 57 01 00 00       	pushq  $0x157
   1673b:	e9 70 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016740 <_ZN6xaxaxa7Sockets11IPv6AddressC1Ev@plt>:
   16740:	ff 25 0a 45 21 00    	jmpq   *0x21450a(%rip)        # 22ac50 <_GLOBAL_OFFSET_TABLE_+0xad8>
   16746:	68 58 01 00 00       	pushq  $0x158
   1674b:	e9 60 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016750 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt18_Rb_tree_node_base@plt>:
   16750:	ff 25 02 45 21 00    	jmpq   *0x214502(%rip)        # 22ac58 <_GLOBAL_OFFSET_TABLE_+0xae0>
   16756:	68 59 01 00 00       	pushq  $0x159
   1675b:	e9 50 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016760 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEneERKS7_@plt>:
   16760:	ff 25 fa 44 21 00    	jmpq   *0x2144fa(%rip)        # 22ac60 <_GLOBAL_OFFSET_TABLE_+0xae8>
   16766:	68 5a 01 00 00       	pushq  $0x15a
   1676b:	e9 40 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016770 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>:
   16770:	ff 25 f2 44 21 00    	jmpq   *0x2144f2(%rip)        # 22ac68 <_GLOBAL_OFFSET_TABLE_+0xaf0>
   16776:	68 5b 01 00 00       	pushq  $0x15b
   1677b:	e9 30 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016780 <_ZN6xaxaxa12StreamReaderD1Ev@plt>:
   16780:	ff 25 ea 44 21 00    	jmpq   *0x2144ea(%rip)        # 22ac70 <_GLOBAL_OFFSET_TABLE_+0xaf8>
   16786:	68 5c 01 00 00       	pushq  $0x15c
   1678b:	e9 20 ea ff ff       	jmpq   151b0 <_init+0x20>

0000000000016790 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E@plt>:
   16790:	ff 25 e2 44 21 00    	jmpq   *0x2144e2(%rip)        # 22ac78 <_GLOBAL_OFFSET_TABLE_+0xb00>
   16796:	68 5d 01 00 00       	pushq  $0x15d
   1679b:	e9 10 ea ff ff       	jmpq   151b0 <_init+0x20>

00000000000167a0 <_ZN6xaxaxa13StringBuilder6AppendEPci@plt>:
   167a0:	ff 25 da 44 21 00    	jmpq   *0x2144da(%rip)        # 22ac80 <_GLOBAL_OFFSET_TABLE_+0xb08>
   167a6:	68 5e 01 00 00       	pushq  $0x15e
   167ab:	e9 00 ea ff ff       	jmpq   151b0 <_init+0x20>

00000000000167b0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>:
   167b0:	ff 25 d2 44 21 00    	jmpq   *0x2144d2(%rip)        # 22ac88 <_GLOBAL_OFFSET_TABLE_+0xb10>
   167b6:	68 5f 01 00 00       	pushq  $0x15f
   167bb:	e9 f0 e9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000167c0 <_ZN6xaxaxa6ObjectaSERKS0_@plt>:
   167c0:	ff 25 ca 44 21 00    	jmpq   *0x2144ca(%rip)        # 22ac90 <_GLOBAL_OFFSET_TABLE_+0xb18>
   167c6:	68 60 01 00 00       	pushq  $0x160
   167cb:	e9 e0 e9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000167d0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE10deallocateEPS9_m@plt>:
   167d0:	ff 25 c2 44 21 00    	jmpq   *0x2144c2(%rip)        # 22ac98 <_GLOBAL_OFFSET_TABLE_+0xb20>
   167d6:	68 61 01 00 00       	pushq  $0x161
   167db:	e9 d0 e9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000167e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base@plt>:
   167e0:	ff 25 ba 44 21 00    	jmpq   *0x2144ba(%rip)        # 22aca0 <_GLOBAL_OFFSET_TABLE_+0xb28>
   167e6:	68 62 01 00 00       	pushq  $0x162
   167eb:	e9 c0 e9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000167f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev@plt>:
   167f0:	ff 25 b2 44 21 00    	jmpq   *0x2144b2(%rip)        # 22aca8 <_GLOBAL_OFFSET_TABLE_+0xb30>
   167f6:	68 63 01 00 00       	pushq  $0x163
   167fb:	e9 b0 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016800 <_ZN6xaxaxa7Sockets8EndPointC2Ev@plt>:
   16800:	ff 25 aa 44 21 00    	jmpq   *0x2144aa(%rip)        # 22acb0 <_GLOBAL_OFFSET_TABLE_+0xb38>
   16806:	68 64 01 00 00       	pushq  $0x164
   1680b:	e9 a0 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016810 <_ZN6xaxaxa7Sockets10IPEndPointC1ER11sockaddr_in@plt>:
   16810:	ff 25 a2 44 21 00    	jmpq   *0x2144a2(%rip)        # 22acb8 <_GLOBAL_OFFSET_TABLE_+0xb40>
   16816:	68 65 01 00 00       	pushq  $0x165
   1681b:	e9 90 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016820 <__cxa_end_catch@plt>:
   16820:	ff 25 9a 44 21 00    	jmpq   *0x21449a(%rip)        # 22acc0 <_GLOBAL_OFFSET_TABLE_+0xb48>
   16826:	68 66 01 00 00       	pushq  $0x166
   1682b:	e9 80 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016830 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEdeEv@plt>:
   16830:	ff 25 92 44 21 00    	jmpq   *0x214492(%rip)        # 22acc8 <_GLOBAL_OFFSET_TABLE_+0xb50>
   16836:	68 67 01 00 00       	pushq  $0x167
   1683b:	e9 70 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>:
   16840:	ff 25 8a 44 21 00    	jmpq   *0x21448a(%rip)        # 22acd0 <_GLOBAL_OFFSET_TABLE_+0xb58>
   16846:	68 68 01 00 00       	pushq  $0x168
   1684b:	e9 60 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016850 <_ZSt17__throw_bad_allocv@plt>:
   16850:	ff 25 82 44 21 00    	jmpq   *0x214482(%rip)        # 22acd8 <_GLOBAL_OFFSET_TABLE_+0xb60>
   16856:	68 69 01 00 00       	pushq  $0x169
   1685b:	e9 50 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016860 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_@plt>:
   16860:	ff 25 7a 44 21 00    	jmpq   *0x21447a(%rip)        # 22ace0 <_GLOBAL_OFFSET_TABLE_+0xb68>
   16866:	68 6a 01 00 00       	pushq  $0x16a
   1686b:	e9 40 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016870 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_@plt>:
   16870:	ff 25 72 44 21 00    	jmpq   *0x214472(%rip)        # 22ace8 <_GLOBAL_OFFSET_TABLE_+0xb70>
   16876:	68 6b 01 00 00       	pushq  $0x16b
   1687b:	e9 30 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016880 <_ZN6xaxaxa4File5CloseEv@plt>:
   16880:	ff 25 6a 44 21 00    	jmpq   *0x21446a(%rip)        # 22acf0 <_GLOBAL_OFFSET_TABLE_+0xb78>
   16886:	68 6c 01 00 00       	pushq  $0x16c
   1688b:	e9 20 e9 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016890 <_ZN6xaxaxa13StringBuilderC1Ei@plt>:
   16890:	ff 25 62 44 21 00    	jmpq   *0x214462(%rip)        # 22acf8 <_GLOBAL_OFFSET_TABLE_+0xb80>
   16896:	68 6d 01 00 00       	pushq  $0x16d
   1689b:	e9 10 e9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000168a0 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceISA_E4typeE@plt>:
   168a0:	ff 25 5a 44 21 00    	jmpq   *0x21445a(%rip)        # 22ad00 <_GLOBAL_OFFSET_TABLE_+0xb88>
   168a6:	68 6e 01 00 00       	pushq  $0x16e
   168ab:	e9 00 e9 ff ff       	jmpq   151b0 <_init+0x20>

00000000000168b0 <_ZN6xaxaxa7Sockets6SOCKS53tmpD1Ev@plt>:
   168b0:	ff 25 52 44 21 00    	jmpq   *0x214452(%rip)        # 22ad08 <_GLOBAL_OFFSET_TABLE_+0xb90>
   168b6:	68 6f 01 00 00       	pushq  $0x16f
   168bb:	e9 f0 e8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000168c0 <_ZN5boost6detail15sp_counted_baseD1Ev@plt>:
   168c0:	ff 25 4a 44 21 00    	jmpq   *0x21444a(%rip)        # 22ad10 <_GLOBAL_OFFSET_TABLE_+0xb98>
   168c6:	68 70 01 00 00       	pushq  $0x170
   168cb:	e9 e0 e8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000168d0 <_ZN6xaxaxa16PointerExceptionD1Ev@plt>:
   168d0:	ff 25 42 44 21 00    	jmpq   *0x214442(%rip)        # 22ad18 <_GLOBAL_OFFSET_TABLE_+0xba0>
   168d6:	68 71 01 00 00       	pushq  $0x171
   168db:	e9 d0 e8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>:
   168e0:	ff 25 3a 44 21 00    	jmpq   *0x21443a(%rip)        # 22ad20 <_GLOBAL_OFFSET_TABLE_+0xba8>
   168e6:	68 72 01 00 00       	pushq  $0x172
   168eb:	e9 c0 e8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000168f0 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1IIS6_EEEDpOT_@plt>:
   168f0:	ff 25 32 44 21 00    	jmpq   *0x214432(%rip)        # 22ad28 <_GLOBAL_OFFSET_TABLE_+0xbb0>
   168f6:	68 73 01 00 00       	pushq  $0x173
   168fb:	e9 b0 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016900 <_ZN5boost20checked_array_deleteIhEEvPT_@plt>:
   16900:	ff 25 2a 44 21 00    	jmpq   *0x21442a(%rip)        # 22ad30 <_GLOBAL_OFFSET_TABLE_+0xbb8>
   16906:	68 74 01 00 00       	pushq  $0x174
   1690b:	e9 a0 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016910 <_ZN5boost6detail23atomic_exchange_and_addEPii@plt>:
   16910:	ff 25 22 44 21 00    	jmpq   *0x214422(%rip)        # 22ad38 <_GLOBAL_OFFSET_TABLE_+0xbc0>
   16916:	68 75 01 00 00       	pushq  $0x175
   1691b:	e9 90 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016920 <__cxa_begin_catch@plt>:
   16920:	ff 25 1a 44 21 00    	jmpq   *0x21441a(%rip)        # 22ad40 <_GLOBAL_OFFSET_TABLE_+0xbc8>
   16926:	68 76 01 00 00       	pushq  $0x176
   1692b:	e9 80 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016930 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE9constructIIS4_EEEvPS5_DpOT_@plt>:
   16930:	ff 25 12 44 21 00    	jmpq   *0x214412(%rip)        # 22ad48 <_GLOBAL_OFFSET_TABLE_+0xbd0>
   16936:	68 77 01 00 00       	pushq  $0x177
   1693b:	e9 70 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016940 <_ZN5boost6detail15sp_counted_baseC2Ev@plt>:
   16940:	ff 25 0a 44 21 00    	jmpq   *0x21440a(%rip)        # 22ad50 <_GLOBAL_OFFSET_TABLE_+0xbd8>
   16946:	68 78 01 00 00       	pushq  $0x178
   1694b:	e9 60 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016950 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>:
   16950:	ff 25 02 44 21 00    	jmpq   *0x214402(%rip)        # 22ad58 <_GLOBAL_OFFSET_TABLE_+0xbe0>
   16956:	68 79 01 00 00       	pushq  $0x179
   1695b:	e9 50 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016960 <_ZN6xaxaxa10FileStreamD1Ev@plt>:
   16960:	ff 25 fa 43 21 00    	jmpq   *0x2143fa(%rip)        # 22ad60 <_GLOBAL_OFFSET_TABLE_+0xbe8>
   16966:	68 7a 01 00 00       	pushq  $0x17a
   1696b:	e9 40 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016970 <realloc@plt>:
   16970:	ff 25 f2 43 21 00    	jmpq   *0x2143f2(%rip)        # 22ad68 <_GLOBAL_OFFSET_TABLE_+0xbf0>
   16976:	68 7b 01 00 00       	pushq  $0x17b
   1697b:	e9 30 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>:
   16980:	ff 25 ea 43 21 00    	jmpq   *0x2143ea(%rip)        # 22ad70 <_GLOBAL_OFFSET_TABLE_+0xbf8>
   16986:	68 7c 01 00 00       	pushq  $0x17c
   1698b:	e9 20 e8 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016990 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEC2Ev@plt>:
   16990:	ff 25 e2 43 21 00    	jmpq   *0x2143e2(%rip)        # 22ad78 <_GLOBAL_OFFSET_TABLE_+0xc00>
   16996:	68 7d 01 00 00       	pushq  $0x17d
   1699b:	e9 10 e8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000169a0 <_ZN6xaxaxa6StreamD2Ev@plt>:
   169a0:	ff 25 da 43 21 00    	jmpq   *0x2143da(%rip)        # 22ad80 <_GLOBAL_OFFSET_TABLE_+0xc08>
   169a6:	68 7e 01 00 00       	pushq  $0x17e
   169ab:	e9 00 e8 ff ff       	jmpq   151b0 <_init+0x20>

00000000000169b0 <perror@plt>:
   169b0:	ff 25 d2 43 21 00    	jmpq   *0x2143d2(%rip)        # 22ad88 <_GLOBAL_OFFSET_TABLE_+0xc10>
   169b6:	68 7f 01 00 00       	pushq  $0x17f
   169bb:	e9 f0 e7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000169c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EED1Ev@plt>:
   169c0:	ff 25 ca 43 21 00    	jmpq   *0x2143ca(%rip)        # 22ad90 <_GLOBAL_OFFSET_TABLE_+0xc18>
   169c6:	68 80 01 00 00       	pushq  $0x180
   169cb:	e9 e0 e7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000169d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E@plt>:
   169d0:	ff 25 c2 43 21 00    	jmpq   *0x2143c2(%rip)        # 22ad98 <_GLOBAL_OFFSET_TABLE_+0xc20>
   169d6:	68 81 01 00 00       	pushq  $0x181
   169db:	e9 d0 e7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000169e0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE3endEv@plt>:
   169e0:	ff 25 ba 43 21 00    	jmpq   *0x2143ba(%rip)        # 22ada0 <_GLOBAL_OFFSET_TABLE_+0xc28>
   169e6:	68 82 01 00 00       	pushq  $0x182
   169eb:	e9 c0 e7 ff ff       	jmpq   151b0 <_init+0x20>

00000000000169f0 <_ZNSaIcEC1Ev@plt>:
   169f0:	ff 25 b2 43 21 00    	jmpq   *0x2143b2(%rip)        # 22ada8 <_GLOBAL_OFFSET_TABLE_+0xc30>
   169f6:	68 83 01 00 00       	pushq  $0x183
   169fb:	e9 b0 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>:
   16a00:	ff 25 aa 43 21 00    	jmpq   *0x2143aa(%rip)        # 22adb0 <_GLOBAL_OFFSET_TABLE_+0xc38>
   16a06:	68 84 01 00 00       	pushq  $0x184
   16a0b:	e9 a0 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a10 <_ZdlPvS_@plt>:
   16a10:	ff 25 a2 43 21 00    	jmpq   *0x2143a2(%rip)        # 22adb8 <_GLOBAL_OFFSET_TABLE_+0xc40>
   16a16:	68 85 01 00 00       	pushq  $0x185
   16a1b:	e9 90 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a20 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE11lower_boundERS7_@plt>:
   16a20:	ff 25 9a 43 21 00    	jmpq   *0x21439a(%rip)        # 22adc0 <_GLOBAL_OFFSET_TABLE_+0xc48>
   16a26:	68 86 01 00 00       	pushq  $0x186
   16a2b:	e9 80 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>:
   16a30:	ff 25 92 43 21 00    	jmpq   *0x214392(%rip)        # 22adc8 <_GLOBAL_OFFSET_TABLE_+0xc50>
   16a36:	68 87 01 00 00       	pushq  $0x187
   16a3b:	e9 70 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a40 <_ZN6xaxaxa6BufferC1EPvi@plt>:
   16a40:	ff 25 8a 43 21 00    	jmpq   *0x21438a(%rip)        # 22add0 <_GLOBAL_OFFSET_TABLE_+0xc58>
   16a46:	68 88 01 00 00       	pushq  $0x188
   16a4b:	e9 60 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a50 <_ZNK6xaxaxa6Buffer9SubBufferEi@plt>:
   16a50:	ff 25 82 43 21 00    	jmpq   *0x214382(%rip)        # 22add8 <_GLOBAL_OFFSET_TABLE_+0xc60>
   16a56:	68 89 01 00 00       	pushq  $0x189
   16a5b:	e9 50 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>:
   16a60:	ff 25 7a 43 21 00    	jmpq   *0x21437a(%rip)        # 22ade0 <_GLOBAL_OFFSET_TABLE_+0xc68>
   16a66:	68 8a 01 00 00       	pushq  $0x18a
   16a6b:	e9 40 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a70 <write@plt>:
   16a70:	ff 25 72 43 21 00    	jmpq   *0x214372(%rip)        # 22ade8 <_GLOBAL_OFFSET_TABLE_+0xc70>
   16a76:	68 8b 01 00 00       	pushq  $0x18b
   16a7b:	e9 30 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>:
   16a80:	ff 25 6a 43 21 00    	jmpq   *0x21436a(%rip)        # 22adf0 <_GLOBAL_OFFSET_TABLE_+0xc78>
   16a86:	68 8c 01 00 00       	pushq  $0x18c
   16a8b:	e9 20 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016a90 <_Znwm@plt>:
   16a90:	ff 25 62 43 21 00    	jmpq   *0x214362(%rip)        # 22adf8 <_GLOBAL_OFFSET_TABLE_+0xc80>
   16a96:	68 8d 01 00 00       	pushq  $0x18d
   16a9b:	e9 10 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016aa0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE5clearEv@plt>:
   16aa0:	ff 25 5a 43 21 00    	jmpq   *0x21435a(%rip)        # 22ae00 <_GLOBAL_OFFSET_TABLE_+0xc88>
   16aa6:	68 8e 01 00 00       	pushq  $0x18e
   16aab:	e9 00 e7 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016ab0 <_Unwind_Resume@plt>:
   16ab0:	ff 25 52 43 21 00    	jmpq   *0x214352(%rip)        # 22ae08 <_GLOBAL_OFFSET_TABLE_+0xc90>
   16ab6:	68 8f 01 00 00       	pushq  $0x18f
   16abb:	e9 f0 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016ac0 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE8max_sizeEv@plt>:
   16ac0:	ff 25 4a 43 21 00    	jmpq   *0x21434a(%rip)        # 22ae10 <_GLOBAL_OFFSET_TABLE_+0xc98>
   16ac6:	68 90 01 00 00       	pushq  $0x190
   16acb:	e9 e0 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>:
   16ad0:	ff 25 42 43 21 00    	jmpq   *0x214342(%rip)        # 22ae18 <_GLOBAL_OFFSET_TABLE_+0xca0>
   16ad6:	68 91 01 00 00       	pushq  $0x191
   16adb:	e9 d0 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016ae0 <_ZN5boost6detail12shared_countC1IPhNS_21checked_array_deleterIhEEEET_T0_@plt>:
   16ae0:	ff 25 3a 43 21 00    	jmpq   *0x21433a(%rip)        # 22ae20 <_GLOBAL_OFFSET_TABLE_+0xca8>
   16ae6:	68 92 01 00 00       	pushq  $0x192
   16aeb:	e9 c0 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016af0 <_ZNSsaSERKSs@plt>:
   16af0:	ff 25 32 43 21 00    	jmpq   *0x214332(%rip)        # 22ae28 <_GLOBAL_OFFSET_TABLE_+0xcb0>
   16af6:	68 93 01 00 00       	pushq  $0x193
   16afb:	e9 b0 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b00 <memcpy@plt>:
   16b00:	ff 25 2a 43 21 00    	jmpq   *0x21432a(%rip)        # 22ae30 <_GLOBAL_OFFSET_TABLE_+0xcb8>
   16b06:	68 94 01 00 00       	pushq  $0x194
   16b0b:	e9 a0 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b10 <fcntl@plt>:
   16b10:	ff 25 22 43 21 00    	jmpq   *0x214322(%rip)        # 22ae38 <_GLOBAL_OFFSET_TABLE_+0xcc0>
   16b16:	68 95 01 00 00       	pushq  $0x195
   16b1b:	e9 90 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b20 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_@plt>:
   16b20:	ff 25 1a 43 21 00    	jmpq   *0x21431a(%rip)        # 22ae40 <_GLOBAL_OFFSET_TABLE_+0xcc8>
   16b26:	68 96 01 00 00       	pushq  $0x196
   16b2b:	e9 80 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b30 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEC2Ev@plt>:
   16b30:	ff 25 12 43 21 00    	jmpq   *0x214312(%rip)        # 22ae48 <_GLOBAL_OFFSET_TABLE_+0xcd0>
   16b36:	68 97 01 00 00       	pushq  $0x197
   16b3b:	e9 70 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b40 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE3endEv@plt>:
   16b40:	ff 25 0a 43 21 00    	jmpq   *0x21430a(%rip)        # 22ae50 <_GLOBAL_OFFSET_TABLE_+0xcd8>
   16b46:	68 98 01 00 00       	pushq  $0x198
   16b4b:	e9 60 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b50 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKibEE13_M_const_castEv@plt>:
   16b50:	ff 25 02 43 21 00    	jmpq   *0x214302(%rip)        # 22ae58 <_GLOBAL_OFFSET_TABLE_+0xce0>
   16b56:	68 99 01 00 00       	pushq  $0x199
   16b5b:	e9 50 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b60 <_ZN6xaxaxa4File5WriteENS_6BufferE@plt>:
   16b60:	ff 25 fa 42 21 00    	jmpq   *0x2142fa(%rip)        # 22ae60 <_GLOBAL_OFFSET_TABLE_+0xce8>
   16b66:	68 9a 01 00 00       	pushq  $0x19a
   16b6b:	e9 40 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b70 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_@plt>:
   16b70:	ff 25 f2 42 21 00    	jmpq   *0x2142f2(%rip)        # 22ae68 <_GLOBAL_OFFSET_TABLE_+0xcf0>
   16b76:	68 9b 01 00 00       	pushq  $0x19b
   16b7b:	e9 30 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>:
   16b80:	ff 25 ea 42 21 00    	jmpq   *0x2142ea(%rip)        # 22ae70 <_GLOBAL_OFFSET_TABLE_+0xcf8>
   16b86:	68 9c 01 00 00       	pushq  $0x19c
   16b8b:	e9 20 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016b90 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>:
   16b90:	ff 25 e2 42 21 00    	jmpq   *0x2142e2(%rip)        # 22ae78 <_GLOBAL_OFFSET_TABLE_+0xd00>
   16b96:	68 9d 01 00 00       	pushq  $0x19d
   16b9b:	e9 10 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016ba0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_ESE_@plt>:
   16ba0:	ff 25 da 42 21 00    	jmpq   *0x2142da(%rip)        # 22ae80 <_GLOBAL_OFFSET_TABLE_+0xd08>
   16ba6:	68 9e 01 00 00       	pushq  $0x19e
   16bab:	e9 00 e6 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016bb0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EEC1Ev@plt>:
   16bb0:	ff 25 d2 42 21 00    	jmpq   *0x2142d2(%rip)        # 22ae88 <_GLOBAL_OFFSET_TABLE_+0xd10>
   16bb6:	68 9f 01 00 00       	pushq  $0x19f
   16bbb:	e9 f0 e5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016bc0 <_ZN5boost6detail16atomic_incrementEPi@plt>:
   16bc0:	ff 25 ca 42 21 00    	jmpq   *0x2142ca(%rip)        # 22ae90 <_GLOBAL_OFFSET_TABLE_+0xd18>
   16bc6:	68 a0 01 00 00       	pushq  $0x1a0
   16bcb:	e9 e0 e5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016bd0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_M_rootEv@plt>:
   16bd0:	ff 25 c2 42 21 00    	jmpq   *0x2142c2(%rip)        # 22ae98 <_GLOBAL_OFFSET_TABLE_+0xd20>
   16bd6:	68 a1 01 00 00       	pushq  $0x1a1
   16bdb:	e9 d0 e5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>:
   16be0:	ff 25 ba 42 21 00    	jmpq   *0x2142ba(%rip)        # 22aea0 <_GLOBAL_OFFSET_TABLE_+0xd28>
   16be6:	68 a2 01 00 00       	pushq  $0x1a2
   16beb:	e9 c0 e5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016bf0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_create_nodeIIS6_EEEPSt13_Rb_tree_nodeIS6_EDpOT_@plt>:
   16bf0:	ff 25 b2 42 21 00    	jmpq   *0x2142b2(%rip)        # 22aea8 <_GLOBAL_OFFSET_TABLE_+0xd30>
   16bf6:	68 a3 01 00 00       	pushq  $0x1a3
   16bfb:	e9 b0 e5 ff ff       	jmpq   151b0 <_init+0x20>

0000000000016c00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>:
   16c00:	ff 25 aa 42 21 00    	jmpq   *0x2142aa(%rip)        # 22aeb0 <_GLOBAL_OFFSET_TABLE_+0xd38>
   16c06:	68 a4 01 00 00       	pushq  $0x1a4
   16c0b:	e9 a0 e5 ff ff       	jmpq   151b0 <_init+0x20>

Disassembly of section .text:

0000000000016c10 <call_gmon_start>:
   16c10:	48 83 ec 08          	sub    $0x8,%rsp
   16c14:	48 8b 05 8d 34 21 00 	mov    0x21348d(%rip),%rax        # 22a0a8 <_DYNAMIC+0x210>
   16c1b:	48 85 c0             	test   %rax,%rax
   16c1e:	74 02                	je     16c22 <call_gmon_start+0x12>
   16c20:	ff d0                	callq  *%rax
   16c22:	48 83 c4 08          	add    $0x8,%rsp
   16c26:	c3                   	retq   
   16c27:	90                   	nop
   16c28:	90                   	nop
   16c29:	90                   	nop
   16c2a:	90                   	nop
   16c2b:	90                   	nop
   16c2c:	90                   	nop
   16c2d:	90                   	nop
   16c2e:	90                   	nop
   16c2f:	90                   	nop

0000000000016c30 <__do_global_dtors_aux>:
   16c30:	55                   	push   %rbp
   16c31:	80 3d 98 42 21 00 00 	cmpb   $0x0,0x214298(%rip)        # 22aed0 <__bss_start>
   16c38:	48 89 e5             	mov    %rsp,%rbp
   16c3b:	41 54                	push   %r12
   16c3d:	53                   	push   %rbx
   16c3e:	75 62                	jne    16ca2 <__do_global_dtors_aux+0x72>
   16c40:	48 83 3d 88 34 21 00 	cmpq   $0x0,0x213488(%rip)        # 22a0d0 <_DYNAMIC+0x238>
   16c47:	00 
   16c48:	74 0c                	je     16c56 <__do_global_dtors_aux+0x26>
   16c4a:	48 8b 3d 67 42 21 00 	mov    0x214267(%rip),%rdi        # 22aeb8 <__dso_handle>
   16c51:	e8 0a f1 ff ff       	callq  15d60 <__cxa_finalize@plt>
   16c56:	48 8d 1d 43 2c 21 00 	lea    0x212c43(%rip),%rbx        # 2298a0 <__DTOR_END__>
   16c5d:	4c 8d 25 34 2c 21 00 	lea    0x212c34(%rip),%r12        # 229898 <__DTOR_LIST__>
   16c64:	48 8b 05 6d 42 21 00 	mov    0x21426d(%rip),%rax        # 22aed8 <dtor_idx.6499>
   16c6b:	4c 29 e3             	sub    %r12,%rbx
   16c6e:	48 c1 fb 03          	sar    $0x3,%rbx
   16c72:	48 83 eb 01          	sub    $0x1,%rbx
   16c76:	48 39 d8             	cmp    %rbx,%rax
   16c79:	73 20                	jae    16c9b <__do_global_dtors_aux+0x6b>
   16c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16c80:	48 83 c0 01          	add    $0x1,%rax
   16c84:	48 89 05 4d 42 21 00 	mov    %rax,0x21424d(%rip)        # 22aed8 <dtor_idx.6499>
   16c8b:	41 ff 14 c4          	callq  *(%r12,%rax,8)
   16c8f:	48 8b 05 42 42 21 00 	mov    0x214242(%rip),%rax        # 22aed8 <dtor_idx.6499>
   16c96:	48 39 d8             	cmp    %rbx,%rax
   16c99:	72 e5                	jb     16c80 <__do_global_dtors_aux+0x50>
   16c9b:	c6 05 2e 42 21 00 01 	movb   $0x1,0x21422e(%rip)        # 22aed0 <__bss_start>
   16ca2:	5b                   	pop    %rbx
   16ca3:	41 5c                	pop    %r12
   16ca5:	5d                   	pop    %rbp
   16ca6:	c3                   	retq   
   16ca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16cae:	00 00 

0000000000016cb0 <frame_dummy>:
   16cb0:	48 83 3d f0 2b 21 00 	cmpq   $0x0,0x212bf0(%rip)        # 2298a8 <__JCR_END__>
   16cb7:	00 
   16cb8:	55                   	push   %rbp
   16cb9:	48 89 e5             	mov    %rsp,%rbp
   16cbc:	74 1a                	je     16cd8 <frame_dummy+0x28>
   16cbe:	48 8b 05 eb 33 21 00 	mov    0x2133eb(%rip),%rax        # 22a0b0 <_DYNAMIC+0x218>
   16cc5:	48 85 c0             	test   %rax,%rax
   16cc8:	74 0e                	je     16cd8 <frame_dummy+0x28>
   16cca:	5d                   	pop    %rbp
   16ccb:	48 8d 3d d6 2b 21 00 	lea    0x212bd6(%rip),%rdi        # 2298a8 <__JCR_END__>
   16cd2:	ff e0                	jmpq   *%rax
   16cd4:	0f 1f 40 00          	nopl   0x0(%rax)
   16cd8:	5d                   	pop    %rbp
   16cd9:	c3                   	retq   
   16cda:	90                   	nop
   16cdb:	90                   	nop

0000000000016cdc <_ZN6xaxaxa2IO17FileStreamManagerC1Ev>:
namespace xaxaxa
{
	namespace IO
	{
		const int pollcount = 32;
		FileStreamManager::FileStreamManager()
   16cdc:	55                   	push   %rbp
   16cdd:	48 89 e5             	mov    %rsp,%rbp
   16ce0:	53                   	push   %rbx
   16ce1:	48 83 ec 18          	sub    $0x18,%rsp
   16ce5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16ce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ced:	48 89 c7             	mov    %rax,%rdi
   16cf0:	e8 5b f3 ff ff       	callq  16050 <_ZN6xaxaxa6ObjectC2Ev@plt>
   16cf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cf9:	48 8b 15 08 34 21 00 	mov    0x213408(%rip),%rdx        # 22a108 <_DYNAMIC+0x270>
   16d00:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   16d04:	48 89 10             	mov    %rdx,(%rax)
   16d07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d0b:	48 83 c0 10          	add    $0x10,%rax
   16d0f:	48 89 c7             	mov    %rax,%rdi
   16d12:	e8 89 ec ff ff       	callq  159a0 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEC1Ev@plt>
   16d17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d1b:	48 83 c0 40          	add    $0x40,%rax
   16d1f:	48 89 c7             	mov    %rax,%rdi
   16d22:	e8 29 ec ff ff       	callq  15950 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1Ev@plt>
		{
			__current_task.s = -1;
   16d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d2b:	c7 40 44 ff ff ff ff 	movl   $0xffffffff,0x44(%rax)
			this->epollfd = epoll_create(pollcount);
   16d32:	bf 20 00 00 00       	mov    $0x20,%edi
   16d37:	e8 14 e8 ff ff       	callq  15550 <epoll_create@plt>
   16d3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16d40:	89 42 0c             	mov    %eax,0xc(%rdx)
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) ::perror("epoll_create");
   16d43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d47:	8b 40 0c             	mov    0xc(%rax),%eax
   16d4a:	85 c0                	test   %eax,%eax
   16d4c:	79 52                	jns    16da0 <_ZN6xaxaxa2IO17FileStreamManagerC1Ev+0xc4>
   16d4e:	48 8d 3d bb d2 00 00 	lea    0xd2bb(%rip),%rdi        # 24010 <_ZStL6ignore+0x2e>
   16d55:	e8 56 fc ff ff       	callq  169b0 <perror@plt>
		}
   16d5a:	eb 44                	jmp    16da0 <_ZN6xaxaxa2IO17FileStreamManagerC1Ev+0xc4>
   16d5c:	48 89 c3             	mov    %rax,%rbx
namespace xaxaxa
{
	namespace IO
	{
		const int pollcount = 32;
		FileStreamManager::FileStreamManager()
   16d5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d63:	48 83 c0 40          	add    $0x40,%rax
   16d67:	48 89 c7             	mov    %rax,%rdi
   16d6a:	e8 b1 f0 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   16d6f:	eb 03                	jmp    16d74 <_ZN6xaxaxa2IO17FileStreamManagerC1Ev+0x98>
   16d71:	48 89 c3             	mov    %rax,%rbx
   16d74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d78:	48 83 c0 10          	add    $0x10,%rax
   16d7c:	48 89 c7             	mov    %rax,%rdi
   16d7f:	e8 9c eb ff ff       	callq  15920 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>
   16d84:	eb 03                	jmp    16d89 <_ZN6xaxaxa2IO17FileStreamManagerC1Ev+0xad>
   16d86:	48 89 c3             	mov    %rax,%rbx
   16d89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d8d:	48 89 c7             	mov    %rax,%rdi
   16d90:	e8 4b f4 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   16d95:	48 89 d8             	mov    %rbx,%rax
   16d98:	48 89 c7             	mov    %rax,%rdi
   16d9b:	e8 10 fd ff ff       	callq  16ab0 <_Unwind_Resume@plt>
		{
			__current_task.s = -1;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) ::perror("epoll_create");
		}
   16da0:	90                   	nop
   16da1:	48 83 c4 18          	add    $0x18,%rsp
   16da5:	5b                   	pop    %rbx
   16da6:	5d                   	pop    %rbp
   16da7:	c3                   	retq   

0000000000016da8 <_ZN6xaxaxa2IO17FileStreamManagerD1Ev>:
		FileStreamManager::~FileStreamManager()
   16da8:	55                   	push   %rbp
   16da9:	48 89 e5             	mov    %rsp,%rbp
   16dac:	53                   	push   %rbx
   16dad:	48 83 ec 18          	sub    $0x18,%rsp
   16db1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16db5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16db9:	48 8b 15 48 33 21 00 	mov    0x213348(%rip),%rdx        # 22a108 <_DYNAMIC+0x270>
   16dc0:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   16dc4:	48 89 10             	mov    %rdx,(%rax)
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
   16dc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dcb:	8b 40 0c             	mov    0xc(%rax),%eax
   16dce:	89 c7                	mov    %eax,%edi
   16dd0:	e8 2b e6 ff ff       	callq  15400 <close@plt>
			__current_task.s = -1;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) ::perror("epoll_create");
		}
		FileStreamManager::~FileStreamManager()
   16dd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dd9:	48 83 c0 40          	add    $0x40,%rax
   16ddd:	48 89 c7             	mov    %rax,%rdi
   16de0:	e8 3b f0 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   16de5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16de9:	48 83 c0 10          	add    $0x10,%rax
   16ded:	48 89 c7             	mov    %rax,%rdi
   16df0:	e8 2b eb ff ff       	callq  15920 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>
   16df5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16df9:	48 89 c7             	mov    %rax,%rdi
   16dfc:	e8 df f3 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
		}
   16e01:	b8 00 00 00 00       	mov    $0x0,%eax
   16e06:	83 e0 01             	and    $0x1,%eax
   16e09:	84 c0                	test   %al,%al
   16e0b:	74 52                	je     16e5f <_ZN6xaxaxa2IO17FileStreamManagerD1Ev+0xb7>
   16e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e11:	48 89 c7             	mov    %rax,%rdi
   16e14:	e8 d7 e7 ff ff       	callq  155f0 <_ZdlPv@plt>
   16e19:	eb 44                	jmp    16e5f <_ZN6xaxaxa2IO17FileStreamManagerD1Ev+0xb7>
   16e1b:	48 89 c3             	mov    %rax,%rbx
			__current_task.s = -1;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) ::perror("epoll_create");
		}
		FileStreamManager::~FileStreamManager()
   16e1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e22:	48 83 c0 40          	add    $0x40,%rax
   16e26:	48 89 c7             	mov    %rax,%rdi
   16e29:	e8 f2 ef ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   16e2e:	eb 03                	jmp    16e33 <_ZN6xaxaxa2IO17FileStreamManagerD1Ev+0x8b>
   16e30:	48 89 c3             	mov    %rax,%rbx
   16e33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e37:	48 83 c0 10          	add    $0x10,%rax
   16e3b:	48 89 c7             	mov    %rax,%rdi
   16e3e:	e8 dd ea ff ff       	callq  15920 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>
   16e43:	eb 03                	jmp    16e48 <_ZN6xaxaxa2IO17FileStreamManagerD1Ev+0xa0>
   16e45:	48 89 c3             	mov    %rax,%rbx
   16e48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e4c:	48 89 c7             	mov    %rax,%rdi
   16e4f:	e8 8c f3 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   16e54:	48 89 d8             	mov    %rbx,%rax
   16e57:	48 89 c7             	mov    %rax,%rdi
   16e5a:	e8 51 fc ff ff       	callq  16ab0 <_Unwind_Resume@plt>
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
		}
   16e5f:	48 83 c4 18          	add    $0x18,%rsp
   16e63:	5b                   	pop    %rbx
   16e64:	5d                   	pop    %rbp
   16e65:	c3                   	retq   

0000000000016e66 <_ZN6xaxaxa2IO17FileStreamManagerD0Ev>:
			__current_task.s = -1;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) ::perror("epoll_create");
		}
		FileStreamManager::~FileStreamManager()
   16e66:	55                   	push   %rbp
   16e67:	48 89 e5             	mov    %rsp,%rbp
   16e6a:	48 83 ec 10          	sub    $0x10,%rsp
   16e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
		}
   16e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e76:	48 89 c7             	mov    %rax,%rdi
   16e79:	e8 62 ec ff ff       	callq  15ae0 <_ZN6xaxaxa2IO17FileStreamManagerD1Ev@plt>
   16e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e82:	48 89 c7             	mov    %rax,%rdi
   16e85:	e8 66 e7 ff ff       	callq  155f0 <_ZdlPv@plt>
   16e8a:	c9                   	leaveq 
   16e8b:	c3                   	retq   

0000000000016e8c <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv>:
		void FileStreamManager::EventLoop()
		{
   16e8c:	55                   	push   %rbp
   16e8d:	48 89 e5             	mov    %rsp,%rbp
   16e90:	41 55                	push   %r13
   16e92:	41 54                	push   %r12
   16e94:	53                   	push   %rbx
   16e95:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   16e9c:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
			epoll_event* events = new epoll_event[pollcount];
   16ea3:	bf 80 01 00 00       	mov    $0x180,%edi
   16ea8:	e8 03 e7 ff ff       	callq  155b0 <_Znam@plt>
   16ead:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			while (1)
			{
				int tmp = epoll_wait(this->epollfd, events, pollcount, -1);
   16eb1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16eb8:	8b 40 0c             	mov    0xc(%rax),%eax
   16ebb:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   16ebf:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   16ec4:	ba 20 00 00 00       	mov    $0x20,%edx
   16ec9:	89 c7                	mov    %eax,%edi
   16ecb:	e8 00 f7 ff ff       	callq  165d0 <epoll_wait@plt>
   16ed0:	89 45 cc             	mov    %eax,-0x34(%rbp)
				//cout << tmp;
				if (tmp == -1) throw Exception(errno);
   16ed3:	83 7d cc ff          	cmpl   $0xffffffff,-0x34(%rbp)
   16ed7:	75 3a                	jne    16f13 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x87>
   16ed9:	bf 18 00 00 00       	mov    $0x18,%edi
   16ede:	e8 4d f6 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   16ee3:	48 89 c3             	mov    %rax,%rbx
   16ee6:	e8 f5 f4 ff ff       	callq  163e0 <__errno_location@plt>
   16eeb:	8b 00                	mov    (%rax),%eax
   16eed:	89 c6                	mov    %eax,%esi
   16eef:	48 89 df             	mov    %rbx,%rdi
   16ef2:	e8 89 e7 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   16ef7:	48 8b 05 9a 31 21 00 	mov    0x21319a(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   16efe:	48 89 c2             	mov    %rax,%rdx
   16f01:	48 8b 05 30 32 21 00 	mov    0x213230(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   16f08:	48 89 c6             	mov    %rax,%rsi
   16f0b:	48 89 df             	mov    %rbx,%rdi
   16f0e:	e8 fd f7 ff ff       	callq  16710 <__cxa_throw@plt>
				for (int a = 0; a < tmp; a++)
   16f13:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   16f1a:	e9 28 06 00 00       	jmpq   17547 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x6bb>
				{
					epoll_event ev = events[a];
   16f1f:	8b 45 dc             	mov    -0x24(%rbp),%eax
   16f22:	48 63 d0             	movslq %eax,%rdx
   16f25:	48 89 d0             	mov    %rdx,%rax
   16f28:	48 01 c0             	add    %rax,%rax
   16f2b:	48 01 d0             	add    %rdx,%rax
   16f2e:	48 c1 e0 02          	shl    $0x2,%rax
   16f32:	48 03 45 d0          	add    -0x30(%rbp),%rax
   16f36:	48 8b 10             	mov    (%rax),%rdx
   16f39:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
   16f40:	8b 40 08             	mov    0x8(%rax),%eax
   16f43:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
					FILEDES s = ev.data.fd;
   16f49:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
   16f4f:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
					dbgprint("s=" << s);
					__current_task = this->info[s];
   16f55:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16f5c:	48 8d 50 10          	lea    0x10(%rax),%rdx
   16f60:	48 8d 85 2c ff ff ff 	lea    -0xd4(%rbp),%rax
   16f67:	48 89 c6             	mov    %rax,%rsi
   16f6a:	48 89 d7             	mov    %rdx,%rdi
   16f6d:	e8 ee fa ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   16f72:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   16f79:	48 83 c2 40          	add    $0x40,%rdx
   16f7d:	48 89 c6             	mov    %rax,%rsi
   16f80:	48 89 d7             	mov    %rdx,%rdi
   16f83:	e8 48 eb ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
					 dbgprint(s << "not initialized");
					 this->info.erase(s);
					 continue;
					 }*/
					__current_task.new_events = __current_task.events
							& (~ev.events);
   16f88:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16f8f:	8b 40 68             	mov    0x68(%rax),%eax
   16f92:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
   16f98:	f7 d2                	not    %edx
   16f9a:	21 c2                	and    %eax,%edx
   16f9c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16fa3:	89 50 6c             	mov    %edx,0x6c(%rax)
					dbgprint("__current_task.events=" << __current_task.events);dbgprint("ev.events=" << ev.events);
					if (__current_task.events & ev.events & EPOLLIN)
   16fa6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16fad:	8b 50 68             	mov    0x68(%rax),%edx
   16fb0:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   16fb6:	21 d0                	and    %edx,%eax
   16fb8:	83 e0 01             	and    $0x1,%eax
   16fbb:	84 c0                	test   %al,%al
   16fbd:	0f 84 4b 02 00 00    	je     1720e <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x382>
					{
						if (ev.events & EPOLLHUP)
   16fc3:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   16fc9:	83 e0 10             	and    $0x10,%eax
   16fcc:	85 c0                	test   %eax,%eax
   16fce:	74 16                	je     16fe6 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x15a>
						{
							__current_task.r_errno = 104;
   16fd0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16fd7:	c7 80 b8 00 00 00 68 	movl   $0x68,0xb8(%rax)
   16fde:	00 00 00 
   16fe1:	e9 2e 01 00 00       	jmpq   17114 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x288>
						}
						else
						{
							if (__current_task.bits & 2)
   16fe6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16fed:	8b 40 40             	mov    0x40(%rax),%eax
   16ff0:	83 e0 02             	and    $0x2,%eax
   16ff3:	85 c0                	test   %eax,%eax
   16ff5:	0f 84 19 01 00 00    	je     17114 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x288>
							{
								int tmp = read(s, __current_task.r_buf.Data,
										__current_task.r_buf.Length);
   16ffb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17002:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   17008:	48 63 d0             	movslq %eax,%rdx
   1700b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17012:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
   17019:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   1701f:	48 89 ce             	mov    %rcx,%rsi
   17022:	89 c7                	mov    %eax,%edi
   17024:	e8 87 e7 ff ff       	callq  157b0 <read@plt>
   17029:	89 45 c8             	mov    %eax,-0x38(%rbp)
								if (tmp < 0)
   1702c:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   17030:	79 2e                	jns    17060 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x1d4>
								{
									if (!__current_task.r_length) __current_task.r_errno
   17032:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17039:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
   1703f:	85 c0                	test   %eax,%eax
   17041:	0f 85 cd 00 00 00    	jne    17114 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x288>
											= errno;
   17047:	e8 94 f3 ff ff       	callq  163e0 <__errno_location@plt>
   1704c:	8b 10                	mov    (%rax),%edx
   1704e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17055:	89 90 b8 00 00 00    	mov    %edx,0xb8(%rax)
   1705b:	e9 b4 00 00 00       	jmpq   17114 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x288>
								}
								else if (tmp > 0)
   17060:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   17064:	0f 8e aa 00 00 00    	jle    17114 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x288>
								{
									__current_task.r_length += tmp;
   1706a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17071:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
   17077:	89 c2                	mov    %eax,%edx
   17079:	03 55 c8             	add    -0x38(%rbp),%edx
   1707c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17083:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
									if (tmp < __current_task.r_buf.Length)
   17089:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17090:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   17096:	3b 45 c8             	cmp    -0x38(%rbp),%eax
   17099:	7e 79                	jle    17114 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x288>
									{
										__current_task.new_events |= EPOLLIN;
   1709b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   170a2:	8b 40 6c             	mov    0x6c(%rax),%eax
   170a5:	89 c2                	mov    %eax,%edx
   170a7:	83 ca 01             	or     $0x1,%edx
   170aa:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   170b1:	89 50 6c             	mov    %edx,0x6c(%rax)
										__current_task.r_buf
												= __current_task.r_buf.SubBuffer(
														tmp,
														__current_task.r_buf.Length
																- tmp);
   170b4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   170bb:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   170c1:	89 c1                	mov    %eax,%ecx
   170c3:	2b 4d c8             	sub    -0x38(%rbp),%ecx
   170c6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   170cd:	48 8d 70 70          	lea    0x70(%rax),%rsi
   170d1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   170d8:	8b 55 c8             	mov    -0x38(%rbp),%edx
   170db:	48 89 c7             	mov    %rax,%rdi
   170de:	e8 bd ee ff ff       	callq  15fa0 <_ZNK6xaxaxa6Buffer9SubBufferEii@plt>
   170e3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   170ea:	48 8d 50 70          	lea    0x70(%rax),%rdx
   170ee:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   170f5:	48 89 c6             	mov    %rax,%rsi
   170f8:	48 89 d7             	mov    %rdx,%rdi
   170fb:	e8 c0 e6 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
   17100:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   17107:	48 89 c7             	mov    %rax,%rdi
   1710a:	e8 21 e4 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
										goto asdf;
   1710f:	e9 40 03 00 00       	jmpq   17454 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x5c8>
									}
								}
							}
						}dbgprint("calling cb_recv=" << __current_task.cb_recv.f);
						FUNCTION_CALL(__current_task.cb_recv,this,File(s));
   17114:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1711b:	48 8b 40 48          	mov    0x48(%rax),%rax
   1711f:	bb 00 00 00 00       	mov    $0x0,%ebx
   17124:	48 85 c0             	test   %rax,%rax
   17127:	0f 85 85 00 00 00    	jne    171b2 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x326>
   1712d:	bf 18 00 00 00       	mov    $0x18,%edi
   17132:	e8 f9 f3 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17137:	49 89 c4             	mov    %rax,%r12
   1713a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   17141:	48 89 c7             	mov    %rax,%rdi
   17144:	e8 a7 f8 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   17149:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   17150:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   17157:	48 8d 35 c2 ce 00 00 	lea    0xcec2(%rip),%rsi        # 24020 <_ZStL6ignore+0x3e>
   1715e:	48 89 c7             	mov    %rax,%rdi
   17161:	e8 7a ee ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   17166:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1716d:	48 89 c6             	mov    %rax,%rsi
   17170:	4c 89 e7             	mov    %r12,%rdi
   17173:	e8 e8 ee ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   17178:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1717f:	48 89 c7             	mov    %rax,%rdi
   17182:	e8 b9 e9 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   17187:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1718e:	48 89 c7             	mov    %rax,%rdi
   17191:	e8 aa f3 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   17196:	48 8b 05 fb 2e 21 00 	mov    0x212efb(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1719d:	48 89 c2             	mov    %rax,%rdx
   171a0:	48 8b 05 91 2f 21 00 	mov    0x212f91(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   171a7:	48 89 c6             	mov    %rax,%rsi
   171aa:	4c 89 e7             	mov    %r12,%rdi
   171ad:	e8 5e f5 ff ff       	callq  16710 <__cxa_throw@plt>
   171b2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   171b9:	4c 8b 60 48          	mov    0x48(%rax),%r12
   171bd:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
   171c3:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   171ca:	89 d6                	mov    %edx,%esi
   171cc:	48 89 c7             	mov    %rax,%rdi
   171cf:	e8 fc ea ff ff       	callq  15cd0 <_ZN6xaxaxa4FileC1Ei@plt>
   171d4:	bb 01 00 00 00       	mov    $0x1,%ebx
   171d9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   171e0:	48 8b 40 50          	mov    0x50(%rax),%rax
   171e4:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   171eb:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
   171f2:	48 89 ce             	mov    %rcx,%rsi
   171f5:	48 89 c7             	mov    %rax,%rdi
   171f8:	41 ff d4             	callq  *%r12
   171fb:	84 db                	test   %bl,%bl
   171fd:	74 0f                	je     1720e <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x382>
   171ff:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   17206:	48 89 c7             	mov    %rax,%rdi
   17209:	e8 a2 e0 ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
					}
					if (__current_task.events & ev.events & EPOLLOUT)
   1720e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17215:	8b 50 68             	mov    0x68(%rax),%edx
   17218:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   1721e:	21 d0                	and    %edx,%eax
   17220:	83 e0 04             	and    $0x4,%eax
   17223:	85 c0                	test   %eax,%eax
   17225:	0f 84 29 02 00 00    	je     17454 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x5c8>
					{
						if (ev.events & EPOLLHUP)
   1722b:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   17231:	83 e0 10             	and    $0x10,%eax
   17234:	85 c0                	test   %eax,%eax
   17236:	74 16                	je     1724e <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x3c2>
						{
							__current_task.w_errno = 104;
   17238:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1723f:	c7 80 bc 00 00 00 68 	movl   $0x68,0xbc(%rax)
   17246:	00 00 00 
   17249:	e9 2b 01 00 00       	jmpq   17379 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x4ed>
						}
						else
						{
							if (__current_task.bits & 4)
   1724e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17255:	8b 40 40             	mov    0x40(%rax),%eax
   17258:	83 e0 04             	and    $0x4,%eax
   1725b:	85 c0                	test   %eax,%eax
   1725d:	0f 84 16 01 00 00    	je     17379 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x4ed>
							{
								int tmp = write(s, __current_task.w_buf.Data,
										__current_task.w_buf.Length);
   17263:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1726a:	8b 80 ac 00 00 00    	mov    0xac(%rax),%eax
   17270:	48 63 d0             	movslq %eax,%rdx
   17273:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1727a:	48 8b 88 a0 00 00 00 	mov    0xa0(%rax),%rcx
   17281:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   17287:	48 89 ce             	mov    %rcx,%rsi
   1728a:	89 c7                	mov    %eax,%edi
   1728c:	e8 df f7 ff ff       	callq  16a70 <write@plt>
   17291:	89 45 c4             	mov    %eax,-0x3c(%rbp)
								if (tmp < 0)
   17294:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   17298:	79 2e                	jns    172c8 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x43c>
								{
									if (!__current_task.w_length) __current_task.w_errno
   1729a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   172a1:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
   172a7:	85 c0                	test   %eax,%eax
   172a9:	0f 85 ca 00 00 00    	jne    17379 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x4ed>
											= errno;
   172af:	e8 2c f1 ff ff       	callq  163e0 <__errno_location@plt>
   172b4:	8b 10                	mov    (%rax),%edx
   172b6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   172bd:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
   172c3:	e9 b1 00 00 00       	jmpq   17379 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x4ed>
								}
								else if (tmp > 0)
   172c8:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   172cc:	0f 8e a7 00 00 00    	jle    17379 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x4ed>
								{
									__current_task.w_length += tmp;
   172d2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   172d9:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
   172df:	89 c2                	mov    %eax,%edx
   172e1:	03 55 c4             	add    -0x3c(%rbp),%edx
   172e4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   172eb:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)
									if (tmp < __current_task.w_buf.Length)
   172f1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   172f8:	8b 80 ac 00 00 00    	mov    0xac(%rax),%eax
   172fe:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
   17301:	7e 76                	jle    17379 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x4ed>
									{
										__current_task.new_events |= EPOLLOUT;
   17303:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1730a:	8b 40 6c             	mov    0x6c(%rax),%eax
   1730d:	89 c2                	mov    %eax,%edx
   1730f:	83 ca 04             	or     $0x4,%edx
   17312:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17319:	89 50 6c             	mov    %edx,0x6c(%rax)
										__current_task.w_buf
												= __current_task.w_buf.SubBuffer(
														tmp,
														__current_task.w_buf.Length
																- tmp);
   1731c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17323:	8b 80 ac 00 00 00    	mov    0xac(%rax),%eax
   17329:	89 c1                	mov    %eax,%ecx
   1732b:	2b 4d c4             	sub    -0x3c(%rbp),%ecx
   1732e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17335:	48 8d b0 90 00 00 00 	lea    0x90(%rax),%rsi
   1733c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   17340:	8b 55 c4             	mov    -0x3c(%rbp),%edx
   17343:	48 89 c7             	mov    %rax,%rdi
   17346:	e8 55 ec ff ff       	callq  15fa0 <_ZNK6xaxaxa6Buffer9SubBufferEii@plt>
   1734b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17352:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
   17359:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1735d:	48 89 c6             	mov    %rax,%rsi
   17360:	48 89 d7             	mov    %rdx,%rdi
   17363:	e8 58 e4 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
   17368:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1736c:	48 89 c7             	mov    %rax,%rdi
   1736f:	e8 bc e1 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
										goto asdf;
   17374:	e9 db 00 00 00       	jmpq   17454 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x5c8>
									}
								}
							}
						}dbgprint("calling cb_send=" << __current_task.cb_send.f);
						FUNCTION_CALL(__current_task.cb_send,this,File(s));
   17379:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17380:	48 8b 40 58          	mov    0x58(%rax),%rax
   17384:	bb 00 00 00 00       	mov    $0x0,%ebx
   17389:	48 85 c0             	test   %rax,%rax
   1738c:	75 73                	jne    17401 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x575>
   1738e:	bf 18 00 00 00       	mov    $0x18,%edi
   17393:	e8 98 f1 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17398:	49 89 c4             	mov    %rax,%r12
   1739b:	48 8d 45 af          	lea    -0x51(%rbp),%rax
   1739f:	48 89 c7             	mov    %rax,%rdi
   173a2:	e8 49 f6 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   173a7:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
   173ab:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   173af:	48 8d 35 6a cc 00 00 	lea    0xcc6a(%rip),%rsi        # 24020 <_ZStL6ignore+0x3e>
   173b6:	48 89 c7             	mov    %rax,%rdi
   173b9:	e8 22 ec ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   173be:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   173c2:	48 89 c6             	mov    %rax,%rsi
   173c5:	4c 89 e7             	mov    %r12,%rdi
   173c8:	e8 93 ec ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   173cd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   173d1:	48 89 c7             	mov    %rax,%rdi
   173d4:	e8 67 e7 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   173d9:	48 8d 45 af          	lea    -0x51(%rbp),%rax
   173dd:	48 89 c7             	mov    %rax,%rdi
   173e0:	e8 5b f1 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   173e5:	48 8b 05 ac 2c 21 00 	mov    0x212cac(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   173ec:	48 89 c2             	mov    %rax,%rdx
   173ef:	48 8b 05 42 2d 21 00 	mov    0x212d42(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   173f6:	48 89 c6             	mov    %rax,%rsi
   173f9:	4c 89 e7             	mov    %r12,%rdi
   173fc:	e8 0f f3 ff ff       	callq  16710 <__cxa_throw@plt>
   17401:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17408:	4c 8b 60 58          	mov    0x58(%rax),%r12
   1740c:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
   17412:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   17416:	89 d6                	mov    %edx,%esi
   17418:	48 89 c7             	mov    %rax,%rdi
   1741b:	e8 b0 e8 ff ff       	callq  15cd0 <_ZN6xaxaxa4FileC1Ei@plt>
   17420:	bb 01 00 00 00       	mov    $0x1,%ebx
   17425:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1742c:	48 8b 40 60          	mov    0x60(%rax),%rax
   17430:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   17434:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
   1743b:	48 89 ce             	mov    %rcx,%rsi
   1743e:	48 89 c7             	mov    %rax,%rdi
   17441:	41 ff d4             	callq  *%r12
   17444:	84 db                	test   %bl,%bl
   17446:	74 0c                	je     17454 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x5c8>
   17448:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1744c:	48 89 c7             	mov    %rax,%rdi
   1744f:	e8 5c de ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
					}
					asdf: dbgprint("i.new_events=" << __current_task.new_events);
					if (__current_task.new_events == 0)
   17454:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1745b:	8b 40 6c             	mov    0x6c(%rax),%eax
   1745e:	85 c0                	test   %eax,%eax
   17460:	75 43                	jne    174a5 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x619>
					{
						epoll_ctl(this->epollfd, EPOLL_CTL_DEL, s, NULL);
   17462:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
   17468:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1746f:	8b 40 0c             	mov    0xc(%rax),%eax
   17472:	b9 00 00 00 00       	mov    $0x0,%ecx
   17477:	be 02 00 00 00       	mov    $0x2,%esi
   1747c:	89 c7                	mov    %eax,%edi
   1747e:	e8 7d eb ff ff       	callq  16000 <epoll_ctl@plt>
						this->info.erase(s);
   17483:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1748a:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1748e:	48 8d 85 2c ff ff ff 	lea    -0xd4(%rbp),%rax
   17495:	48 89 c6             	mov    %rax,%rsi
   17498:	48 89 d7             	mov    %rdx,%rdi
   1749b:	e8 30 e1 ff ff       	callq  155d0 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_@plt>
						dbgprint("removing fd " << s);
						continue;
   174a0:	e9 9e 00 00 00       	jmpq   17543 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x6b7>
					}
					else if (__current_task.new_events != __current_task.events)
   174a5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   174ac:	8b 50 6c             	mov    0x6c(%rax),%edx
   174af:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   174b6:	8b 40 68             	mov    0x68(%rax),%eax
   174b9:	39 c2                	cmp    %eax,%edx
   174bb:	74 53                	je     17510 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x684>
					{
						__current_task.events = __current_task.new_events;
   174bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   174c4:	8b 50 6c             	mov    0x6c(%rax),%edx
   174c7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   174ce:	89 50 68             	mov    %edx,0x68(%rax)
						epoll_event ev2;
						ev2.data.fd = s;
   174d1:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
   174d7:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
						ev2.events = __current_task.events;
   174dd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   174e4:	8b 40 68             	mov    0x68(%rax),%eax
   174e7:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s, &ev2);
   174ed:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
   174f3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   174fa:	8b 40 0c             	mov    0xc(%rax),%eax
   174fd:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
   17504:	be 03 00 00 00       	mov    $0x3,%esi
   17509:	89 c7                	mov    %eax,%edi
   1750b:	e8 f0 ea ff ff       	callq  16000 <epoll_ctl@plt>
						dbgprint("epoll events set to: " << ev2.events);
					}
					this->info[s] = __current_task;
   17510:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17517:	48 8d 58 40          	lea    0x40(%rax),%rbx
   1751b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17522:	48 8d 50 10          	lea    0x10(%rax),%rdx
   17526:	48 8d 85 2c ff ff ff 	lea    -0xd4(%rbp),%rax
   1752d:	48 89 c6             	mov    %rax,%rsi
   17530:	48 89 d7             	mov    %rdx,%rdi
   17533:	e8 28 f5 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   17538:	48 89 de             	mov    %rbx,%rsi
   1753b:	48 89 c7             	mov    %rax,%rdi
   1753e:	e8 8d e5 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
			while (1)
			{
				int tmp = epoll_wait(this->epollfd, events, pollcount, -1);
				//cout << tmp;
				if (tmp == -1) throw Exception(errno);
				for (int a = 0; a < tmp; a++)
   17543:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   17547:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1754a:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   1754d:	0f 9c c0             	setl   %al
   17550:	84 c0                	test   %al,%al
   17552:	0f 85 c7 f9 ff ff    	jne    16f1f <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x93>
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s, &ev2);
						dbgprint("epoll events set to: " << ev2.events);
					}
					this->info[s] = __current_task;
				}
				__current_task.s = -1;
   17558:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1755f:	c7 40 44 ff ff ff ff 	movl   $0xffffffff,0x44(%rax)
			close(this->epollfd);
		}
		void FileStreamManager::EventLoop()
		{
			epoll_event* events = new epoll_event[pollcount];
			while (1)
   17566:	e9 46 f9 ff ff       	jmpq   16eb1 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x25>
   1756b:	49 89 c4             	mov    %rax,%r12
			{
				int tmp = epoll_wait(this->epollfd, events, pollcount, -1);
				//cout << tmp;
				if (tmp == -1) throw Exception(errno);
   1756e:	48 89 df             	mov    %rbx,%rdi
   17571:	e8 3a f0 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   17576:	4c 89 e0             	mov    %r12,%rax
   17579:	48 89 c7             	mov    %rax,%rdi
   1757c:	e8 2f f5 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   17581:	48 89 c3             	mov    %rax,%rbx
										__current_task.new_events |= EPOLLIN;
										__current_task.r_buf
												= __current_task.r_buf.SubBuffer(
														tmp,
														__current_task.r_buf.Length
																- tmp);
   17584:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1758b:	48 89 c7             	mov    %rax,%rdi
   1758e:	e8 9d df ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   17593:	48 89 d8             	mov    %rbx,%rax
   17596:	48 89 c7             	mov    %rax,%rdi
   17599:	e8 12 f5 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1759e:	49 89 c5             	mov    %rax,%r13
										goto asdf;
									}
								}
							}
						}dbgprint("calling cb_recv=" << __current_task.cb_recv.f);
						FUNCTION_CALL(__current_task.cb_recv,this,File(s));
   175a1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   175a8:	48 89 c7             	mov    %rax,%rdi
   175ab:	e8 90 e5 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   175b0:	eb 03                	jmp    175b5 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x729>
   175b2:	49 89 c5             	mov    %rax,%r13
   175b5:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   175bc:	48 89 c7             	mov    %rax,%rdi
   175bf:	e8 7c ef ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   175c4:	4c 89 e7             	mov    %r12,%rdi
   175c7:	e8 e4 ef ff ff       	callq  165b0 <__cxa_free_exception@plt>
   175cc:	4d 89 ec             	mov    %r13,%r12
   175cf:	eb 03                	jmp    175d4 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x748>
   175d1:	49 89 c4             	mov    %rax,%r12
   175d4:	84 db                	test   %bl,%bl
   175d6:	74 0f                	je     175e7 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x75b>
   175d8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   175df:	48 89 c7             	mov    %rax,%rdi
   175e2:	e8 c9 dc ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
   175e7:	4c 89 e0             	mov    %r12,%rax
   175ea:	48 89 c7             	mov    %rax,%rdi
   175ed:	e8 be f4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   175f2:	48 89 c3             	mov    %rax,%rbx
										__current_task.new_events |= EPOLLOUT;
										__current_task.w_buf
												= __current_task.w_buf.SubBuffer(
														tmp,
														__current_task.w_buf.Length
																- tmp);
   175f5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   175f9:	48 89 c7             	mov    %rax,%rdi
   175fc:	e8 2f df ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   17601:	48 89 d8             	mov    %rbx,%rax
   17604:	48 89 c7             	mov    %rax,%rdi
   17607:	e8 a4 f4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1760c:	49 89 c5             	mov    %rax,%r13
										goto asdf;
									}
								}
							}
						}dbgprint("calling cb_send=" << __current_task.cb_send.f);
						FUNCTION_CALL(__current_task.cb_send,this,File(s));
   1760f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   17613:	48 89 c7             	mov    %rax,%rdi
   17616:	e8 25 e5 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1761b:	eb 03                	jmp    17620 <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x794>
   1761d:	49 89 c5             	mov    %rax,%r13
   17620:	48 8d 45 af          	lea    -0x51(%rbp),%rax
   17624:	48 89 c7             	mov    %rax,%rdi
   17627:	e8 14 ef ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1762c:	4c 89 e7             	mov    %r12,%rdi
   1762f:	e8 7c ef ff ff       	callq  165b0 <__cxa_free_exception@plt>
   17634:	4d 89 ec             	mov    %r13,%r12
   17637:	eb 03                	jmp    1763c <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x7b0>
   17639:	49 89 c4             	mov    %rax,%r12
   1763c:	84 db                	test   %bl,%bl
   1763e:	74 0c                	je     1764c <_ZN6xaxaxa2IO17FileStreamManager9EventLoopEv+0x7c0>
   17640:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   17644:	48 89 c7             	mov    %rax,%rdi
   17647:	e8 64 dc ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
   1764c:	4c 89 e0             	mov    %r12,%rax
   1764f:	48 89 c7             	mov    %rax,%rdi
   17652:	e8 59 f4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   17657:	90                   	nop

0000000000017658 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb>:
				__current_task.s = -1;
			}
		}
		void FileStreamManager::BeginRecv(File s, Buffer buf, Callback cb,
				bool fill)
		{
   17658:	55                   	push   %rbp
   17659:	48 89 e5             	mov    %rsp,%rbp
   1765c:	41 54                	push   %r12
   1765e:	53                   	push   %rbx
   1765f:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   17666:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   1766d:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   17674:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   1767b:	48 89 c8             	mov    %rcx,%rax
   1767e:	4c 89 c1             	mov    %r8,%rcx
   17681:	44 89 ca             	mov    %r9d,%edx
   17684:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1768b:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
   17692:	88 95 04 ff ff ff    	mov    %dl,-0xfc(%rbp)
			if (s._f == __current_task.s)
   17698:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1769f:	8b 50 08             	mov    0x8(%rax),%edx
   176a2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   176a9:	8b 40 44             	mov    0x44(%rax),%eax
   176ac:	39 c2                	cmp    %eax,%edx
   176ae:	0f 85 44 01 00 00    	jne    177f8 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x1a0>
			{
				if (__current_task.new_events & EPOLLIN)
   176b4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   176bb:	8b 40 6c             	mov    0x6c(%rax),%eax
   176be:	83 e0 01             	and    $0x1,%eax
   176c1:	84 c0                	test   %al,%al
   176c3:	74 7c                	je     17741 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0xe9>
				{
					throw Exception(s._f, "socket is already receiving");
   176c5:	bf 18 00 00 00       	mov    $0x18,%edi
   176ca:	e8 61 ee ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   176cf:	48 89 c3             	mov    %rax,%rbx
   176d2:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   176d6:	48 89 c7             	mov    %rax,%rdi
   176d9:	e8 12 f3 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   176de:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   176e2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   176e6:	48 8d 35 54 c9 00 00 	lea    0xc954(%rip),%rsi        # 24041 <_ZStL6ignore+0x5f>
   176ed:	48 89 c7             	mov    %rax,%rdi
   176f0:	e8 eb e8 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   176f5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   176fc:	8b 40 08             	mov    0x8(%rax),%eax
   176ff:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   17703:	89 c6                	mov    %eax,%esi
   17705:	48 89 df             	mov    %rbx,%rdi
   17708:	e8 a3 ec ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   1770d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   17711:	48 89 c7             	mov    %rax,%rdi
   17714:	e8 27 e4 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   17719:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1771d:	48 89 c7             	mov    %rax,%rdi
   17720:	e8 1b ee ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   17725:	48 8b 05 6c 29 21 00 	mov    0x21296c(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1772c:	48 89 c2             	mov    %rax,%rdx
   1772f:	48 8b 05 02 2a 21 00 	mov    0x212a02(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   17736:	48 89 c6             	mov    %rax,%rsi
   17739:	48 89 df             	mov    %rbx,%rdi
   1773c:	e8 cf ef ff ff       	callq  16710 <__cxa_throw@plt>
				}
				__current_task.new_events |= EPOLLIN;
   17741:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17748:	8b 40 6c             	mov    0x6c(%rax),%eax
   1774b:	89 c2                	mov    %eax,%edx
   1774d:	83 ca 01             	or     $0x1,%edx
   17750:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17757:	89 50 6c             	mov    %edx,0x6c(%rax)
				__current_task.cb_recv = cb;
   1775a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17761:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   17768:	48 89 50 48          	mov    %rdx,0x48(%rax)
   1776c:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   17773:	48 89 50 50          	mov    %rdx,0x50(%rax)
				fill ? (__current_task.bits |= 2) : (__current_task.bits &= ~2);
   17777:	80 bd 04 ff ff ff 00 	cmpb   $0x0,-0xfc(%rbp)
   1777e:	74 1b                	je     1779b <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x143>
   17780:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17787:	8b 40 40             	mov    0x40(%rax),%eax
   1778a:	89 c2                	mov    %eax,%edx
   1778c:	83 ca 02             	or     $0x2,%edx
   1778f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17796:	89 50 40             	mov    %edx,0x40(%rax)
   17799:	eb 19                	jmp    177b4 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x15c>
   1779b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   177a2:	8b 40 40             	mov    0x40(%rax),%eax
   177a5:	89 c2                	mov    %eax,%edx
   177a7:	83 e2 fd             	and    $0xfffffffd,%edx
   177aa:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   177b1:	89 50 40             	mov    %edx,0x40(%rax)
				__current_task.r_buf = buf;
   177b4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   177bb:	48 8d 50 70          	lea    0x70(%rax),%rdx
   177bf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   177c6:	48 89 c6             	mov    %rax,%rsi
   177c9:	48 89 d7             	mov    %rdx,%rdi
   177cc:	e8 ef df ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				__current_task.r_length = 0;
   177d1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   177d8:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%rax)
   177df:	00 00 00 
				__current_task.r_errno = 0;
   177e2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   177e9:	c7 80 b8 00 00 00 00 	movl   $0x0,0xb8(%rax)
   177f0:	00 00 00 
				return;
   177f3:	e9 b9 03 00 00       	jmpq   17bb1 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x559>
			}
			taskInfo i = this->info[s._f];
   177f8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   177ff:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17803:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1780a:	48 83 c0 10          	add    $0x10,%rax
   1780e:	48 89 d6             	mov    %rdx,%rsi
   17811:	48 89 c7             	mov    %rax,%rdi
   17814:	e8 47 f2 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   17819:	48 89 c2             	mov    %rax,%rdx
   1781c:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   17823:	48 89 d6             	mov    %rdx,%rsi
   17826:	48 89 c7             	mov    %rax,%rdi
   17829:	e8 22 de ff ff       	callq  15650 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_@plt>
			if (i.bits)
   1782e:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   17834:	85 c0                	test   %eax,%eax
   17836:	0f 84 53 01 00 00    	je     1798f <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x337>
			{
				if (i.new_events & EPOLLIN)
   1783c:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   17842:	83 e0 01             	and    $0x1,%eax
   17845:	84 c0                	test   %al,%al
   17847:	74 7c                	je     178c5 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x26d>
				{
					throw Exception(s._f, "socket is already receiving");
   17849:	bf 18 00 00 00       	mov    $0x18,%edi
   1784e:	e8 dd ec ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17853:	48 89 c3             	mov    %rax,%rbx
   17856:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1785a:	48 89 c7             	mov    %rax,%rdi
   1785d:	e8 8e f1 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   17862:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   17866:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1786a:	48 8d 35 d0 c7 00 00 	lea    0xc7d0(%rip),%rsi        # 24041 <_ZStL6ignore+0x5f>
   17871:	48 89 c7             	mov    %rax,%rdi
   17874:	e8 67 e7 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   17879:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17880:	8b 40 08             	mov    0x8(%rax),%eax
   17883:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   17887:	89 c6                	mov    %eax,%esi
   17889:	48 89 df             	mov    %rbx,%rdi
   1788c:	e8 1f eb ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   17891:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17895:	48 89 c7             	mov    %rax,%rdi
   17898:	e8 a3 e2 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1789d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   178a1:	48 89 c7             	mov    %rax,%rdi
   178a4:	e8 97 ec ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   178a9:	48 8b 05 e8 27 21 00 	mov    0x2127e8(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   178b0:	48 89 c2             	mov    %rax,%rdx
   178b3:	48 8b 05 7e 28 21 00 	mov    0x21287e(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   178ba:	48 89 c6             	mov    %rax,%rsi
   178bd:	48 89 df             	mov    %rbx,%rdi
   178c0:	e8 4b ee ff ff       	callq  16710 <__cxa_throw@plt>
				}
				i.events |= EPOLLIN;
   178c5:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   178cb:	83 c8 01             	or     $0x1,%eax
   178ce:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
				i.new_events = i.events;
   178d4:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   178da:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
				epoll_event ev;
				ev.data.fd = s._f;
   178e0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   178e7:	8b 40 08             	mov    0x8(%rax),%eax
   178ea:	89 45 c4             	mov    %eax,-0x3c(%rbp)
				ev.events = i.events;
   178ed:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   178f3:	89 45 c0             	mov    %eax,-0x40(%rbp)
				i.cb_recv = cb;
   178f6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   178fd:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   17904:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1790b:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
				fill ? (i.bits |= 2) : (i.bits &= ~2);
   17912:	80 bd 04 ff ff ff 00 	cmpb   $0x0,-0xfc(%rbp)
   17919:	74 11                	je     1792c <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x2d4>
   1791b:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   17921:	83 c8 02             	or     $0x2,%eax
   17924:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1792a:	eb 0f                	jmp    1793b <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x2e3>
   1792c:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   17932:	83 e0 fd             	and    $0xfffffffd,%eax
   17935:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
				i.r_buf = buf;
   1793b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17942:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   17949:	48 83 c2 30          	add    $0x30,%rdx
   1794d:	48 89 c6             	mov    %rax,%rsi
   17950:	48 89 d7             	mov    %rdx,%rdi
   17953:	e8 68 de ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.r_length = 0;
   17958:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
				i.r_errno = 0;
   1795f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
				epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._f, &ev);
   17966:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1796d:	8b 50 08             	mov    0x8(%rax),%edx
   17970:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17977:	8b 40 0c             	mov    0xc(%rax),%eax
   1797a:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   1797e:	be 03 00 00 00       	mov    $0x3,%esi
   17983:	89 c7                	mov    %eax,%edi
   17985:	e8 76 e6 ff ff       	callq  16000 <epoll_ctl@plt>
   1798a:	e9 4e 01 00 00       	jmpq   17add <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x485>
			}
			else
			{
				i.bits = 1;
   1798f:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
   17996:	00 00 00 
				i.s = s._f;
   17999:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   179a0:	8b 40 08             	mov    0x8(%rax),%eax
   179a3:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
				i.events = EPOLLIN;
   179a9:	c7 85 58 ff ff ff 01 	movl   $0x1,-0xa8(%rbp)
   179b0:	00 00 00 
				i.new_events = EPOLLIN;
   179b3:	c7 85 5c ff ff ff 01 	movl   $0x1,-0xa4(%rbp)
   179ba:	00 00 00 
				i.cb_recv = cb;
   179bd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   179c4:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   179cb:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   179d2:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
				fill ? (i.bits |= 2) : (i.bits &= ~2);
   179d9:	80 bd 04 ff ff ff 00 	cmpb   $0x0,-0xfc(%rbp)
   179e0:	74 11                	je     179f3 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x39b>
   179e2:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   179e8:	83 c8 02             	or     $0x2,%eax
   179eb:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   179f1:	eb 0f                	jmp    17a02 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x3aa>
   179f3:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   179f9:	83 e0 fd             	and    $0xfffffffd,%eax
   179fc:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
				i.r_buf = buf;
   17a02:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17a09:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   17a10:	48 83 c2 30          	add    $0x30,%rdx
   17a14:	48 89 c6             	mov    %rax,%rsi
   17a17:	48 89 d7             	mov    %rdx,%rdi
   17a1a:	e8 a1 dd ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.r_length = 0;
   17a1f:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
				i.r_errno = 0;
   17a26:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
				this->info[s._f] = i;
   17a2d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17a34:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17a38:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17a3f:	48 83 c0 10          	add    $0x10,%rax
   17a43:	48 89 d6             	mov    %rdx,%rsi
   17a46:	48 89 c7             	mov    %rax,%rdi
   17a49:	e8 12 f0 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   17a4e:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   17a55:	48 89 d6             	mov    %rdx,%rsi
   17a58:	48 89 c7             	mov    %rax,%rdi
   17a5b:	e8 70 e0 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
				epoll_event ev;
				ev.data.fd = s._f;
   17a60:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17a67:	8b 40 08             	mov    0x8(%rax),%eax
   17a6a:	89 45 b4             	mov    %eax,-0x4c(%rbp)
				ev.events = i.events;
   17a6d:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   17a73:	89 45 b0             	mov    %eax,-0x50(%rbp)
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._f, &ev)!=0)throw Exception(errno);
   17a76:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17a7d:	8b 50 08             	mov    0x8(%rax),%edx
   17a80:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17a87:	8b 40 0c             	mov    0xc(%rax),%eax
   17a8a:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   17a8e:	be 01 00 00 00       	mov    $0x1,%esi
   17a93:	89 c7                	mov    %eax,%edi
   17a95:	e8 66 e5 ff ff       	callq  16000 <epoll_ctl@plt>
   17a9a:	85 c0                	test   %eax,%eax
   17a9c:	0f 95 c0             	setne  %al
   17a9f:	84 c0                	test   %al,%al
   17aa1:	74 3a                	je     17add <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x485>
   17aa3:	bf 18 00 00 00       	mov    $0x18,%edi
   17aa8:	e8 83 ea ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17aad:	48 89 c3             	mov    %rax,%rbx
   17ab0:	e8 2b e9 ff ff       	callq  163e0 <__errno_location@plt>
   17ab5:	8b 00                	mov    (%rax),%eax
   17ab7:	89 c6                	mov    %eax,%esi
   17ab9:	48 89 df             	mov    %rbx,%rdi
   17abc:	e8 bf db ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   17ac1:	48 8b 05 d0 25 21 00 	mov    0x2125d0(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   17ac8:	48 89 c2             	mov    %rax,%rdx
   17acb:	48 8b 05 66 26 21 00 	mov    0x212666(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   17ad2:	48 89 c6             	mov    %rax,%rsi
   17ad5:	48 89 df             	mov    %rbx,%rdi
   17ad8:	e8 33 ec ff ff       	callq  16710 <__cxa_throw@plt>
			}
			this->info[s._f] = i;
   17add:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17ae4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17ae8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17aef:	48 83 c0 10          	add    $0x10,%rax
   17af3:	48 89 d6             	mov    %rdx,%rsi
   17af6:	48 89 c7             	mov    %rax,%rdi
   17af9:	e8 62 ef ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   17afe:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   17b05:	48 89 d6             	mov    %rdx,%rsi
   17b08:	48 89 c7             	mov    %rax,%rdi
   17b0b:	e8 c0 df ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
				__current_task.r_buf = buf;
				__current_task.r_length = 0;
				__current_task.r_errno = 0;
				return;
			}
			taskInfo i = this->info[s._f];
   17b10:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   17b17:	48 89 c7             	mov    %rax,%rdi
   17b1a:	e8 01 e3 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   17b1f:	e9 8d 00 00 00       	jmpq   17bb1 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x559>
   17b24:	49 89 c4             	mov    %rax,%r12
		{
			if (s._f == __current_task.s)
			{
				if (__current_task.new_events & EPOLLIN)
				{
					throw Exception(s._f, "socket is already receiving");
   17b27:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   17b2b:	48 89 c7             	mov    %rax,%rdi
   17b2e:	e8 0d e0 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   17b33:	eb 03                	jmp    17b38 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x4e0>
   17b35:	49 89 c4             	mov    %rax,%r12
   17b38:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   17b3c:	48 89 c7             	mov    %rax,%rdi
   17b3f:	e8 fc e9 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   17b44:	48 89 df             	mov    %rbx,%rdi
   17b47:	e8 64 ea ff ff       	callq  165b0 <__cxa_free_exception@plt>
   17b4c:	4c 89 e0             	mov    %r12,%rax
   17b4f:	48 89 c7             	mov    %rax,%rdi
   17b52:	e8 59 ef ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   17b57:	49 89 c4             	mov    %rax,%r12
			taskInfo i = this->info[s._f];
			if (i.bits)
			{
				if (i.new_events & EPOLLIN)
				{
					throw Exception(s._f, "socket is already receiving");
   17b5a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17b5e:	48 89 c7             	mov    %rax,%rdi
   17b61:	e8 da df ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   17b66:	eb 03                	jmp    17b6b <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x513>
   17b68:	49 89 c4             	mov    %rax,%r12
   17b6b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17b6f:	48 89 c7             	mov    %rax,%rdi
   17b72:	e8 c9 e9 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   17b77:	48 89 df             	mov    %rbx,%rdi
   17b7a:	e8 31 ea ff ff       	callq  165b0 <__cxa_free_exception@plt>
   17b7f:	4c 89 e3             	mov    %r12,%rbx
   17b82:	eb 13                	jmp    17b97 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x53f>
   17b84:	49 89 c4             	mov    %rax,%r12
				i.r_errno = 0;
				this->info[s._f] = i;
				epoll_event ev;
				ev.data.fd = s._f;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._f, &ev)!=0)throw Exception(errno);
   17b87:	48 89 df             	mov    %rbx,%rdi
   17b8a:	e8 21 ea ff ff       	callq  165b0 <__cxa_free_exception@plt>
   17b8f:	4c 89 e3             	mov    %r12,%rbx
   17b92:	eb 03                	jmp    17b97 <_ZN6xaxaxa2IO17FileStreamManager9BeginRecvENS_4FileENS_6BufferENS1_8CallbackEb+0x53f>
   17b94:	48 89 c3             	mov    %rax,%rbx
				__current_task.r_buf = buf;
				__current_task.r_length = 0;
				__current_task.r_errno = 0;
				return;
			}
			taskInfo i = this->info[s._f];
   17b97:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   17b9e:	48 89 c7             	mov    %rax,%rdi
   17ba1:	e8 7a e2 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   17ba6:	48 89 d8             	mov    %rbx,%rax
   17ba9:	48 89 c7             	mov    %rax,%rdi
   17bac:	e8 ff ee ff ff       	callq  16ab0 <_Unwind_Resume@plt>
				ev.data.fd = s._f;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._f, &ev)!=0)throw Exception(errno);
			}
			this->info[s._f] = i;
		}
   17bb1:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
   17bb8:	5b                   	pop    %rbx
   17bb9:	41 5c                	pop    %r12
   17bbb:	5d                   	pop    %rbp
   17bbc:	c3                   	retq   
   17bbd:	90                   	nop

0000000000017bbe <_ZN6xaxaxa2IO17FileStreamManager7EndRecvENS_4FileE>:
		int FileStreamManager::EndRecv(File s)
		{
   17bbe:	55                   	push   %rbp
   17bbf:	48 89 e5             	mov    %rsp,%rbp
   17bc2:	41 54                	push   %r12
   17bc4:	53                   	push   %rbx
   17bc5:	48 83 ec 20          	sub    $0x20,%rsp
   17bc9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17bcd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
			taskInfo *i = (s._f == __current_task.s ? &__current_task
					: &this->info[s._f]);
   17bd1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17bd5:	8b 50 08             	mov    0x8(%rax),%edx
   17bd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17bdc:	8b 40 44             	mov    0x44(%rax),%eax
   17bdf:	39 c2                	cmp    %eax,%edx
   17be1:	75 0a                	jne    17bed <_ZN6xaxaxa2IO17FileStreamManager7EndRecvENS_4FileE+0x2f>
   17be3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17be7:	48 83 c0 40          	add    $0x40,%rax
   17beb:	eb 1b                	jmp    17c08 <_ZN6xaxaxa2IO17FileStreamManager7EndRecvENS_4FileE+0x4a>
   17bed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17bf1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17bf5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17bf9:	48 83 c0 10          	add    $0x10,%rax
   17bfd:	48 89 d6             	mov    %rdx,%rsi
   17c00:	48 89 c7             	mov    %rax,%rdi
   17c03:	e8 58 ee ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   17c08:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
			;
			//if(!i.initialized)throw Exception("");
			if (i->r_errno != 0) throw Exception(i->r_errno);
   17c0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c10:	8b 40 78             	mov    0x78(%rax),%eax
   17c13:	85 c0                	test   %eax,%eax
   17c15:	74 3a                	je     17c51 <_ZN6xaxaxa2IO17FileStreamManager7EndRecvENS_4FileE+0x93>
   17c17:	bf 18 00 00 00       	mov    $0x18,%edi
   17c1c:	e8 0f e9 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17c21:	48 89 c3             	mov    %rax,%rbx
   17c24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c28:	8b 40 78             	mov    0x78(%rax),%eax
   17c2b:	89 c6                	mov    %eax,%esi
   17c2d:	48 89 df             	mov    %rbx,%rdi
   17c30:	e8 4b da ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   17c35:	48 8b 05 5c 24 21 00 	mov    0x21245c(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   17c3c:	48 89 c2             	mov    %rax,%rdx
   17c3f:	48 8b 05 f2 24 21 00 	mov    0x2124f2(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   17c46:	48 89 c6             	mov    %rax,%rsi
   17c49:	48 89 df             	mov    %rbx,%rdi
   17c4c:	e8 bf ea ff ff       	callq  16710 <__cxa_throw@plt>
			if (i->bits & 2) return i->r_length;
   17c51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c55:	8b 00                	mov    (%rax),%eax
   17c57:	83 e0 02             	and    $0x2,%eax
   17c5a:	85 c0                	test   %eax,%eax
   17c5c:	74 09                	je     17c67 <_ZN6xaxaxa2IO17FileStreamManager7EndRecvENS_4FileE+0xa9>
   17c5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c62:	8b 40 70             	mov    0x70(%rax),%eax
   17c65:	eb 69                	jmp    17cd0 <_ZN6xaxaxa2IO17FileStreamManager7EndRecvENS_4FileE+0x112>
			else
			{
				int tmp = read(s._f, i->r_buf.Data, i->r_buf.Length);
   17c67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c6b:	8b 40 4c             	mov    0x4c(%rax),%eax
   17c6e:	48 63 d0             	movslq %eax,%rdx
   17c71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c75:	48 8b 48 40          	mov    0x40(%rax),%rcx
   17c79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17c7d:	8b 40 08             	mov    0x8(%rax),%eax
   17c80:	48 89 ce             	mov    %rcx,%rsi
   17c83:	89 c7                	mov    %eax,%edi
   17c85:	e8 26 db ff ff       	callq  157b0 <read@plt>
   17c8a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
				if (tmp < 0) throw Exception(errno);
   17c8d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   17c91:	79 3a                	jns    17ccd <_ZN6xaxaxa2IO17FileStreamManager7EndRecvENS_4FileE+0x10f>
   17c93:	bf 18 00 00 00       	mov    $0x18,%edi
   17c98:	e8 93 e8 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17c9d:	48 89 c3             	mov    %rax,%rbx
   17ca0:	e8 3b e7 ff ff       	callq  163e0 <__errno_location@plt>
   17ca5:	8b 00                	mov    (%rax),%eax
   17ca7:	89 c6                	mov    %eax,%esi
   17ca9:	48 89 df             	mov    %rbx,%rdi
   17cac:	e8 cf d9 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   17cb1:	48 8b 05 e0 23 21 00 	mov    0x2123e0(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   17cb8:	48 89 c2             	mov    %rax,%rdx
   17cbb:	48 8b 05 76 24 21 00 	mov    0x212476(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   17cc2:	48 89 c6             	mov    %rax,%rsi
   17cc5:	48 89 df             	mov    %rbx,%rdi
   17cc8:	e8 43 ea ff ff       	callq  16710 <__cxa_throw@plt>
				else
					return tmp;
   17ccd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
			}
		}
   17cd0:	48 83 c4 20          	add    $0x20,%rsp
   17cd4:	5b                   	pop    %rbx
   17cd5:	41 5c                	pop    %r12
   17cd7:	5d                   	pop    %rbp
   17cd8:	c3                   	retq   
   17cd9:	49 89 c4             	mov    %rax,%r12
		{
			taskInfo *i = (s._f == __current_task.s ? &__current_task
					: &this->info[s._f]);
			;
			//if(!i.initialized)throw Exception("");
			if (i->r_errno != 0) throw Exception(i->r_errno);
   17cdc:	48 89 df             	mov    %rbx,%rdi
   17cdf:	e8 cc e8 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   17ce4:	4c 89 e0             	mov    %r12,%rax
   17ce7:	48 89 c7             	mov    %rax,%rdi
   17cea:	e8 c1 ed ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   17cef:	49 89 c4             	mov    %rax,%r12
			if (i->bits & 2) return i->r_length;
			else
			{
				int tmp = read(s._f, i->r_buf.Data, i->r_buf.Length);
				if (tmp < 0) throw Exception(errno);
   17cf2:	48 89 df             	mov    %rbx,%rdi
   17cf5:	e8 b6 e8 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   17cfa:	4c 89 e0             	mov    %r12,%rax
   17cfd:	48 89 c7             	mov    %rax,%rdi
   17d00:	e8 ab ed ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   17d05:	90                   	nop

0000000000017d06 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb>:
			}
		}

		void FileStreamManager::BeginSend(File s, Buffer buf, Callback cb,
				bool fill)
		{
   17d06:	55                   	push   %rbp
   17d07:	48 89 e5             	mov    %rsp,%rbp
   17d0a:	41 54                	push   %r12
   17d0c:	53                   	push   %rbx
   17d0d:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   17d14:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   17d1b:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   17d22:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   17d29:	48 89 c8             	mov    %rcx,%rax
   17d2c:	4c 89 c1             	mov    %r8,%rcx
   17d2f:	44 89 ca             	mov    %r9d,%edx
   17d32:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   17d39:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
   17d40:	88 95 04 ff ff ff    	mov    %dl,-0xfc(%rbp)
			if (s._f == __current_task.s)
   17d46:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17d4d:	8b 50 08             	mov    0x8(%rax),%edx
   17d50:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17d57:	8b 40 44             	mov    0x44(%rax),%eax
   17d5a:	39 c2                	cmp    %eax,%edx
   17d5c:	0f 85 47 01 00 00    	jne    17ea9 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x1a3>
			{
				if (__current_task.new_events & EPOLLOUT)
   17d62:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17d69:	8b 40 6c             	mov    0x6c(%rax),%eax
   17d6c:	83 e0 04             	and    $0x4,%eax
   17d6f:	85 c0                	test   %eax,%eax
   17d71:	74 7c                	je     17def <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0xe9>
				{
					throw Exception(s._f, "socket is already sending");
   17d73:	bf 18 00 00 00       	mov    $0x18,%edi
   17d78:	e8 b3 e7 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17d7d:	48 89 c3             	mov    %rax,%rbx
   17d80:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   17d84:	48 89 c7             	mov    %rax,%rdi
   17d87:	e8 64 ec ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   17d8c:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   17d90:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   17d94:	48 8d 35 c2 c2 00 00 	lea    0xc2c2(%rip),%rsi        # 2405d <_ZStL6ignore+0x7b>
   17d9b:	48 89 c7             	mov    %rax,%rdi
   17d9e:	e8 3d e2 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   17da3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17daa:	8b 40 08             	mov    0x8(%rax),%eax
   17dad:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   17db1:	89 c6                	mov    %eax,%esi
   17db3:	48 89 df             	mov    %rbx,%rdi
   17db6:	e8 f5 e5 ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   17dbb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   17dbf:	48 89 c7             	mov    %rax,%rdi
   17dc2:	e8 79 dd ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   17dc7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   17dcb:	48 89 c7             	mov    %rax,%rdi
   17dce:	e8 6d e7 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   17dd3:	48 8b 05 be 22 21 00 	mov    0x2122be(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   17dda:	48 89 c2             	mov    %rax,%rdx
   17ddd:	48 8b 05 54 23 21 00 	mov    0x212354(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   17de4:	48 89 c6             	mov    %rax,%rsi
   17de7:	48 89 df             	mov    %rbx,%rdi
   17dea:	e8 21 e9 ff ff       	callq  16710 <__cxa_throw@plt>
				}
				__current_task.new_events |= EPOLLOUT;
   17def:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17df6:	8b 40 6c             	mov    0x6c(%rax),%eax
   17df9:	89 c2                	mov    %eax,%edx
   17dfb:	83 ca 04             	or     $0x4,%edx
   17dfe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e05:	89 50 6c             	mov    %edx,0x6c(%rax)
				__current_task.cb_send = cb;
   17e08:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e0f:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
   17e16:	48 89 50 58          	mov    %rdx,0x58(%rax)
   17e1a:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   17e21:	48 89 50 60          	mov    %rdx,0x60(%rax)
				fill ? (__current_task.bits |= 4) : (__current_task.bits &= ~4);
   17e25:	80 bd 04 ff ff ff 00 	cmpb   $0x0,-0xfc(%rbp)
   17e2c:	74 1b                	je     17e49 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x143>
   17e2e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e35:	8b 40 40             	mov    0x40(%rax),%eax
   17e38:	89 c2                	mov    %eax,%edx
   17e3a:	83 ca 04             	or     $0x4,%edx
   17e3d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e44:	89 50 40             	mov    %edx,0x40(%rax)
   17e47:	eb 19                	jmp    17e62 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x15c>
   17e49:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e50:	8b 40 40             	mov    0x40(%rax),%eax
   17e53:	89 c2                	mov    %eax,%edx
   17e55:	83 e2 fb             	and    $0xfffffffb,%edx
   17e58:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e5f:	89 50 40             	mov    %edx,0x40(%rax)
				__current_task.w_buf = buf;
   17e62:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e69:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
   17e70:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17e77:	48 89 c6             	mov    %rax,%rsi
   17e7a:	48 89 d7             	mov    %rdx,%rdi
   17e7d:	e8 3e d9 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				__current_task.w_length = 0;
   17e82:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e89:	c7 80 b4 00 00 00 00 	movl   $0x0,0xb4(%rax)
   17e90:	00 00 00 
				__current_task.w_errno = 0;
   17e93:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17e9a:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%rax)
   17ea1:	00 00 00 
				return;
   17ea4:	e9 b9 03 00 00       	jmpq   18262 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x55c>
			}
			taskInfo i = this->info[s._f];
   17ea9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17eb0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17eb4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   17ebb:	48 83 c0 10          	add    $0x10,%rax
   17ebf:	48 89 d6             	mov    %rdx,%rsi
   17ec2:	48 89 c7             	mov    %rax,%rdi
   17ec5:	e8 96 eb ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   17eca:	48 89 c2             	mov    %rax,%rdx
   17ecd:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   17ed4:	48 89 d6             	mov    %rdx,%rsi
   17ed7:	48 89 c7             	mov    %rax,%rdi
   17eda:	e8 71 d7 ff ff       	callq  15650 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_@plt>
			if (i.bits)
   17edf:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   17ee5:	85 c0                	test   %eax,%eax
   17ee7:	0f 84 53 01 00 00    	je     18040 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x33a>
			{
				if (i.new_events & EPOLLOUT)
   17eed:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   17ef3:	83 e0 04             	and    $0x4,%eax
   17ef6:	85 c0                	test   %eax,%eax
   17ef8:	74 7c                	je     17f76 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x270>
				{
					throw Exception(s._f, "socket is already sending");
   17efa:	bf 18 00 00 00       	mov    $0x18,%edi
   17eff:	e8 2c e6 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   17f04:	48 89 c3             	mov    %rax,%rbx
   17f07:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17f0b:	48 89 c7             	mov    %rax,%rdi
   17f0e:	e8 dd ea ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   17f13:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   17f17:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17f1b:	48 8d 35 3b c1 00 00 	lea    0xc13b(%rip),%rsi        # 2405d <_ZStL6ignore+0x7b>
   17f22:	48 89 c7             	mov    %rax,%rdi
   17f25:	e8 b6 e0 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   17f2a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17f31:	8b 40 08             	mov    0x8(%rax),%eax
   17f34:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   17f38:	89 c6                	mov    %eax,%esi
   17f3a:	48 89 df             	mov    %rbx,%rdi
   17f3d:	e8 6e e4 ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   17f42:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17f46:	48 89 c7             	mov    %rax,%rdi
   17f49:	e8 f2 db ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   17f4e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17f52:	48 89 c7             	mov    %rax,%rdi
   17f55:	e8 e6 e5 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   17f5a:	48 8b 05 37 21 21 00 	mov    0x212137(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   17f61:	48 89 c2             	mov    %rax,%rdx
   17f64:	48 8b 05 cd 21 21 00 	mov    0x2121cd(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   17f6b:	48 89 c6             	mov    %rax,%rsi
   17f6e:	48 89 df             	mov    %rbx,%rdi
   17f71:	e8 9a e7 ff ff       	callq  16710 <__cxa_throw@plt>
				}
				i.events |= EPOLLOUT;
   17f76:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   17f7c:	83 c8 04             	or     $0x4,%eax
   17f7f:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
				i.new_events = i.events;
   17f85:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   17f8b:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
				epoll_event ev;
				ev.data.fd = s._f;
   17f91:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17f98:	8b 40 08             	mov    0x8(%rax),%eax
   17f9b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
				ev.events = i.events;
   17f9e:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   17fa4:	89 45 c0             	mov    %eax,-0x40(%rbp)
				i.cb_send = cb;
   17fa7:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   17fae:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   17fb5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   17fbc:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
				fill ? (i.bits |= 4) : (i.bits &= ~4);
   17fc3:	80 bd 04 ff ff ff 00 	cmpb   $0x0,-0xfc(%rbp)
   17fca:	74 11                	je     17fdd <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x2d7>
   17fcc:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   17fd2:	83 c8 04             	or     $0x4,%eax
   17fd5:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   17fdb:	eb 0f                	jmp    17fec <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x2e6>
   17fdd:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   17fe3:	83 e0 fb             	and    $0xfffffffb,%eax
   17fe6:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
				i.w_buf = buf;
   17fec:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17ff3:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   17ffa:	48 83 c2 50          	add    $0x50,%rdx
   17ffe:	48 89 c6             	mov    %rax,%rsi
   18001:	48 89 d7             	mov    %rdx,%rdi
   18004:	e8 b7 d7 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.w_length = 0;
   18009:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
				i.w_errno = 0;
   18010:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
				epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._f, &ev);
   18017:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1801e:	8b 50 08             	mov    0x8(%rax),%edx
   18021:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18028:	8b 40 0c             	mov    0xc(%rax),%eax
   1802b:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
   1802f:	be 03 00 00 00       	mov    $0x3,%esi
   18034:	89 c7                	mov    %eax,%edi
   18036:	e8 c5 df ff ff       	callq  16000 <epoll_ctl@plt>
   1803b:	e9 4e 01 00 00       	jmpq   1818e <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x488>
			}
			else
			{
				i.bits = 1;
   18040:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
   18047:	00 00 00 
				i.s = s._f;
   1804a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   18051:	8b 40 08             	mov    0x8(%rax),%eax
   18054:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
				i.events = EPOLLOUT;
   1805a:	c7 85 58 ff ff ff 04 	movl   $0x4,-0xa8(%rbp)
   18061:	00 00 00 
				i.new_events = EPOLLOUT;
   18064:	c7 85 5c ff ff ff 04 	movl   $0x4,-0xa4(%rbp)
   1806b:	00 00 00 
				i.cb_send = cb;
   1806e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   18075:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1807c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   18083:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
				fill ? (i.bits |= 4) : (i.bits &= ~4);
   1808a:	80 bd 04 ff ff ff 00 	cmpb   $0x0,-0xfc(%rbp)
   18091:	74 11                	je     180a4 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x39e>
   18093:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   18099:	83 c8 04             	or     $0x4,%eax
   1809c:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   180a2:	eb 0f                	jmp    180b3 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x3ad>
   180a4:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
   180aa:	83 e0 fb             	and    $0xfffffffb,%eax
   180ad:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
				i.w_buf = buf;
   180b3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   180ba:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   180c1:	48 83 c2 50          	add    $0x50,%rdx
   180c5:	48 89 c6             	mov    %rax,%rsi
   180c8:	48 89 d7             	mov    %rdx,%rdi
   180cb:	e8 f0 d6 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.w_length = 0;
   180d0:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
				i.w_errno = 0;
   180d7:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
				this->info[s._f] = i;
   180de:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   180e5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   180e9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   180f0:	48 83 c0 10          	add    $0x10,%rax
   180f4:	48 89 d6             	mov    %rdx,%rsi
   180f7:	48 89 c7             	mov    %rax,%rdi
   180fa:	e8 61 e9 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   180ff:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   18106:	48 89 d6             	mov    %rdx,%rsi
   18109:	48 89 c7             	mov    %rax,%rdi
   1810c:	e8 bf d9 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
				epoll_event ev;
				ev.data.fd = s._f;
   18111:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   18118:	8b 40 08             	mov    0x8(%rax),%eax
   1811b:	89 45 b4             	mov    %eax,-0x4c(%rbp)
				ev.events = i.events;
   1811e:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18124:	89 45 b0             	mov    %eax,-0x50(%rbp)
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._f, &ev)!=0)throw Exception(errno);
   18127:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1812e:	8b 50 08             	mov    0x8(%rax),%edx
   18131:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18138:	8b 40 0c             	mov    0xc(%rax),%eax
   1813b:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1813f:	be 01 00 00 00       	mov    $0x1,%esi
   18144:	89 c7                	mov    %eax,%edi
   18146:	e8 b5 de ff ff       	callq  16000 <epoll_ctl@plt>
   1814b:	85 c0                	test   %eax,%eax
   1814d:	0f 95 c0             	setne  %al
   18150:	84 c0                	test   %al,%al
   18152:	74 3a                	je     1818e <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x488>
   18154:	bf 18 00 00 00       	mov    $0x18,%edi
   18159:	e8 d2 e3 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1815e:	48 89 c3             	mov    %rax,%rbx
   18161:	e8 7a e2 ff ff       	callq  163e0 <__errno_location@plt>
   18166:	8b 00                	mov    (%rax),%eax
   18168:	89 c6                	mov    %eax,%esi
   1816a:	48 89 df             	mov    %rbx,%rdi
   1816d:	e8 0e d5 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   18172:	48 8b 05 1f 1f 21 00 	mov    0x211f1f(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   18179:	48 89 c2             	mov    %rax,%rdx
   1817c:	48 8b 05 b5 1f 21 00 	mov    0x211fb5(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   18183:	48 89 c6             	mov    %rax,%rsi
   18186:	48 89 df             	mov    %rbx,%rdi
   18189:	e8 82 e5 ff ff       	callq  16710 <__cxa_throw@plt>
			}
			this->info[s._f] = i;
   1818e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   18195:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18199:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   181a0:	48 83 c0 10          	add    $0x10,%rax
   181a4:	48 89 d6             	mov    %rdx,%rsi
   181a7:	48 89 c7             	mov    %rax,%rdi
   181aa:	e8 b1 e8 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   181af:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   181b6:	48 89 d6             	mov    %rdx,%rsi
   181b9:	48 89 c7             	mov    %rax,%rdi
   181bc:	e8 0f d9 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
				__current_task.w_buf = buf;
				__current_task.w_length = 0;
				__current_task.w_errno = 0;
				return;
			}
			taskInfo i = this->info[s._f];
   181c1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   181c8:	48 89 c7             	mov    %rax,%rdi
   181cb:	e8 50 dc ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   181d0:	e9 8d 00 00 00       	jmpq   18262 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x55c>
   181d5:	49 89 c4             	mov    %rax,%r12
		{
			if (s._f == __current_task.s)
			{
				if (__current_task.new_events & EPOLLOUT)
				{
					throw Exception(s._f, "socket is already sending");
   181d8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   181dc:	48 89 c7             	mov    %rax,%rdi
   181df:	e8 5c d9 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   181e4:	eb 03                	jmp    181e9 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x4e3>
   181e6:	49 89 c4             	mov    %rax,%r12
   181e9:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   181ed:	48 89 c7             	mov    %rax,%rdi
   181f0:	e8 4b e3 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   181f5:	48 89 df             	mov    %rbx,%rdi
   181f8:	e8 b3 e3 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   181fd:	4c 89 e0             	mov    %r12,%rax
   18200:	48 89 c7             	mov    %rax,%rdi
   18203:	e8 a8 e8 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   18208:	49 89 c4             	mov    %rax,%r12
			taskInfo i = this->info[s._f];
			if (i.bits)
			{
				if (i.new_events & EPOLLOUT)
				{
					throw Exception(s._f, "socket is already sending");
   1820b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1820f:	48 89 c7             	mov    %rax,%rdi
   18212:	e8 29 d9 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18217:	eb 03                	jmp    1821c <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x516>
   18219:	49 89 c4             	mov    %rax,%r12
   1821c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18220:	48 89 c7             	mov    %rax,%rdi
   18223:	e8 18 e3 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   18228:	48 89 df             	mov    %rbx,%rdi
   1822b:	e8 80 e3 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   18230:	4c 89 e3             	mov    %r12,%rbx
   18233:	eb 13                	jmp    18248 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x542>
   18235:	49 89 c4             	mov    %rax,%r12
				i.w_errno = 0;
				this->info[s._f] = i;
				epoll_event ev;
				ev.data.fd = s._f;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._f, &ev)!=0)throw Exception(errno);
   18238:	48 89 df             	mov    %rbx,%rdi
   1823b:	e8 70 e3 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   18240:	4c 89 e3             	mov    %r12,%rbx
   18243:	eb 03                	jmp    18248 <_ZN6xaxaxa2IO17FileStreamManager9BeginSendENS_4FileENS_6BufferENS1_8CallbackEb+0x542>
   18245:	48 89 c3             	mov    %rax,%rbx
				__current_task.w_buf = buf;
				__current_task.w_length = 0;
				__current_task.w_errno = 0;
				return;
			}
			taskInfo i = this->info[s._f];
   18248:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   1824f:	48 89 c7             	mov    %rax,%rdi
   18252:	e8 c9 db ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   18257:	48 89 d8             	mov    %rbx,%rax
   1825a:	48 89 c7             	mov    %rax,%rdi
   1825d:	e8 4e e8 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
				ev.data.fd = s._f;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._f, &ev)!=0)throw Exception(errno);
			}
			this->info[s._f] = i;
		}
   18262:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
   18269:	5b                   	pop    %rbx
   1826a:	41 5c                	pop    %r12
   1826c:	5d                   	pop    %rbp
   1826d:	c3                   	retq   

000000000001826e <_ZN6xaxaxa2IO17FileStreamManager7EndSendENS_4FileE>:
		int FileStreamManager::EndSend(File s)
		{
   1826e:	55                   	push   %rbp
   1826f:	48 89 e5             	mov    %rsp,%rbp
   18272:	41 54                	push   %r12
   18274:	53                   	push   %rbx
   18275:	48 83 ec 20          	sub    $0x20,%rsp
   18279:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1827d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
			taskInfo *i = (s._f == __current_task.s ? &__current_task
					: &this->info[s._f]);
   18281:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18285:	8b 50 08             	mov    0x8(%rax),%edx
   18288:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1828c:	8b 40 44             	mov    0x44(%rax),%eax
   1828f:	39 c2                	cmp    %eax,%edx
   18291:	75 0a                	jne    1829d <_ZN6xaxaxa2IO17FileStreamManager7EndSendENS_4FileE+0x2f>
   18293:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18297:	48 83 c0 40          	add    $0x40,%rax
   1829b:	eb 1b                	jmp    182b8 <_ZN6xaxaxa2IO17FileStreamManager7EndSendENS_4FileE+0x4a>
   1829d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   182a1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   182a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182a9:	48 83 c0 10          	add    $0x10,%rax
   182ad:	48 89 d6             	mov    %rdx,%rsi
   182b0:	48 89 c7             	mov    %rax,%rdi
   182b3:	e8 a8 e7 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   182b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
			if (i->w_errno != 0) throw Exception(i->w_errno);
   182bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   182c0:	8b 40 7c             	mov    0x7c(%rax),%eax
   182c3:	85 c0                	test   %eax,%eax
   182c5:	74 3a                	je     18301 <_ZN6xaxaxa2IO17FileStreamManager7EndSendENS_4FileE+0x93>
   182c7:	bf 18 00 00 00       	mov    $0x18,%edi
   182cc:	e8 5f e2 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   182d1:	48 89 c3             	mov    %rax,%rbx
   182d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   182d8:	8b 40 7c             	mov    0x7c(%rax),%eax
   182db:	89 c6                	mov    %eax,%esi
   182dd:	48 89 df             	mov    %rbx,%rdi
   182e0:	e8 9b d3 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   182e5:	48 8b 05 ac 1d 21 00 	mov    0x211dac(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   182ec:	48 89 c2             	mov    %rax,%rdx
   182ef:	48 8b 05 42 1e 21 00 	mov    0x211e42(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   182f6:	48 89 c6             	mov    %rax,%rsi
   182f9:	48 89 df             	mov    %rbx,%rdi
   182fc:	e8 0f e4 ff ff       	callq  16710 <__cxa_throw@plt>
			//if(!i.initialized)throw Exception("");
			if (i->bits & 4) return i->w_length;
   18301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18305:	8b 00                	mov    (%rax),%eax
   18307:	83 e0 04             	and    $0x4,%eax
   1830a:	85 c0                	test   %eax,%eax
   1830c:	74 09                	je     18317 <_ZN6xaxaxa2IO17FileStreamManager7EndSendENS_4FileE+0xa9>
   1830e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18312:	8b 40 74             	mov    0x74(%rax),%eax
   18315:	eb 69                	jmp    18380 <_ZN6xaxaxa2IO17FileStreamManager7EndSendENS_4FileE+0x112>
			else
			{
				int tmp = write(s._f, i->w_buf.Data, i->w_buf.Length);
   18317:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1831b:	8b 40 6c             	mov    0x6c(%rax),%eax
   1831e:	48 63 d0             	movslq %eax,%rdx
   18321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18325:	48 8b 48 60          	mov    0x60(%rax),%rcx
   18329:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1832d:	8b 40 08             	mov    0x8(%rax),%eax
   18330:	48 89 ce             	mov    %rcx,%rsi
   18333:	89 c7                	mov    %eax,%edi
   18335:	e8 36 e7 ff ff       	callq  16a70 <write@plt>
   1833a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
				if (tmp < 0) throw Exception(errno);
   1833d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   18341:	79 3a                	jns    1837d <_ZN6xaxaxa2IO17FileStreamManager7EndSendENS_4FileE+0x10f>
   18343:	bf 18 00 00 00       	mov    $0x18,%edi
   18348:	e8 e3 e1 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1834d:	48 89 c3             	mov    %rax,%rbx
   18350:	e8 8b e0 ff ff       	callq  163e0 <__errno_location@plt>
   18355:	8b 00                	mov    (%rax),%eax
   18357:	89 c6                	mov    %eax,%esi
   18359:	48 89 df             	mov    %rbx,%rdi
   1835c:	e8 1f d3 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   18361:	48 8b 05 30 1d 21 00 	mov    0x211d30(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   18368:	48 89 c2             	mov    %rax,%rdx
   1836b:	48 8b 05 c6 1d 21 00 	mov    0x211dc6(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   18372:	48 89 c6             	mov    %rax,%rsi
   18375:	48 89 df             	mov    %rbx,%rdi
   18378:	e8 93 e3 ff ff       	callq  16710 <__cxa_throw@plt>
				else
					return tmp;
   1837d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
			}
		}
   18380:	48 83 c4 20          	add    $0x20,%rsp
   18384:	5b                   	pop    %rbx
   18385:	41 5c                	pop    %r12
   18387:	5d                   	pop    %rbp
   18388:	c3                   	retq   
   18389:	49 89 c4             	mov    %rax,%r12
		}
		int FileStreamManager::EndSend(File s)
		{
			taskInfo *i = (s._f == __current_task.s ? &__current_task
					: &this->info[s._f]);
			if (i->w_errno != 0) throw Exception(i->w_errno);
   1838c:	48 89 df             	mov    %rbx,%rdi
   1838f:	e8 1c e2 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   18394:	4c 89 e0             	mov    %r12,%rax
   18397:	48 89 c7             	mov    %rax,%rdi
   1839a:	e8 11 e7 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1839f:	49 89 c4             	mov    %rax,%r12
			//if(!i.initialized)throw Exception("");
			if (i->bits & 4) return i->w_length;
			else
			{
				int tmp = write(s._f, i->w_buf.Data, i->w_buf.Length);
				if (tmp < 0) throw Exception(errno);
   183a2:	48 89 df             	mov    %rbx,%rdi
   183a5:	e8 06 e2 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   183aa:	4c 89 e0             	mov    %r12,%rax
   183ad:	48 89 c7             	mov    %rax,%rdi
   183b0:	e8 fb e6 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   183b5:	90                   	nop

00000000000183b6 <_ZN6xaxaxa2IO17FileStreamManager6CancelENS_4FileE>:
				else
					return tmp;
			}
		}
		void FileStreamManager::Cancel(File s)
		{
   183b6:	55                   	push   %rbp
   183b7:	48 89 e5             	mov    %rsp,%rbp
   183ba:	48 83 ec 10          	sub    $0x10,%rsp
   183be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   183c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			dbgprint("removing fd " << s._f);
			this->info.erase(s._f);
   183c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   183ca:	48 8d 50 08          	lea    0x8(%rax),%rdx
   183ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183d2:	48 83 c0 10          	add    $0x10,%rax
   183d6:	48 89 d6             	mov    %rdx,%rsi
   183d9:	48 89 c7             	mov    %rax,%rdi
   183dc:	e8 ef d1 ff ff       	callq  155d0 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_@plt>
			epoll_ctl(this->epollfd, EPOLL_CTL_DEL, s._f, NULL);
   183e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   183e5:	8b 50 08             	mov    0x8(%rax),%edx
   183e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183ec:	8b 40 0c             	mov    0xc(%rax),%eax
   183ef:	b9 00 00 00 00       	mov    $0x0,%ecx
   183f4:	be 02 00 00 00       	mov    $0x2,%esi
   183f9:	89 c7                	mov    %eax,%edi
   183fb:	e8 00 dc ff ff       	callq  16000 <epoll_ctl@plt>
			if (s._f == __current_task.s)
   18400:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18404:	8b 50 08             	mov    0x8(%rax),%edx
   18407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1840b:	8b 40 44             	mov    0x44(%rax),%eax
   1840e:	39 c2                	cmp    %eax,%edx
   18410:	75 16                	jne    18428 <_ZN6xaxaxa2IO17FileStreamManager6CancelENS_4FileE+0x72>
			{
				__current_task.events = 0;
   18412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18416:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)
				__current_task.new_events = 0;
   1841d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18421:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%rax)
			}
		}
   18428:	c9                   	leaveq 
   18429:	c3                   	retq   

000000000001842a <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE>:
		void FileStreamManager::CancelRead(File s)
		{
   1842a:	55                   	push   %rbp
   1842b:	48 89 e5             	mov    %rsp,%rbp
   1842e:	53                   	push   %rbx
   1842f:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   18436:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   1843d:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
			taskInfo i = (s._f == __current_task.s ? __current_task
					: this->info[s._f]);
   18444:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1844b:	8b 50 08             	mov    0x8(%rax),%edx
   1844e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18455:	8b 40 44             	mov    0x44(%rax),%eax
   18458:	39 c2                	cmp    %eax,%edx
   1845a:	75 0d                	jne    18469 <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x3f>
   1845c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18463:	48 83 c0 40          	add    $0x40,%rax
   18467:	eb 21                	jmp    1848a <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x60>
   18469:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18470:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18474:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1847b:	48 83 c0 10          	add    $0x10,%rax
   1847f:	48 89 d6             	mov    %rdx,%rsi
   18482:	48 89 c7             	mov    %rax,%rdi
   18485:	e8 d6 e5 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1848a:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   18491:	48 89 c6             	mov    %rax,%rsi
   18494:	48 89 d7             	mov    %rdx,%rdi
   18497:	e8 b4 d1 ff ff       	callq  15650 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_@plt>
			if (i.bits)
   1849c:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   184a2:	85 c0                	test   %eax,%eax
   184a4:	0f 84 c5 00 00 00    	je     1856f <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x145>
			{
				if (s._f == __current_task.s)
   184aa:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   184b1:	8b 50 08             	mov    0x8(%rax),%edx
   184b4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   184bb:	8b 40 44             	mov    0x44(%rax),%eax
   184be:	39 c2                	cmp    %eax,%edx
   184c0:	75 14                	jne    184d6 <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0xac>
				{
					i.new_events &= ~EPOLLIN;
   184c2:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   184c8:	83 e0 fe             	and    $0xfffffffe,%eax
   184cb:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   184d1:	e9 99 00 00 00       	jmpq   1856f <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x145>
				}
				else
				{
					i.events &= ~EPOLLIN;
   184d6:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   184dc:	83 e0 fe             	and    $0xfffffffe,%eax
   184df:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
					if (i.events)
   184e5:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   184eb:	85 c0                	test   %eax,%eax
   184ed:	74 48                	je     18537 <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x10d>
					{
						i.new_events = i.events;
   184ef:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   184f5:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
						epoll_event ev;
						ev.data.fd = s._f;
   184fb:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18502:	8b 40 08             	mov    0x8(%rax),%eax
   18505:	89 45 d4             	mov    %eax,-0x2c(%rbp)
						ev.events = i.events;
   18508:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   1850e:	89 45 d0             	mov    %eax,-0x30(%rbp)
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._f, &ev);
   18511:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18518:	8b 50 08             	mov    0x8(%rax),%edx
   1851b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18522:	8b 40 0c             	mov    0xc(%rax),%eax
   18525:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   18529:	be 03 00 00 00       	mov    $0x3,%esi
   1852e:	89 c7                	mov    %eax,%edi
   18530:	e8 cb da ff ff       	callq  16000 <epoll_ctl@plt>
   18535:	eb 38                	jmp    1856f <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x145>
					}
					else
					{
						Cancel(s);
   18537:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1853e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18542:	48 89 d6             	mov    %rdx,%rsi
   18545:	48 89 c7             	mov    %rax,%rdi
   18548:	e8 83 db ff ff       	callq  160d0 <_ZN6xaxaxa4FileC1ERKS0_@plt>
   1854d:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18551:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18558:	48 89 d6             	mov    %rdx,%rsi
   1855b:	48 89 c7             	mov    %rax,%rdi
   1855e:	e8 2d d7 ff ff       	callq  15c90 <_ZN6xaxaxa2IO17FileStreamManager6CancelENS_4FileE@plt>
   18563:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18567:	48 89 c7             	mov    %rax,%rdi
   1856a:	e8 41 cd ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
					}
				}
			}
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
   1856f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18576:	8b 50 08             	mov    0x8(%rax),%edx
   18579:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18580:	8b 40 44             	mov    0x44(%rax),%eax
   18583:	39 c2                	cmp    %eax,%edx
   18585:	75 1f                	jne    185a6 <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x17c>
   18587:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1858e:	48 8d 50 40          	lea    0x40(%rax),%rdx
   18592:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   18599:	48 89 c6             	mov    %rax,%rsi
   1859c:	48 89 d7             	mov    %rdx,%rdi
   1859f:	e8 2c d5 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
   185a4:	eb 33                	jmp    185d9 <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x1af>
   185a6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   185ad:	48 8d 50 08          	lea    0x8(%rax),%rdx
   185b1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   185b8:	48 83 c0 10          	add    $0x10,%rax
   185bc:	48 89 d6             	mov    %rdx,%rsi
   185bf:	48 89 c7             	mov    %rax,%rdi
   185c2:	e8 99 e4 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   185c7:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   185ce:	48 89 d6             	mov    %rdx,%rsi
   185d1:	48 89 c7             	mov    %rax,%rdi
   185d4:	e8 f7 d4 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
			}
		}
		void FileStreamManager::CancelRead(File s)
		{
			taskInfo i = (s._f == __current_task.s ? __current_task
					: this->info[s._f]);
   185d9:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   185e0:	48 89 c7             	mov    %rax,%rdi
   185e3:	e8 38 d8 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
						Cancel(s);
					}
				}
			}
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
		}
   185e8:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   185ef:	5b                   	pop    %rbx
   185f0:	5d                   	pop    %rbp
   185f1:	c3                   	retq   
   185f2:	48 89 c3             	mov    %rax,%rbx
						ev.events = i.events;
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._f, &ev);
					}
					else
					{
						Cancel(s);
   185f5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   185f9:	48 89 c7             	mov    %rax,%rdi
   185fc:	e8 af cc ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
   18601:	eb 03                	jmp    18606 <_ZN6xaxaxa2IO17FileStreamManager10CancelReadENS_4FileE+0x1dc>
   18603:	48 89 c3             	mov    %rax,%rbx
			}
		}
		void FileStreamManager::CancelRead(File s)
		{
			taskInfo i = (s._f == __current_task.s ? __current_task
					: this->info[s._f]);
   18606:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1860d:	48 89 c7             	mov    %rax,%rdi
   18610:	e8 0b d8 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   18615:	48 89 d8             	mov    %rbx,%rax
   18618:	48 89 c7             	mov    %rax,%rdi
   1861b:	e8 90 e4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000018620 <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE>:
				}
			}
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
		}
		void FileStreamManager::CancelWrite(File s)
		{
   18620:	55                   	push   %rbp
   18621:	48 89 e5             	mov    %rsp,%rbp
   18624:	53                   	push   %rbx
   18625:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   1862c:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   18633:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
			taskInfo i = (s._f == __current_task.s ? __current_task
					: this->info[s._f]);
   1863a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18641:	8b 50 08             	mov    0x8(%rax),%edx
   18644:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1864b:	8b 40 44             	mov    0x44(%rax),%eax
   1864e:	39 c2                	cmp    %eax,%edx
   18650:	75 0d                	jne    1865f <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x3f>
   18652:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18659:	48 83 c0 40          	add    $0x40,%rax
   1865d:	eb 21                	jmp    18680 <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x60>
   1865f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18666:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1866a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18671:	48 83 c0 10          	add    $0x10,%rax
   18675:	48 89 d6             	mov    %rdx,%rsi
   18678:	48 89 c7             	mov    %rax,%rdi
   1867b:	e8 e0 e3 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   18680:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   18687:	48 89 c6             	mov    %rax,%rsi
   1868a:	48 89 d7             	mov    %rdx,%rdi
   1868d:	e8 be cf ff ff       	callq  15650 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_@plt>
			if (i.bits)
   18692:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
   18698:	85 c0                	test   %eax,%eax
   1869a:	0f 84 c5 00 00 00    	je     18765 <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x145>
			{
				if (s._f == __current_task.s)
   186a0:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   186a7:	8b 50 08             	mov    0x8(%rax),%edx
   186aa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   186b1:	8b 40 44             	mov    0x44(%rax),%eax
   186b4:	39 c2                	cmp    %eax,%edx
   186b6:	75 14                	jne    186cc <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0xac>
				{
					i.new_events &= ~EPOLLOUT;
   186b8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   186be:	83 e0 fb             	and    $0xfffffffb,%eax
   186c1:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
   186c7:	e9 99 00 00 00       	jmpq   18765 <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x145>
				}
				else
				{
					i.events &= ~EPOLLOUT;
   186cc:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   186d2:	83 e0 fb             	and    $0xfffffffb,%eax
   186d5:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
					if (i.events)
   186db:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   186e1:	85 c0                	test   %eax,%eax
   186e3:	74 48                	je     1872d <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x10d>
					{
						i.new_events = i.events;
   186e5:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   186eb:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
						epoll_event ev;
						ev.data.fd = s._f;
   186f1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   186f8:	8b 40 08             	mov    0x8(%rax),%eax
   186fb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
						ev.events = i.events;
   186fe:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   18704:	89 45 d0             	mov    %eax,-0x30(%rbp)
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._f, &ev);
   18707:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1870e:	8b 50 08             	mov    0x8(%rax),%edx
   18711:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18718:	8b 40 0c             	mov    0xc(%rax),%eax
   1871b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   1871f:	be 03 00 00 00       	mov    $0x3,%esi
   18724:	89 c7                	mov    %eax,%edi
   18726:	e8 d5 d8 ff ff       	callq  16000 <epoll_ctl@plt>
   1872b:	eb 38                	jmp    18765 <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x145>
					}
					else
					{
						Cancel(s);
   1872d:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   18734:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18738:	48 89 d6             	mov    %rdx,%rsi
   1873b:	48 89 c7             	mov    %rax,%rdi
   1873e:	e8 8d d9 ff ff       	callq  160d0 <_ZN6xaxaxa4FileC1ERKS0_@plt>
   18743:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18747:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1874e:	48 89 d6             	mov    %rdx,%rsi
   18751:	48 89 c7             	mov    %rax,%rdi
   18754:	e8 37 d5 ff ff       	callq  15c90 <_ZN6xaxaxa2IO17FileStreamManager6CancelENS_4FileE@plt>
   18759:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1875d:	48 89 c7             	mov    %rax,%rdi
   18760:	e8 4b cb ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
					}
				}
			}
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
   18765:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1876c:	8b 50 08             	mov    0x8(%rax),%edx
   1876f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18776:	8b 40 44             	mov    0x44(%rax),%eax
   18779:	39 c2                	cmp    %eax,%edx
   1877b:	75 1f                	jne    1879c <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x17c>
   1877d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   18784:	48 8d 50 40          	lea    0x40(%rax),%rdx
   18788:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1878f:	48 89 c6             	mov    %rax,%rsi
   18792:	48 89 d7             	mov    %rdx,%rdi
   18795:	e8 36 d3 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
   1879a:	eb 33                	jmp    187cf <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x1af>
   1879c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   187a3:	48 8d 50 08          	lea    0x8(%rax),%rdx
   187a7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   187ae:	48 83 c0 10          	add    $0x10,%rax
   187b2:	48 89 d6             	mov    %rdx,%rsi
   187b5:	48 89 c7             	mov    %rax,%rdi
   187b8:	e8 a3 e2 ff ff       	callq  16a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   187bd:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   187c4:	48 89 d6             	mov    %rdx,%rsi
   187c7:	48 89 c7             	mov    %rax,%rdi
   187ca:	e8 01 d3 ff ff       	callq  15ad0 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_@plt>
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
		}
		void FileStreamManager::CancelWrite(File s)
		{
			taskInfo i = (s._f == __current_task.s ? __current_task
					: this->info[s._f]);
   187cf:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   187d6:	48 89 c7             	mov    %rax,%rdi
   187d9:	e8 42 d6 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
						Cancel(s);
					}
				}
			}
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
		}
   187de:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   187e5:	5b                   	pop    %rbx
   187e6:	5d                   	pop    %rbp
   187e7:	c3                   	retq   
   187e8:	48 89 c3             	mov    %rax,%rbx
						ev.events = i.events;
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._f, &ev);
					}
					else
					{
						Cancel(s);
   187eb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   187ef:	48 89 c7             	mov    %rax,%rdi
   187f2:	e8 b9 ca ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
   187f7:	eb 03                	jmp    187fc <_ZN6xaxaxa2IO17FileStreamManager11CancelWriteENS_4FileE+0x1dc>
   187f9:	48 89 c3             	mov    %rax,%rbx
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
		}
		void FileStreamManager::CancelWrite(File s)
		{
			taskInfo i = (s._f == __current_task.s ? __current_task
					: this->info[s._f]);
   187fc:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   18803:	48 89 c7             	mov    %rax,%rdi
   18806:	e8 15 d6 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   1880b:	48 89 d8             	mov    %rbx,%rax
   1880e:	48 89 c7             	mov    %rax,%rdi
   18811:	e8 9a e2 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000018816 <_Z41__static_initialization_and_destruction_0ii>:
			}
			s._f == __current_task.s ? __current_task = i : this->info[s._f] = i;
		}

	}
}
   18816:	55                   	push   %rbp
   18817:	48 89 e5             	mov    %rsp,%rbp
   1881a:	48 83 ec 10          	sub    $0x10,%rsp
   1881e:	89 7d fc             	mov    %edi,-0x4(%rbp)
   18821:	89 75 f8             	mov    %esi,-0x8(%rbp)
   18824:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   18828:	0f 85 a2 00 00 00    	jne    188d0 <_Z41__static_initialization_and_destruction_0ii+0xba>
   1882e:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   18835:	0f 85 95 00 00 00    	jne    188d0 <_Z41__static_initialization_and_destruction_0ii+0xba>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  //@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
   1883b:	48 8d 3d 9e 26 21 00 	lea    0x21269e(%rip),%rdi        # 22aee0 <_ZStL8__ioinit>
   18842:	e8 09 cf ff ff       	callq  15750 <_ZNSt8ios_base4InitC1Ev@plt>
   18847:	48 8b 05 72 18 21 00 	mov    0x211872(%rip),%rax        # 22a0c0 <_DYNAMIC+0x228>
   1884e:	48 8b 15 9b 18 21 00 	mov    0x21189b(%rip),%rdx        # 22a0f0 <_DYNAMIC+0x258>
   18855:	48 8d 35 84 26 21 00 	lea    0x212684(%rip),%rsi        # 22aee0 <_ZStL8__ioinit>
   1885c:	48 89 c7             	mov    %rax,%rdi
   1885f:	e8 0c d1 ff ff       	callq  15970 <__cxa_atexit@plt>
static boost::arg<8> _8;
static boost::arg<9> _9;

#else

boost::arg<1> _1;
   18864:	48 8d 3d 76 26 21 00 	lea    0x212676(%rip),%rdi        # 22aee1 <_ZN12_GLOBAL__N_12_1E>
   1886b:	e8 b0 da ff ff       	callq  16320 <_ZN5boost3argILi1EEC1Ev@plt>
boost::arg<2> _2;
   18870:	48 8d 3d 6b 26 21 00 	lea    0x21266b(%rip),%rdi        # 22aee2 <_ZN12_GLOBAL__N_12_2E>
   18877:	e8 24 d4 ff ff       	callq  15ca0 <_ZN5boost3argILi2EEC1Ev@plt>
boost::arg<3> _3;
   1887c:	48 8d 3d 60 26 21 00 	lea    0x212660(%rip),%rdi        # 22aee3 <_ZN12_GLOBAL__N_12_3E>
   18883:	e8 58 d6 ff ff       	callq  15ee0 <_ZN5boost3argILi3EEC1Ev@plt>
boost::arg<4> _4;
   18888:	48 8d 3d 55 26 21 00 	lea    0x212655(%rip),%rdi        # 22aee4 <_ZN12_GLOBAL__N_12_4E>
   1888f:	e8 1c d1 ff ff       	callq  159b0 <_ZN5boost3argILi4EEC1Ev@plt>
boost::arg<5> _5;
   18894:	48 8d 3d 4a 26 21 00 	lea    0x21264a(%rip),%rdi        # 22aee5 <_ZN12_GLOBAL__N_12_5E>
   1889b:	e8 20 d9 ff ff       	callq  161c0 <_ZN5boost3argILi5EEC1Ev@plt>
boost::arg<6> _6;
   188a0:	48 8d 3d 3f 26 21 00 	lea    0x21263f(%rip),%rdi        # 22aee6 <_ZN12_GLOBAL__N_12_6E>
   188a7:	e8 24 ca ff ff       	callq  152d0 <_ZN5boost3argILi6EEC1Ev@plt>
boost::arg<7> _7;
   188ac:	48 8d 3d 34 26 21 00 	lea    0x212634(%rip),%rdi        # 22aee7 <_ZN12_GLOBAL__N_12_7E>
   188b3:	e8 e8 cd ff ff       	callq  156a0 <_ZN5boost3argILi7EEC1Ev@plt>
boost::arg<8> _8;
   188b8:	48 8d 3d 29 26 21 00 	lea    0x212629(%rip),%rdi        # 22aee8 <_ZN12_GLOBAL__N_12_8E>
   188bf:	e8 6c cb ff ff       	callq  15430 <_ZN5boost3argILi8EEC1Ev@plt>
boost::arg<9> _9;
   188c4:	48 8d 3d 1e 26 21 00 	lea    0x21261e(%rip),%rdi        # 22aee9 <_ZN12_GLOBAL__N_12_9E>
   188cb:	e8 10 cb ff ff       	callq  153e0 <_ZN5boost3argILi9EEC1Ev@plt>
   188d0:	c9                   	leaveq 
   188d1:	c3                   	retq   

00000000000188d2 <_GLOBAL__sub_I_asyncfile.cpp>:
   188d2:	55                   	push   %rbp
   188d3:	48 89 e5             	mov    %rsp,%rbp
   188d6:	be ff ff 00 00       	mov    $0xffff,%esi
   188db:	bf 01 00 00 00       	mov    $0x1,%edi
   188e0:	e8 31 ff ff ff       	callq  18816 <_Z41__static_initialization_and_destruction_0ii>
   188e5:	5d                   	pop    %rbp
   188e6:	c3                   	retq   

00000000000188e7 <_ZnwmPv>:
void* operator new[](std::size_t, const std::nothrow_t&) throw();
void operator delete(void*, const std::nothrow_t&) throw();
void operator delete[](void*, const std::nothrow_t&) throw();

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) throw() { return __p; }
   188e7:	55                   	push   %rbp
   188e8:	48 89 e5             	mov    %rsp,%rbp
   188eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   188f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   188f7:	5d                   	pop    %rbp
   188f8:	c3                   	retq   

00000000000188f9 <_ZdlPvS_>:
inline void* operator new[](std::size_t, void* __p) throw() { return __p; }

// Default placement versions of operator delete.
inline void  operator delete  (void*, void*) throw() { }
   188f9:	55                   	push   %rbp
   188fa:	48 89 e5             	mov    %rsp,%rbp
   188fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18901:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18905:	5d                   	pop    %rbp
   18906:	c3                   	retq   
   18907:	90                   	nop

0000000000018908 <_ZNKSt9type_infoeqERKS_>:
    bool before(const type_info& __arg) const
    { return (__name[0] == '*' && __arg.__name[0] == '*')
	? __name < __arg.__name
	: __builtin_strcmp (__name, __arg.__name) < 0; }

    bool operator==(const type_info& __arg) const
   18908:	55                   	push   %rbp
   18909:	48 89 e5             	mov    %rsp,%rbp
   1890c:	48 83 ec 10          	sub    $0x10,%rsp
   18910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18914:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      return ((__name == __arg.__name)
	      || (__name[0] != '*' &&
		  __builtin_strcmp (__name, __arg.__name) == 0));
   18918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1891c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18920:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18924:	48 8b 40 08          	mov    0x8(%rax),%rax
   18928:	48 39 c2             	cmp    %rax,%rdx
   1892b:	74 2e                	je     1895b <_ZNKSt9type_infoeqERKS_+0x53>
	: __builtin_strcmp (__name, __arg.__name) < 0; }

    bool operator==(const type_info& __arg) const
    {
      return ((__name == __arg.__name)
	      || (__name[0] != '*' &&
   1892d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18931:	48 8b 40 08          	mov    0x8(%rax),%rax
		  __builtin_strcmp (__name, __arg.__name) == 0));
   18935:	0f b6 00             	movzbl (%rax),%eax
   18938:	3c 2a                	cmp    $0x2a,%al
   1893a:	74 26                	je     18962 <_ZNKSt9type_infoeqERKS_+0x5a>
   1893c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18940:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18948:	48 8b 40 08          	mov    0x8(%rax),%rax
   1894c:	48 89 d6             	mov    %rdx,%rsi
   1894f:	48 89 c7             	mov    %rax,%rdi
   18952:	e8 69 db ff ff       	callq  164c0 <strcmp@plt>
   18957:	85 c0                	test   %eax,%eax
   18959:	75 07                	jne    18962 <_ZNKSt9type_infoeqERKS_+0x5a>
   1895b:	b8 01 00 00 00       	mov    $0x1,%eax
   18960:	eb 05                	jmp    18967 <_ZNKSt9type_infoeqERKS_+0x5f>
   18962:	b8 00 00 00 00       	mov    $0x0,%eax
    }
   18967:	c9                   	leaveq 
   18968:	c3                   	retq   

0000000000018969 <_ZN5boost6detail23atomic_exchange_and_addEPii>:

namespace detail
{

inline int atomic_exchange_and_add( int * pw, int dv )
{
   18969:	55                   	push   %rbp
   1896a:	48 89 e5             	mov    %rsp,%rbp
   1896d:	53                   	push   %rbx
   1896e:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
   18972:	89 75 dc             	mov    %esi,-0x24(%rbp)
        "lock\n\t"
        "xadd %1, %0":
        "=m"( *pw ), "=r"( r ): // outputs (%0, %1)
        "m"( *pw ), "1"( dv ): // inputs (%2, %3 == %1)
        "memory", "cc" // clobbers
    );
   18975:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18979:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1897d:	8b 4d dc             	mov    -0x24(%rbp),%ecx
   18980:	89 cb                	mov    %ecx,%ebx
   18982:	f0 0f c1 18          	lock xadd %ebx,(%rax)
   18986:	89 5d f4             	mov    %ebx,-0xc(%rbp)

    return r;
   18989:	8b 45 f4             	mov    -0xc(%rbp),%eax
}
   1898c:	5b                   	pop    %rbx
   1898d:	5d                   	pop    %rbp
   1898e:	c3                   	retq   

000000000001898f <_ZN5boost6detail16atomic_incrementEPi>:

inline void atomic_increment( int * pw )
{
   1898f:	55                   	push   %rbp
   18990:	48 89 e5             	mov    %rsp,%rbp
   18993:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        "lock\n\t"
        "incl %0":
        "=m"( *pw ): // output (%0)
        "m"( *pw ): // input (%1)
        "cc" // clobbers
    );
   18997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1899b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1899f:	f0 ff 00             	lock incl (%rax)
}
   189a2:	5d                   	pop    %rbp
   189a3:	c3                   	retq   

00000000000189a4 <_ZN5boost6detail15sp_counted_baseC1Ev>:
    int use_count_;        // #shared
    int weak_count_;       // #weak + (#shared != 0)

public:

    sp_counted_base(): use_count_( 1 ), weak_count_( 1 )
   189a4:	55                   	push   %rbp
   189a5:	48 89 e5             	mov    %rsp,%rbp
   189a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189b0:	48 8b 15 d9 16 21 00 	mov    0x2116d9(%rip),%rdx        # 22a090 <_DYNAMIC+0x1f8>
   189b7:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   189bb:	48 89 10             	mov    %rdx,(%rax)
   189be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189c2:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
   189c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189cd:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%rax)
    {
    }
   189d4:	5d                   	pop    %rbp
   189d5:	c3                   	retq   

00000000000189d6 <_ZN5boost6detail15sp_counted_baseD1Ev>:

    virtual ~sp_counted_base() // nothrow
   189d6:	55                   	push   %rbp
   189d7:	48 89 e5             	mov    %rsp,%rbp
   189da:	48 83 ec 10          	sub    $0x10,%rsp
   189de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
   189e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189e6:	48 8b 15 a3 16 21 00 	mov    0x2116a3(%rip),%rdx        # 22a090 <_DYNAMIC+0x1f8>
   189ed:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   189f1:	48 89 10             	mov    %rdx,(%rax)
    }
   189f4:	b8 00 00 00 00       	mov    $0x0,%eax
   189f9:	83 e0 01             	and    $0x1,%eax
   189fc:	84 c0                	test   %al,%al
   189fe:	74 0c                	je     18a0c <_ZN5boost6detail15sp_counted_baseD1Ev+0x36>
   18a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a04:	48 89 c7             	mov    %rax,%rdi
   18a07:	e8 e4 cb ff ff       	callq  155f0 <_ZdlPv@plt>
   18a0c:	c9                   	leaveq 
   18a0d:	c3                   	retq   

0000000000018a0e <_ZN5boost6detail15sp_counted_baseD0Ev>:

    sp_counted_base(): use_count_( 1 ), weak_count_( 1 )
    {
    }

    virtual ~sp_counted_base() // nothrow
   18a0e:	55                   	push   %rbp
   18a0f:	48 89 e5             	mov    %rsp,%rbp
   18a12:	48 83 ec 10          	sub    $0x10,%rsp
   18a16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   18a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a1e:	48 89 c7             	mov    %rax,%rdi
   18a21:	e8 9a de ff ff       	callq  168c0 <_ZN5boost6detail15sp_counted_baseD1Ev@plt>
   18a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a2a:	48 89 c7             	mov    %rax,%rdi
   18a2d:	e8 be cb ff ff       	callq  155f0 <_ZdlPv@plt>
   18a32:	c9                   	leaveq 
   18a33:	c3                   	retq   

0000000000018a34 <_ZN5boost6detail15sp_counted_base7destroyEv>:

    virtual void dispose() = 0; // nothrow

    // destroy() is called when weak_count_ drops to zero.

    virtual void destroy() // nothrow
   18a34:	55                   	push   %rbp
   18a35:	48 89 e5             	mov    %rsp,%rbp
   18a38:	48 83 ec 10          	sub    $0x10,%rsp
   18a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
        delete this;
   18a40:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18a45:	74 17                	je     18a5e <_ZN5boost6detail15sp_counted_base7destroyEv+0x2a>
   18a47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a4b:	48 8b 00             	mov    (%rax),%rax
   18a4e:	48 83 c0 08          	add    $0x8,%rax
   18a52:	48 8b 10             	mov    (%rax),%rdx
   18a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a59:	48 89 c7             	mov    %rax,%rdi
   18a5c:	ff d2                	callq  *%rdx
    }
   18a5e:	c9                   	leaveq 
   18a5f:	c3                   	retq   

0000000000018a60 <_ZN5boost6detail15sp_counted_base12add_ref_copyEv>:

    virtual void * get_deleter( sp_typeinfo const & ti ) = 0;

    void add_ref_copy()
   18a60:	55                   	push   %rbp
   18a61:	48 89 e5             	mov    %rsp,%rbp
   18a64:	48 83 ec 10          	sub    $0x10,%rsp
   18a68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
        atomic_increment( &use_count_ );
   18a6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a70:	48 83 c0 08          	add    $0x8,%rax
   18a74:	48 89 c7             	mov    %rax,%rdi
   18a77:	e8 44 e1 ff ff       	callq  16bc0 <_ZN5boost6detail16atomic_incrementEPi@plt>
    }
   18a7c:	c9                   	leaveq 
   18a7d:	c3                   	retq   

0000000000018a7e <_ZN5boost6detail15sp_counted_base7releaseEv>:
    bool add_ref_lock() // true on success
    {
        return atomic_conditional_increment( &use_count_ ) != 0;
    }

    void release() // nothrow
   18a7e:	55                   	push   %rbp
   18a7f:	48 89 e5             	mov    %rsp,%rbp
   18a82:	48 83 ec 10          	sub    $0x10,%rsp
   18a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
        if( atomic_exchange_and_add( &use_count_, -1 ) == 1 )
   18a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a8e:	48 83 c0 08          	add    $0x8,%rax
   18a92:	be ff ff ff ff       	mov    $0xffffffff,%esi
   18a97:	48 89 c7             	mov    %rax,%rdi
   18a9a:	e8 71 de ff ff       	callq  16910 <_ZN5boost6detail23atomic_exchange_and_addEPii@plt>
   18a9f:	83 f8 01             	cmp    $0x1,%eax
   18aa2:	0f 94 c0             	sete   %al
   18aa5:	84 c0                	test   %al,%al
   18aa7:	74 23                	je     18acc <_ZN5boost6detail15sp_counted_base7releaseEv+0x4e>
        {
            dispose();
   18aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18aad:	48 8b 00             	mov    (%rax),%rax
   18ab0:	48 83 c0 10          	add    $0x10,%rax
   18ab4:	48 8b 10             	mov    (%rax),%rdx
   18ab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18abb:	48 89 c7             	mov    %rax,%rdi
   18abe:	ff d2                	callq  *%rdx
            weak_release();
   18ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ac4:	48 89 c7             	mov    %rax,%rdi
   18ac7:	e8 04 c9 ff ff       	callq  153d0 <_ZN5boost6detail15sp_counted_base12weak_releaseEv@plt>
        }
    }
   18acc:	c9                   	leaveq 
   18acd:	c3                   	retq   

0000000000018ace <_ZN5boost6detail15sp_counted_base12weak_releaseEv>:
    void weak_add_ref() // nothrow
    {
        atomic_increment( &weak_count_ );
    }

    void weak_release() // nothrow
   18ace:	55                   	push   %rbp
   18acf:	48 89 e5             	mov    %rsp,%rbp
   18ad2:	48 83 ec 10          	sub    $0x10,%rsp
   18ad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
        if( atomic_exchange_and_add( &weak_count_, -1 ) == 1 )
   18ada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ade:	48 83 c0 0c          	add    $0xc,%rax
   18ae2:	be ff ff ff ff       	mov    $0xffffffff,%esi
   18ae7:	48 89 c7             	mov    %rax,%rdi
   18aea:	e8 21 de ff ff       	callq  16910 <_ZN5boost6detail23atomic_exchange_and_addEPii@plt>
   18aef:	83 f8 01             	cmp    $0x1,%eax
   18af2:	0f 94 c0             	sete   %al
   18af5:	84 c0                	test   %al,%al
   18af7:	74 17                	je     18b10 <_ZN5boost6detail15sp_counted_base12weak_releaseEv+0x42>
        {
            destroy();
   18af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18afd:	48 8b 00             	mov    (%rax),%rax
   18b00:	48 83 c0 18          	add    $0x18,%rax
   18b04:	48 8b 10             	mov    (%rax),%rdx
   18b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b0b:	48 89 c7             	mov    %rax,%rdi
   18b0e:	ff d2                	callq  *%rdx
        }
    }
   18b10:	c9                   	leaveq 
   18b11:	c3                   	retq   

0000000000018b12 <_ZN5boost6detail12shared_countD1Ev>:
        r.release();
    }

#endif 

    ~shared_count() // nothrow
   18b12:	55                   	push   %rbp
   18b13:	48 89 e5             	mov    %rsp,%rbp
   18b16:	48 83 ec 10          	sub    $0x10,%rsp
   18b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
        if( pi_ != 0 ) pi_->release();
   18b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b22:	48 8b 00             	mov    (%rax),%rax
   18b25:	48 85 c0             	test   %rax,%rax
   18b28:	74 0f                	je     18b39 <_ZN5boost6detail12shared_countD1Ev+0x27>
   18b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b2e:	48 8b 00             	mov    (%rax),%rax
   18b31:	48 89 c7             	mov    %rax,%rdi
   18b34:	e8 a7 d1 ff ff       	callq  15ce0 <_ZN5boost6detail15sp_counted_base7releaseEv@plt>
#if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        id_ = 0;
#endif
    }
   18b39:	c9                   	leaveq 
   18b3a:	c3                   	retq   
   18b3b:	90                   	nop

0000000000018b3c <_ZN5boost6detail12shared_countC1ERKS1_>:

    shared_count(shared_count const & r): pi_(r.pi_) // nothrow
   18b3c:	55                   	push   %rbp
   18b3d:	48 89 e5             	mov    %rsp,%rbp
   18b40:	48 83 ec 10          	sub    $0x10,%rsp
   18b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18b4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18b50:	48 8b 10             	mov    (%rax),%rdx
   18b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b57:	48 89 10             	mov    %rdx,(%rax)
#if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        , id_(shared_count_id)
#endif
    {
        if( pi_ != 0 ) pi_->add_ref_copy();
   18b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b5e:	48 8b 00             	mov    (%rax),%rax
   18b61:	48 85 c0             	test   %rax,%rax
   18b64:	74 0f                	je     18b75 <_ZN5boost6detail12shared_countC1ERKS1_+0x39>
   18b66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b6a:	48 8b 00             	mov    (%rax),%rax
   18b6d:	48 89 c7             	mov    %rax,%rdi
   18b70:	e8 ab d3 ff ff       	callq  15f20 <_ZN5boost6detail15sp_counted_base12add_ref_copyEv@plt>
    }
   18b75:	c9                   	leaveq 
   18b76:	c3                   	retq   
   18b77:	90                   	nop

0000000000018b78 <_ZN5boost6detail12shared_count4swapERS1_>:
        }

        return *this;
    }

    void swap(shared_count & r) // nothrow
   18b78:	55                   	push   %rbp
   18b79:	48 89 e5             	mov    %rsp,%rbp
   18b7c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18b80:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
        sp_counted_base * tmp = r.pi_;
   18b84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18b88:	48 8b 00             	mov    (%rax),%rax
   18b8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
        r.pi_ = pi_;
   18b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18b93:	48 8b 10             	mov    (%rax),%rdx
   18b96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18b9a:	48 89 10             	mov    %rdx,(%rax)
        pi_ = tmp;
   18b9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18ba1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18ba5:	48 89 10             	mov    %rdx,(%rax)
    }
   18ba8:	5d                   	pop    %rbp
   18ba9:	c3                   	retq   

0000000000018baa <_ZN6xaxaxa6ObjectC1Ev>:
	class Object
	{
	public:

		int RetainCount; //reference counter
		Object()
   18baa:	55                   	push   %rbp
   18bab:	48 89 e5             	mov    %rsp,%rbp
   18bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
   18bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bb6:	48 8b 15 b3 15 21 00 	mov    0x2115b3(%rip),%rdx        # 22a170 <_DYNAMIC+0x2d8>
   18bbd:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   18bc1:	48 89 10             	mov    %rdx,(%rax)
			RetainCount = 1;
   18bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bc8:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
#ifdef __debug_obj123
			__objs_inc();
			cout<<"construct<"<<typeid(*this).name()<<">; "<<__objs_get()<<" objects total"<<endl;
#endif
		}
   18bcf:	5d                   	pop    %rbp
   18bd0:	c3                   	retq   
   18bd1:	90                   	nop

0000000000018bd2 <_ZN6xaxaxa6ObjectD1Ev>:
		virtual ~Object()
   18bd2:	55                   	push   %rbp
   18bd3:	48 89 e5             	mov    %rsp,%rbp
   18bd6:	48 83 ec 10          	sub    $0x10,%rsp
   18bda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
   18bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18be2:	48 8b 15 87 15 21 00 	mov    0x211587(%rip),%rdx        # 22a170 <_DYNAMIC+0x2d8>
   18be9:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   18bed:	48 89 10             	mov    %rdx,(%rax)
#ifdef __debug_obj123
			__objs_dec();
			cout<<"destruct<"<<typeid(*this).name()<<">; "<<__objs_get()<<" objects total"<<endl;
#endif
		}
   18bf0:	b8 00 00 00 00       	mov    $0x0,%eax
   18bf5:	83 e0 01             	and    $0x1,%eax
   18bf8:	84 c0                	test   %al,%al
   18bfa:	74 0c                	je     18c08 <_ZN6xaxaxa6ObjectD1Ev+0x36>
   18bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c00:	48 89 c7             	mov    %rax,%rdi
   18c03:	e8 e8 c9 ff ff       	callq  155f0 <_ZdlPv@plt>
   18c08:	c9                   	leaveq 
   18c09:	c3                   	retq   

0000000000018c0a <_ZN6xaxaxa6ObjectD0Ev>:
#ifdef __debug_obj123
			__objs_inc();
			cout<<"construct<"<<typeid(*this).name()<<">; "<<__objs_get()<<" objects total"<<endl;
#endif
		}
		virtual ~Object()
   18c0a:	55                   	push   %rbp
   18c0b:	48 89 e5             	mov    %rsp,%rbp
   18c0e:	48 83 ec 10          	sub    $0x10,%rsp
   18c12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
#ifdef __debug_obj123
			__objs_dec();
			cout<<"destruct<"<<typeid(*this).name()<<">; "<<__objs_get()<<" objects total"<<endl;
#endif
		}
   18c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c1a:	48 89 c7             	mov    %rax,%rdi
   18c1d:	e8 fe d3 ff ff       	callq  16020 <_ZN6xaxaxa6ObjectD1Ev@plt>
   18c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c26:	48 89 c7             	mov    %rax,%rdi
   18c29:	e8 c2 c9 ff ff       	callq  155f0 <_ZdlPv@plt>
   18c2e:	c9                   	leaveq 
   18c2f:	c3                   	retq   

0000000000018c30 <_ZN6xaxaxa9Exception4initEiSs>:
	class Exception: public Object
	{
	public:
		int Code;
		std::string Message;
		virtual void init(int code, std::string message)
   18c30:	55                   	push   %rbp
   18c31:	48 89 e5             	mov    %rsp,%rbp
   18c34:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
   18c3b:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
   18c42:	89 b5 54 fe ff ff    	mov    %esi,-0x1ac(%rbp)
   18c48:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)
		{
			this->Code = code;
   18c4f:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   18c56:	8b 95 54 fe ff ff    	mov    -0x1ac(%rbp),%edx
   18c5c:	89 50 0c             	mov    %edx,0xc(%rax)
			this->Message = message;
   18c5f:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
   18c66:	48 8d 50 10          	lea    0x10(%rax),%rdx
   18c6a:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
   18c71:	48 89 c6             	mov    %rax,%rsi
   18c74:	48 89 d7             	mov    %rdx,%rdi
   18c77:	e8 74 de ff ff       	callq  16af0 <_ZNSsaSERKSs@plt>
			//#if DEBUG
			//if(message==NULL)
			//	cout << "Exception: code=" << code;
			//else
			cout << "Exception: " << message << "; code=" << code << endl;
   18c7c:	48 8d 35 60 b3 00 00 	lea    0xb360(%rip),%rsi        # 23fe3 <_ZStL6ignore+0x1>
   18c83:	48 8b 05 5e 14 21 00 	mov    0x21145e(%rip),%rax        # 22a0e8 <_DYNAMIC+0x250>
   18c8a:	48 89 c7             	mov    %rax,%rdi
   18c8d:	e8 1e ce ff ff       	callq  15ab0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   18c92:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
   18c99:	48 89 d6             	mov    %rdx,%rsi
   18c9c:	48 89 c7             	mov    %rax,%rdi
   18c9f:	e8 ac d7 ff ff       	callq  16450 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E@plt>
   18ca4:	48 8d 35 44 b3 00 00 	lea    0xb344(%rip),%rsi        # 23fef <_ZStL6ignore+0xd>
   18cab:	48 89 c7             	mov    %rax,%rdi
   18cae:	e8 fd cd ff ff       	callq  15ab0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   18cb3:	8b 95 54 fe ff ff    	mov    -0x1ac(%rbp),%edx
   18cb9:	89 d6                	mov    %edx,%esi
   18cbb:	48 89 c7             	mov    %rax,%rdi
   18cbe:	e8 3d c6 ff ff       	callq  15300 <_ZNSolsEi@plt>
   18cc3:	48 8b 15 86 14 21 00 	mov    0x211486(%rip),%rdx        # 22a150 <_DYNAMIC+0x2b8>
   18cca:	48 89 d6             	mov    %rdx,%rsi
   18ccd:	48 89 c7             	mov    %rax,%rdi
   18cd0:	e8 5b da ff ff       	callq  16730 <_ZNSolsEPFRSoS_E@plt>
			void *array[50];
			size_t size;

			// get void*'s for all entries on the stack
			size = backtrace(array, 50);
   18cd5:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
   18cdc:	be 32 00 00 00       	mov    $0x32,%esi
   18ce1:	48 89 c7             	mov    %rax,%rdi
   18ce4:	e8 87 c6 ff ff       	callq  15370 <backtrace@plt>
   18ce9:	48 98                	cltq   
   18ceb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

			// print out all the frames to stderr
			//fprintf(stderr, "Error: signal %d:\n", sig);
			backtrace_symbols_fd(array, size, 2);
   18cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cf3:	89 c1                	mov    %eax,%ecx
   18cf5:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
   18cfc:	ba 02 00 00 00       	mov    $0x2,%edx
   18d01:	89 ce                	mov    %ecx,%esi
   18d03:	48 89 c7             	mov    %rax,%rdi
   18d06:	e8 15 da ff ff       	callq  16720 <backtrace_symbols_fd@plt>
			//#endif
		}
   18d0b:	c9                   	leaveq 
   18d0c:	c3                   	retq   
   18d0d:	90                   	nop

0000000000018d0e <_ZN6xaxaxa9ExceptionC1Ei>:
		inline Exception(int code)
   18d0e:	55                   	push   %rbp
   18d0f:	48 89 e5             	mov    %rsp,%rbp
   18d12:	53                   	push   %rbx
   18d13:	48 83 ec 28          	sub    $0x28,%rsp
   18d17:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18d1b:	89 75 d4             	mov    %esi,-0x2c(%rbp)
		{
   18d1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d22:	48 89 c7             	mov    %rax,%rdi
   18d25:	e8 26 d3 ff ff       	callq  16050 <_ZN6xaxaxa6ObjectC2Ev@plt>
   18d2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d2e:	48 8b 15 ab 13 21 00 	mov    0x2113ab(%rip),%rdx        # 22a0e0 <_DYNAMIC+0x248>
   18d35:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   18d39:	48 89 10             	mov    %rdx,(%rax)
   18d3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d40:	48 83 c0 10          	add    $0x10,%rax
   18d44:	48 89 c7             	mov    %rax,%rdi
   18d47:	e8 04 c5 ff ff       	callq  15250 <_ZNSsC1Ev@plt>
			init(code, strerror(code));
   18d4c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18d50:	48 89 c7             	mov    %rax,%rdi
   18d53:	e8 98 dc ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   18d58:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   18d5b:	89 c7                	mov    %eax,%edi
   18d5d:	e8 8e d2 ff ff       	callq  15ff0 <strerror@plt>
   18d62:	48 89 c1             	mov    %rax,%rcx
   18d65:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   18d69:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18d6d:	48 89 ce             	mov    %rcx,%rsi
   18d70:	48 89 c7             	mov    %rax,%rdi
   18d73:	e8 68 d2 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   18d78:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18d7c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   18d7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d83:	89 ce                	mov    %ecx,%esi
   18d85:	48 89 c7             	mov    %rax,%rdi
   18d88:	e8 d3 d7 ff ff       	callq  16560 <_ZN6xaxaxa9Exception4initEiSs@plt>
   18d8d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18d91:	48 89 c7             	mov    %rax,%rdi
   18d94:	e8 a7 cd ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18d99:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18d9d:	48 89 c7             	mov    %rax,%rdi
   18da0:	e8 9b d7 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
			//delete err;
		}
   18da5:	48 83 c4 28          	add    $0x28,%rsp
   18da9:	5b                   	pop    %rbx
   18daa:	5d                   	pop    %rbp
   18dab:	c3                   	retq   
   18dac:	48 89 c3             	mov    %rax,%rbx
			backtrace_symbols_fd(array, size, 2);
			//#endif
		}
		inline Exception(int code)
		{
			init(code, strerror(code));
   18daf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18db3:	48 89 c7             	mov    %rax,%rdi
   18db6:	e8 85 cd ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18dbb:	eb 03                	jmp    18dc0 <_ZN6xaxaxa9ExceptionC1Ei+0xb2>
   18dbd:	48 89 c3             	mov    %rax,%rbx
   18dc0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18dc4:	48 89 c7             	mov    %rax,%rdi
   18dc7:	e8 74 d7 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
			//fprintf(stderr, "Error: signal %d:\n", sig);
			backtrace_symbols_fd(array, size, 2);
			//#endif
		}
		inline Exception(int code)
		{
   18dcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18dd0:	48 83 c0 10          	add    $0x10,%rax
   18dd4:	48 89 c7             	mov    %rax,%rdi
   18dd7:	e8 64 cd ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18ddc:	eb 03                	jmp    18de1 <_ZN6xaxaxa9ExceptionC1Ei+0xd3>
   18dde:	48 89 c3             	mov    %rax,%rbx
   18de1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18de5:	48 89 c7             	mov    %rax,%rdi
   18de8:	e8 f3 d3 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   18ded:	48 89 d8             	mov    %rbx,%rax
   18df0:	48 89 c7             	mov    %rax,%rdi
   18df3:	e8 b8 dc ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000018df8 <_ZN6xaxaxa9ExceptionC1ESs>:
			init(code, strerror(code));
			//delete err;
		}
		inline Exception(std::string message)
   18df8:	55                   	push   %rbp
   18df9:	48 89 e5             	mov    %rsp,%rbp
   18dfc:	53                   	push   %rbx
   18dfd:	48 83 ec 28          	sub    $0x28,%rsp
   18e01:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18e05:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
		{
   18e09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e0d:	48 89 c7             	mov    %rax,%rdi
   18e10:	e8 3b d2 ff ff       	callq  16050 <_ZN6xaxaxa6ObjectC2Ev@plt>
   18e15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e19:	48 8b 15 c0 12 21 00 	mov    0x2112c0(%rip),%rdx        # 22a0e0 <_DYNAMIC+0x248>
   18e20:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   18e24:	48 89 10             	mov    %rdx,(%rax)
   18e27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e2b:	48 83 c0 10          	add    $0x10,%rax
   18e2f:	48 89 c7             	mov    %rax,%rdi
   18e32:	e8 19 c4 ff ff       	callq  15250 <_ZNSsC1Ev@plt>
			init(-1, message);
   18e37:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18e3b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18e3f:	48 89 d6             	mov    %rdx,%rsi
   18e42:	48 89 c7             	mov    %rax,%rdi
   18e45:	e8 f6 ca ff ff       	callq  15940 <_ZNSsC1ERKSs@plt>
   18e4a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18e4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e52:	be ff ff ff ff       	mov    $0xffffffff,%esi
   18e57:	48 89 c7             	mov    %rax,%rdi
   18e5a:	e8 01 d7 ff ff       	callq  16560 <_ZN6xaxaxa9Exception4initEiSs@plt>
   18e5f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18e63:	48 89 c7             	mov    %rax,%rdi
   18e66:	e8 d5 cc ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
		}
   18e6b:	eb 40                	jmp    18ead <_ZN6xaxaxa9ExceptionC1ESs+0xb5>
   18e6d:	48 89 c3             	mov    %rax,%rbx
			init(code, strerror(code));
			//delete err;
		}
		inline Exception(std::string message)
		{
			init(-1, message);
   18e70:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18e74:	48 89 c7             	mov    %rax,%rdi
   18e77:	e8 c4 cc ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18e7c:	eb 03                	jmp    18e81 <_ZN6xaxaxa9ExceptionC1ESs+0x89>
   18e7e:	48 89 c3             	mov    %rax,%rbx
		{
			init(code, strerror(code));
			//delete err;
		}
		inline Exception(std::string message)
		{
   18e81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e85:	48 83 c0 10          	add    $0x10,%rax
   18e89:	48 89 c7             	mov    %rax,%rdi
   18e8c:	e8 af cc ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18e91:	eb 03                	jmp    18e96 <_ZN6xaxaxa9ExceptionC1ESs+0x9e>
   18e93:	48 89 c3             	mov    %rax,%rbx
   18e96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e9a:	48 89 c7             	mov    %rax,%rdi
   18e9d:	e8 3e d3 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   18ea2:	48 89 d8             	mov    %rbx,%rax
   18ea5:	48 89 c7             	mov    %rax,%rdi
   18ea8:	e8 03 dc ff ff       	callq  16ab0 <_Unwind_Resume@plt>
			init(-1, message);
		}
   18ead:	48 83 c4 28          	add    $0x28,%rsp
   18eb1:	5b                   	pop    %rbx
   18eb2:	5d                   	pop    %rbp
   18eb3:	c3                   	retq   

0000000000018eb4 <_ZN6xaxaxa9ExceptionC1EiSs>:
		inline Exception(int code, std::string message)
   18eb4:	55                   	push   %rbp
   18eb5:	48 89 e5             	mov    %rsp,%rbp
   18eb8:	53                   	push   %rbx
   18eb9:	48 83 ec 38          	sub    $0x38,%rsp
   18ebd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18ec1:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   18ec4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
		{
   18ec8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18ecc:	48 89 c7             	mov    %rax,%rdi
   18ecf:	e8 7c d1 ff ff       	callq  16050 <_ZN6xaxaxa6ObjectC2Ev@plt>
   18ed4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18ed8:	48 8b 15 01 12 21 00 	mov    0x211201(%rip),%rdx        # 22a0e0 <_DYNAMIC+0x248>
   18edf:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   18ee3:	48 89 10             	mov    %rdx,(%rax)
   18ee6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18eea:	48 83 c0 10          	add    $0x10,%rax
   18eee:	48 89 c7             	mov    %rax,%rdi
   18ef1:	e8 5a c3 ff ff       	callq  15250 <_ZNSsC1Ev@plt>
			init(code, message);
   18ef6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18efa:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18efe:	48 89 d6             	mov    %rdx,%rsi
   18f01:	48 89 c7             	mov    %rax,%rdi
   18f04:	e8 37 ca ff ff       	callq  15940 <_ZNSsC1ERKSs@plt>
   18f09:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18f0d:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   18f10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18f14:	89 ce                	mov    %ecx,%esi
   18f16:	48 89 c7             	mov    %rax,%rdi
   18f19:	e8 42 d6 ff ff       	callq  16560 <_ZN6xaxaxa9Exception4initEiSs@plt>
   18f1e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18f22:	48 89 c7             	mov    %rax,%rdi
   18f25:	e8 16 cc ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
		}
   18f2a:	eb 40                	jmp    18f6c <_ZN6xaxaxa9ExceptionC1EiSs+0xb8>
   18f2c:	48 89 c3             	mov    %rax,%rbx
		{
			init(-1, message);
		}
		inline Exception(int code, std::string message)
		{
			init(code, message);
   18f2f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18f33:	48 89 c7             	mov    %rax,%rdi
   18f36:	e8 05 cc ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18f3b:	eb 03                	jmp    18f40 <_ZN6xaxaxa9ExceptionC1EiSs+0x8c>
   18f3d:	48 89 c3             	mov    %rax,%rbx
		inline Exception(std::string message)
		{
			init(-1, message);
		}
		inline Exception(int code, std::string message)
		{
   18f40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18f44:	48 83 c0 10          	add    $0x10,%rax
   18f48:	48 89 c7             	mov    %rax,%rdi
   18f4b:	e8 f0 cb ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18f50:	eb 03                	jmp    18f55 <_ZN6xaxaxa9ExceptionC1EiSs+0xa1>
   18f52:	48 89 c3             	mov    %rax,%rbx
   18f55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18f59:	48 89 c7             	mov    %rax,%rdi
   18f5c:	e8 7f d2 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   18f61:	48 89 d8             	mov    %rbx,%rax
   18f64:	48 89 c7             	mov    %rax,%rdi
   18f67:	e8 44 db ff ff       	callq  16ab0 <_Unwind_Resume@plt>
			init(code, message);
		}
   18f6c:	48 83 c4 38          	add    $0x38,%rsp
   18f70:	5b                   	pop    %rbx
   18f71:	5d                   	pop    %rbp
   18f72:	c3                   	retq   
   18f73:	90                   	nop

0000000000018f74 <_ZN6xaxaxa9ExceptionD1Ev>:
				delete this;
				//cout << o;
			}
		}
	};
	class Exception: public Object
   18f74:	55                   	push   %rbp
   18f75:	48 89 e5             	mov    %rsp,%rbp
   18f78:	53                   	push   %rbx
   18f79:	48 83 ec 18          	sub    $0x18,%rsp
   18f7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18f81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f85:	48 8b 15 54 11 21 00 	mov    0x211154(%rip),%rdx        # 22a0e0 <_DYNAMIC+0x248>
   18f8c:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   18f90:	48 89 10             	mov    %rdx,(%rax)
   18f93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f97:	48 83 c0 10          	add    $0x10,%rax
   18f9b:	48 89 c7             	mov    %rax,%rdi
   18f9e:	e8 9d cb ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   18fa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18fa7:	48 89 c7             	mov    %rax,%rdi
   18faa:	e8 31 d2 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   18faf:	b8 00 00 00 00       	mov    $0x0,%eax
   18fb4:	83 e0 01             	and    $0x1,%eax
   18fb7:	84 c0                	test   %al,%al
   18fb9:	74 28                	je     18fe3 <_ZN6xaxaxa9ExceptionD1Ev+0x6f>
   18fbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18fbf:	48 89 c7             	mov    %rax,%rdi
   18fc2:	e8 29 c6 ff ff       	callq  155f0 <_ZdlPv@plt>
   18fc7:	eb 1a                	jmp    18fe3 <_ZN6xaxaxa9ExceptionD1Ev+0x6f>
   18fc9:	48 89 c3             	mov    %rax,%rbx
   18fcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18fd0:	48 89 c7             	mov    %rax,%rdi
   18fd3:	e8 08 d2 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   18fd8:	48 89 d8             	mov    %rbx,%rax
   18fdb:	48 89 c7             	mov    %rax,%rdi
   18fde:	e8 cd da ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   18fe3:	48 83 c4 18          	add    $0x18,%rsp
   18fe7:	5b                   	pop    %rbx
   18fe8:	5d                   	pop    %rbp
   18fe9:	c3                   	retq   

0000000000018fea <_ZN6xaxaxa9ExceptionD0Ev>:
   18fea:	55                   	push   %rbp
   18feb:	48 89 e5             	mov    %rsp,%rbp
   18fee:	48 83 ec 10          	sub    $0x10,%rsp
   18ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ffa:	48 89 c7             	mov    %rax,%rdi
   18ffd:	e8 0e c4 ff ff       	callq  15410 <_ZN6xaxaxa9ExceptionD1Ev@plt>
   19002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19006:	48 89 c7             	mov    %rax,%rdi
   19009:	e8 e2 c5 ff ff       	callq  155f0 <_ZdlPv@plt>
   1900e:	c9                   	leaveq 
   1900f:	c3                   	retq   

0000000000019010 <_ZN5boost12shared_arrayIhED1Ev>:
//  shared_array extends shared_ptr to arrays.
//  The array pointed to is deleted when the last shared_array pointing to it
//  is destroyed or reset.
//

template<class T> class shared_array
   19010:	55                   	push   %rbp
   19011:	48 89 e5             	mov    %rsp,%rbp
   19014:	48 83 ec 10          	sub    $0x10,%rsp
   19018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1901c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19020:	48 83 c0 08          	add    $0x8,%rax
   19024:	48 89 c7             	mov    %rax,%rdi
   19027:	e8 b4 c2 ff ff       	callq  152e0 <_ZN5boost6detail12shared_countD1Ev@plt>
   1902c:	c9                   	leaveq 
   1902d:	c3                   	retq   

000000000001902e <_ZN6xaxaxa6BufferC1Ev>:
	public:
		boost::shared_array<Byte> pbuf;
		Byte* Data;
		bool IsRaw;
		Int Length;
		inline Buffer()
   1902e:	55                   	push   %rbp
   1902f:	48 89 e5             	mov    %rsp,%rbp
   19032:	48 83 ec 10          	sub    $0x10,%rsp
   19036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
   1903a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1903e:	be 00 00 00 00       	mov    $0x0,%esi
   19043:	48 89 c7             	mov    %rax,%rdi
   19046:	e8 c5 c6 ff ff       	callq  15710 <_ZN5boost12shared_arrayIhEC1EPh@plt>
			Data = NULL;
   1904b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1904f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   19056:	00 
			IsRaw = true;
   19057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1905b:	c6 40 18 01          	movb   $0x1,0x18(%rax)
			Length = 0;
   1905f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19063:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
		}
   1906a:	c9                   	leaveq 
   1906b:	c3                   	retq   

000000000001906c <_ZN6xaxaxa6BufferC1EPhi>:
		{
			this->Data = (Byte*) buf;
			this->Length = strlen(buf);
			this->IsRaw = true;
		}
		Buffer(Byte* buf, int length)
   1906c:	55                   	push   %rbp
   1906d:	48 89 e5             	mov    %rsp,%rbp
   19070:	48 83 ec 20          	sub    $0x20,%rsp
   19074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19078:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1907c:	89 55 ec             	mov    %edx,-0x14(%rbp)
		{
   1907f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19083:	be 00 00 00 00       	mov    $0x0,%esi
   19088:	48 89 c7             	mov    %rax,%rdi
   1908b:	e8 80 c6 ff ff       	callq  15710 <_ZN5boost12shared_arrayIhEC1EPh@plt>
			this->Data = (Byte*) buf;
   19090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19094:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19098:	48 89 50 10          	mov    %rdx,0x10(%rax)
			this->Length = length;
   1909c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190a0:	8b 55 ec             	mov    -0x14(%rbp),%edx
   190a3:	89 50 1c             	mov    %edx,0x1c(%rax)
			this->IsRaw = true;
   190a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190aa:	c6 40 18 01          	movb   $0x1,0x18(%rax)
		}
   190ae:	c9                   	leaveq 
   190af:	c3                   	retq   

00000000000190b0 <_ZN6xaxaxa6BufferC1EPhiN5boost12shared_arrayIhEE>:
		Buffer(Byte* buf, int length, boost::shared_array<Byte> orig)
   190b0:	55                   	push   %rbp
   190b1:	48 89 e5             	mov    %rsp,%rbp
   190b4:	53                   	push   %rbx
   190b5:	48 83 ec 28          	sub    $0x28,%rsp
   190b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   190bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   190c1:	89 55 dc             	mov    %edx,-0x24(%rbp)
   190c4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		{
   190c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190cc:	be 00 00 00 00       	mov    $0x0,%esi
   190d1:	48 89 c7             	mov    %rax,%rdi
   190d4:	e8 37 c6 ff ff       	callq  15710 <_ZN5boost12shared_arrayIhEC1EPh@plt>
			this->Data = buf;
   190d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   190e1:	48 89 50 10          	mov    %rdx,0x10(%rax)
			this->Length = length;
   190e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190e9:	8b 55 dc             	mov    -0x24(%rbp),%edx
   190ec:	89 50 1c             	mov    %edx,0x1c(%rax)
			this->IsRaw = false;
   190ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190f3:	c6 40 18 00          	movb   $0x0,0x18(%rax)
			this->pbuf = orig;
   190f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190fb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   190ff:	48 89 d6             	mov    %rdx,%rsi
   19102:	48 89 c7             	mov    %rax,%rdi
   19105:	e8 66 cd ff ff       	callq  15e70 <_ZN5boost12shared_arrayIhEaSERKS1_@plt>
		}
   1910a:	eb 1a                	jmp    19126 <_ZN6xaxaxa6BufferC1EPhiN5boost12shared_arrayIhEE+0x76>
   1910c:	48 89 c3             	mov    %rax,%rbx
			this->Data = (Byte*) buf;
			this->Length = length;
			this->IsRaw = true;
		}
		Buffer(Byte* buf, int length, boost::shared_array<Byte> orig)
		{
   1910f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19113:	48 89 c7             	mov    %rax,%rdi
   19116:	e8 a5 d4 ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
   1911b:	48 89 d8             	mov    %rbx,%rax
   1911e:	48 89 c7             	mov    %rax,%rdi
   19121:	e8 8a d9 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
			this->Data = buf;
			this->Length = length;
			this->IsRaw = false;
			this->pbuf = orig;
		}
   19126:	48 83 c4 28          	add    $0x28,%rsp
   1912a:	5b                   	pop    %rbx
   1912b:	5d                   	pop    %rbp
   1912c:	c3                   	retq   
   1912d:	90                   	nop

000000000001912e <_ZNK6xaxaxa6Buffer9SubBufferEii>:
			}
			this->Data = new Byte[length];
			this->pbuf = boost::shared_array<Byte>(this->Data);
			this->IsRaw = false;
		}
		inline Buffer SubBuffer(int index, int length) const
   1912e:	55                   	push   %rbp
   1912f:	48 89 e5             	mov    %rsp,%rbp
   19132:	41 54                	push   %r12
   19134:	53                   	push   %rbx
   19135:	48 83 ec 40          	sub    $0x40,%rsp
   19139:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1913d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   19141:	89 55 bc             	mov    %edx,-0x44(%rbp)
   19144:	89 4d b8             	mov    %ecx,-0x48(%rbp)
		{
			if (index < 0 || length > this->Length) throw Exception("SubBuffer() out of range");
   19147:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
   1914b:	78 0c                	js     19159 <_ZNK6xaxaxa6Buffer9SubBufferEii+0x2b>
   1914d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19151:	8b 40 1c             	mov    0x1c(%rax),%eax
   19154:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   19157:	7d 73                	jge    191cc <_ZNK6xaxaxa6Buffer9SubBufferEii+0x9e>
   19159:	bf 18 00 00 00       	mov    $0x18,%edi
   1915e:	e8 cd d3 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   19163:	48 89 c3             	mov    %rax,%rbx
   19166:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1916a:	48 89 c7             	mov    %rax,%rdi
   1916d:	e8 7e d8 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   19172:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   19176:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1917a:	48 8d 35 76 ae 00 00 	lea    0xae76(%rip),%rsi        # 23ff7 <_ZStL6ignore+0x15>
   19181:	48 89 c7             	mov    %rax,%rdi
   19184:	e8 57 ce ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   19189:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1918d:	48 89 c6             	mov    %rax,%rsi
   19190:	48 89 df             	mov    %rbx,%rdi
   19193:	e8 c8 ce ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   19198:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1919c:	48 89 c7             	mov    %rax,%rdi
   1919f:	e8 9c c9 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   191a4:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   191a8:	48 89 c7             	mov    %rax,%rdi
   191ab:	e8 90 d3 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   191b0:	48 8b 05 e1 0e 21 00 	mov    0x210ee1(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   191b7:	48 89 c2             	mov    %rax,%rdx
   191ba:	48 8b 05 77 0f 21 00 	mov    0x210f77(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   191c1:	48 89 c6             	mov    %rax,%rsi
   191c4:	48 89 df             	mov    %rbx,%rdi
   191c7:	e8 44 d5 ff ff       	callq  16710 <__cxa_throw@plt>
			if (IsRaw) return Buffer(Data + index, length);
   191cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   191d0:	0f b6 40 18          	movzbl 0x18(%rax),%eax
   191d4:	84 c0                	test   %al,%al
   191d6:	74 28                	je     19200 <_ZNK6xaxaxa6Buffer9SubBufferEii+0xd2>
   191d8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   191dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   191e0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   191e3:	48 98                	cltq   
   191e5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   191e9:	8b 55 b8             	mov    -0x48(%rbp),%edx
   191ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   191f0:	48 89 ce             	mov    %rcx,%rsi
   191f3:	48 89 c7             	mov    %rax,%rdi
   191f6:	e8 95 c8 ff ff       	callq  15a90 <_ZN6xaxaxa6BufferC1EPhi@plt>
   191fb:	e9 92 00 00 00       	jmpq   19292 <_ZNK6xaxaxa6Buffer9SubBufferEii+0x164>
			else return Buffer(Data + index, length, pbuf);
   19200:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19204:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19208:	48 89 d6             	mov    %rdx,%rsi
   1920b:	48 89 c7             	mov    %rax,%rdi
   1920e:	e8 bd cb ff ff       	callq  15dd0 <_ZN5boost12shared_arrayIhEC1ERKS1_@plt>
   19213:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19217:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1921b:	8b 45 bc             	mov    -0x44(%rbp),%eax
   1921e:	48 98                	cltq   
   19220:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
   19224:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   19228:	8b 55 b8             	mov    -0x48(%rbp),%edx
   1922b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1922f:	48 89 c7             	mov    %rax,%rdi
   19232:	e8 89 cb ff ff       	callq  15dc0 <_ZN6xaxaxa6BufferC1EPhiN5boost12shared_arrayIhEE@plt>
   19237:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1923b:	48 89 c7             	mov    %rax,%rdi
   1923e:	e8 7d d3 ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
   19243:	eb 4d                	jmp    19292 <_ZNK6xaxaxa6Buffer9SubBufferEii+0x164>
   19245:	49 89 c4             	mov    %rax,%r12
			this->pbuf = boost::shared_array<Byte>(this->Data);
			this->IsRaw = false;
		}
		inline Buffer SubBuffer(int index, int length) const
		{
			if (index < 0 || length > this->Length) throw Exception("SubBuffer() out of range");
   19248:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1924c:	48 89 c7             	mov    %rax,%rdi
   1924f:	e8 ec c8 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   19254:	eb 03                	jmp    19259 <_ZNK6xaxaxa6Buffer9SubBufferEii+0x12b>
   19256:	49 89 c4             	mov    %rax,%r12
   19259:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1925d:	48 89 c7             	mov    %rax,%rdi
   19260:	e8 db d2 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   19265:	48 89 df             	mov    %rbx,%rdi
   19268:	e8 43 d3 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1926d:	4c 89 e0             	mov    %r12,%rax
   19270:	48 89 c7             	mov    %rax,%rdi
   19273:	e8 38 d8 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   19278:	48 89 c3             	mov    %rax,%rbx
			if (IsRaw) return Buffer(Data + index, length);
			else return Buffer(Data + index, length, pbuf);
   1927b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1927f:	48 89 c7             	mov    %rax,%rdi
   19282:	e8 39 d3 ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
   19287:	48 89 d8             	mov    %rbx,%rax
   1928a:	48 89 c7             	mov    %rax,%rdi
   1928d:	e8 1e d8 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
		}
   19292:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19296:	48 83 c4 40          	add    $0x40,%rsp
   1929a:	5b                   	pop    %rbx
   1929b:	41 5c                	pop    %r12
   1929d:	5d                   	pop    %rbp
   1929e:	c3                   	retq   
   1929f:	90                   	nop

00000000000192a0 <_ZN6xaxaxa6BufferD1Ev>:
	typedef __int32_t Int;
	typedef __uint32_t UInt;
	typedef __int64_t Long;
	typedef __uint64_t ULong;

	class Buffer
   192a0:	55                   	push   %rbp
   192a1:	48 89 e5             	mov    %rsp,%rbp
   192a4:	48 83 ec 10          	sub    $0x10,%rsp
   192a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192b0:	48 89 c7             	mov    %rax,%rdi
   192b3:	e8 08 d3 ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
   192b8:	c9                   	leaveq 
   192b9:	c3                   	retq   

00000000000192ba <_ZN6xaxaxa6BufferC1ERKS0_>:
   192ba:	55                   	push   %rbp
   192bb:	48 89 e5             	mov    %rsp,%rbp
   192be:	48 83 ec 10          	sub    $0x10,%rsp
   192c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   192ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   192ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192d2:	48 89 d6             	mov    %rdx,%rsi
   192d5:	48 89 c7             	mov    %rax,%rdi
   192d8:	e8 f3 ca ff ff       	callq  15dd0 <_ZN5boost12shared_arrayIhEC1ERKS1_@plt>
   192dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192e1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   192e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192e9:	48 89 50 10          	mov    %rdx,0x10(%rax)
   192ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192f1:	0f b6 50 18          	movzbl 0x18(%rax),%edx
   192f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192f9:	88 50 18             	mov    %dl,0x18(%rax)
   192fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19300:	8b 50 1c             	mov    0x1c(%rax),%edx
   19303:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19307:	89 50 1c             	mov    %edx,0x1c(%rax)
   1930a:	c9                   	leaveq 
   1930b:	c3                   	retq   

000000000001930c <_ZN6xaxaxa4FileD1Ev>:
	{
		FILEDES _f;
		inline File()
		{
		}
		virtual inline ~File()
   1930c:	55                   	push   %rbp
   1930d:	48 89 e5             	mov    %rsp,%rbp
   19310:	48 83 ec 10          	sub    $0x10,%rsp
   19314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{}
   19318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1931c:	48 8b 15 05 0e 21 00 	mov    0x210e05(%rip),%rdx        # 22a128 <_DYNAMIC+0x290>
   19323:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   19327:	48 89 10             	mov    %rdx,(%rax)
   1932a:	b8 00 00 00 00       	mov    $0x0,%eax
   1932f:	83 e0 01             	and    $0x1,%eax
   19332:	84 c0                	test   %al,%al
   19334:	74 0c                	je     19342 <_ZN6xaxaxa4FileD1Ev+0x36>
   19336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1933a:	48 89 c7             	mov    %rax,%rdi
   1933d:	e8 ae c2 ff ff       	callq  155f0 <_ZdlPv@plt>
   19342:	c9                   	leaveq 
   19343:	c3                   	retq   

0000000000019344 <_ZN6xaxaxa4FileD0Ev>:
	{
		FILEDES _f;
		inline File()
		{
		}
		virtual inline ~File()
   19344:	55                   	push   %rbp
   19345:	48 89 e5             	mov    %rsp,%rbp
   19348:	48 83 ec 10          	sub    $0x10,%rsp
   1934c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{}
   19350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19354:	48 89 c7             	mov    %rax,%rdi
   19357:	e8 54 bf ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
   1935c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19360:	48 89 c7             	mov    %rax,%rdi
   19363:	e8 88 c2 ff ff       	callq  155f0 <_ZdlPv@plt>
   19368:	c9                   	leaveq 
   19369:	c3                   	retq   

000000000001936a <_ZN6xaxaxa4FileC1Ei>:
			//int set = 1;
			//setsockopt(_s, SOL_SOCKET, SO_NOSIGPIPE, (void *)&set, sizeof(int));
			dbgprint("file " << _f << " created");
			//this->autoClose=autoClose;
		}
		inline File(FILEDES f)
   1936a:	55                   	push   %rbp
   1936b:	48 89 e5             	mov    %rsp,%rbp
   1936e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19372:	89 75 f4             	mov    %esi,-0xc(%rbp)
		{
   19375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19379:	48 8b 15 a8 0d 21 00 	mov    0x210da8(%rip),%rdx        # 22a128 <_DYNAMIC+0x290>
   19380:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   19384:	48 89 10             	mov    %rdx,(%rax)
			_f = f;
   19387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1938b:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1938e:	89 50 08             	mov    %edx,0x8(%rax)
			//int set = 1;
			//setsockopt(_s, SOL_SOCKET, SO_NOSIGPIPE, (void *)&set, sizeof(int));
			//this->autoClose=autoClose;
		}
   19391:	5d                   	pop    %rbp
   19392:	c3                   	retq   
   19393:	90                   	nop

0000000000019394 <_ZN6xaxaxa4File5CloseEv>:
		inline virtual void Close()
   19394:	55                   	push   %rbp
   19395:	48 89 e5             	mov    %rsp,%rbp
   19398:	48 83 ec 10          	sub    $0x10,%rsp
   1939c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
			//throw Exception();
			dbgprint("file " << _f << " closed");
			if (_f != -1) close(_f);
   193a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193a4:	8b 40 08             	mov    0x8(%rax),%eax
   193a7:	83 f8 ff             	cmp    $0xffffffff,%eax
   193aa:	74 0e                	je     193ba <_ZN6xaxaxa4File5CloseEv+0x26>
   193ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193b0:	8b 40 08             	mov    0x8(%rax),%eax
   193b3:	89 c7                	mov    %eax,%edi
   193b5:	e8 46 c0 ff ff       	callq  15400 <close@plt>
			_f = -1;
   193ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193be:	c7 40 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rax)
		}
   193c5:	c9                   	leaveq 
   193c6:	c3                   	retq   
   193c7:	90                   	nop

00000000000193c8 <_ZN6xaxaxa4File5WriteENS_6BufferE>:
		inline virtual Int Write(Buffer buf)
   193c8:	55                   	push   %rbp
   193c9:	48 89 e5             	mov    %rsp,%rbp
   193cc:	41 54                	push   %r12
   193ce:	53                   	push   %rbx
   193cf:	48 83 ec 20          	sub    $0x20,%rsp
   193d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   193d7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
		{
			Int tmp = write(_f, buf.Data, buf.Length);
   193db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   193df:	8b 40 1c             	mov    0x1c(%rax),%eax
   193e2:	48 63 d0             	movslq %eax,%rdx
   193e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   193e9:	48 8b 48 10          	mov    0x10(%rax),%rcx
   193ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   193f1:	8b 40 08             	mov    0x8(%rax),%eax
   193f4:	48 89 ce             	mov    %rcx,%rsi
   193f7:	89 c7                	mov    %eax,%edi
   193f9:	e8 72 d6 ff ff       	callq  16a70 <write@plt>
   193fe:	89 45 ec             	mov    %eax,-0x14(%rbp)
			if (tmp < 0)
   19401:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   19405:	79 3a                	jns    19441 <_ZN6xaxaxa4File5WriteENS_6BufferE+0x79>
				throw Exception(errno);
   19407:	bf 18 00 00 00       	mov    $0x18,%edi
   1940c:	e8 1f d1 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   19411:	48 89 c3             	mov    %rax,%rbx
   19414:	e8 c7 cf ff ff       	callq  163e0 <__errno_location@plt>
   19419:	8b 00                	mov    (%rax),%eax
   1941b:	89 c6                	mov    %eax,%esi
   1941d:	48 89 df             	mov    %rbx,%rdi
   19420:	e8 5b c2 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   19425:	48 8b 05 6c 0c 21 00 	mov    0x210c6c(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1942c:	48 89 c2             	mov    %rax,%rdx
   1942f:	48 8b 05 02 0d 21 00 	mov    0x210d02(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   19436:	48 89 c6             	mov    %rax,%rsi
   19439:	48 89 df             	mov    %rbx,%rdi
   1943c:	e8 cf d2 ff ff       	callq  16710 <__cxa_throw@plt>
			else
				return tmp;
   19441:	8b 45 ec             	mov    -0x14(%rbp),%eax
		}
   19444:	48 83 c4 20          	add    $0x20,%rsp
   19448:	5b                   	pop    %rbx
   19449:	41 5c                	pop    %r12
   1944b:	5d                   	pop    %rbp
   1944c:	c3                   	retq   
   1944d:	49 89 c4             	mov    %rax,%r12
		}
		inline virtual Int Write(Buffer buf)
		{
			Int tmp = write(_f, buf.Data, buf.Length);
			if (tmp < 0)
				throw Exception(errno);
   19450:	48 89 df             	mov    %rbx,%rdi
   19453:	e8 58 d1 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   19458:	4c 89 e0             	mov    %r12,%rax
   1945b:	48 89 c7             	mov    %rax,%rdi
   1945e:	e8 4d d6 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   19463:	90                   	nop

0000000000019464 <_ZN6xaxaxa4File4ReadENS_6BufferE>:
			else
				return tmp;
		}
		inline virtual Int Read(Buffer buf)
   19464:	55                   	push   %rbp
   19465:	48 89 e5             	mov    %rsp,%rbp
   19468:	41 54                	push   %r12
   1946a:	53                   	push   %rbx
   1946b:	48 83 ec 20          	sub    $0x20,%rsp
   1946f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19473:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
		{
			Int tmp = read(_f, buf.Data, buf.Length);
   19477:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1947b:	8b 40 1c             	mov    0x1c(%rax),%eax
   1947e:	48 63 d0             	movslq %eax,%rdx
   19481:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19485:	48 8b 48 10          	mov    0x10(%rax),%rcx
   19489:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1948d:	8b 40 08             	mov    0x8(%rax),%eax
   19490:	48 89 ce             	mov    %rcx,%rsi
   19493:	89 c7                	mov    %eax,%edi
   19495:	e8 16 c3 ff ff       	callq  157b0 <read@plt>
   1949a:	89 45 ec             	mov    %eax,-0x14(%rbp)
			if (tmp < 0)
   1949d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   194a1:	79 3a                	jns    194dd <_ZN6xaxaxa4File4ReadENS_6BufferE+0x79>
				throw Exception(errno);
   194a3:	bf 18 00 00 00       	mov    $0x18,%edi
   194a8:	e8 83 d0 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   194ad:	48 89 c3             	mov    %rax,%rbx
   194b0:	e8 2b cf ff ff       	callq  163e0 <__errno_location@plt>
   194b5:	8b 00                	mov    (%rax),%eax
   194b7:	89 c6                	mov    %eax,%esi
   194b9:	48 89 df             	mov    %rbx,%rdi
   194bc:	e8 bf c1 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   194c1:	48 8b 05 d0 0b 21 00 	mov    0x210bd0(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   194c8:	48 89 c2             	mov    %rax,%rdx
   194cb:	48 8b 05 66 0c 21 00 	mov    0x210c66(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   194d2:	48 89 c6             	mov    %rax,%rsi
   194d5:	48 89 df             	mov    %rbx,%rdi
   194d8:	e8 33 d2 ff ff       	callq  16710 <__cxa_throw@plt>
			else
				return tmp;
   194dd:	8b 45 ec             	mov    -0x14(%rbp),%eax
		}
   194e0:	48 83 c4 20          	add    $0x20,%rsp
   194e4:	5b                   	pop    %rbx
   194e5:	41 5c                	pop    %r12
   194e7:	5d                   	pop    %rbp
   194e8:	c3                   	retq   
   194e9:	49 89 c4             	mov    %rax,%r12
		}
		inline virtual Int Read(Buffer buf)
		{
			Int tmp = read(_f, buf.Data, buf.Length);
			if (tmp < 0)
				throw Exception(errno);
   194ec:	48 89 df             	mov    %rbx,%rdi
   194ef:	e8 bc d0 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   194f4:	4c 89 e0             	mov    %r12,%rax
   194f7:	48 89 c7             	mov    %rax,%rdi
   194fa:	e8 b1 d5 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   194ff:	90                   	nop

0000000000019500 <_ZN6xaxaxa4File5FlushEv>:
			else
				return tmp;
		}
		virtual void Flush()
   19500:	55                   	push   %rbp
   19501:	48 89 e5             	mov    %rsp,%rbp
   19504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{}
   19508:	5d                   	pop    %rbp
   19509:	c3                   	retq   

000000000001950a <_ZN6xaxaxa2IO17FileStreamManager8CallbackC1Ev>:
				if (FileStreamManager::__def_fsmanager == NULL )
				FileStreamManager::__def_fsmanager = new FileStreamManager();
				return FileStreamManager::__def_fsmanager;
			}
			//typedef boost::function<void (void*, FileStreamManager*, File)> Callback;
			FUNCTION_DECLARE(Callback,void,FileStreamManager*,File);
   1950a:	55                   	push   %rbp
   1950b:	48 89 e5             	mov    %rsp,%rbp
   1950e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19516:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1951d:	5d                   	pop    %rbp
   1951e:	c3                   	retq   
   1951f:	90                   	nop

0000000000019520 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1Ev>:
				__uint32_t events;
				__uint32_t new_events;
				Buffer r_buf, w_buf;
				int r_length, w_length;
				int r_errno, w_errno;
				inline taskInfo()
   19520:	55                   	push   %rbp
   19521:	48 89 e5             	mov    %rsp,%rbp
   19524:	53                   	push   %rbx
   19525:	48 83 ec 18          	sub    $0x18,%rsp
   19529:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
				{
   1952d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19531:	48 83 c0 08          	add    $0x8,%rax
   19535:	48 89 c7             	mov    %rax,%rdi
   19538:	e8 93 cd ff ff       	callq  162d0 <_ZN6xaxaxa2IO17FileStreamManager8CallbackC1Ev@plt>
   1953d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19541:	48 83 c0 18          	add    $0x18,%rax
   19545:	48 89 c7             	mov    %rax,%rdi
   19548:	e8 83 cd ff ff       	callq  162d0 <_ZN6xaxaxa2IO17FileStreamManager8CallbackC1Ev@plt>
   1954d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19551:	48 83 c0 30          	add    $0x30,%rax
   19555:	48 89 c7             	mov    %rax,%rdi
   19558:	e8 c3 cb ff ff       	callq  16120 <_ZN6xaxaxa6BufferC1Ev@plt>
   1955d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19561:	48 83 c0 50          	add    $0x50,%rax
   19565:	48 89 c7             	mov    %rax,%rdi
   19568:	e8 b3 cb ff ff       	callq  16120 <_ZN6xaxaxa6BufferC1Ev@plt>
					bits = 0;
   1956d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19571:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
				}
   19577:	48 83 c4 18          	add    $0x18,%rsp
   1957b:	5b                   	pop    %rbx
   1957c:	5d                   	pop    %rbp
   1957d:	c3                   	retq   
   1957e:	48 89 c3             	mov    %rax,%rbx
				__uint32_t new_events;
				Buffer r_buf, w_buf;
				int r_length, w_length;
				int r_errno, w_errno;
				inline taskInfo()
				{
   19581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19585:	48 83 c0 30          	add    $0x30,%rax
   19589:	48 89 c7             	mov    %rax,%rdi
   1958c:	e8 9f bf ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   19591:	48 89 d8             	mov    %rbx,%rax
   19594:	48 89 c7             	mov    %rax,%rdi
   19597:	e8 14 d5 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001959c <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev>:
   *  multimap; the distinction is made entirely in how the tree functions are
   *  called (*_unique versus *_equal, same as the standard).
  */
  template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
            typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
    class map
   1959c:	55                   	push   %rbp
   1959d:	48 89 e5             	mov    %rsp,%rbp
   195a0:	48 83 ec 10          	sub    $0x10,%rsp
   195a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   195a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195ac:	48 89 c7             	mov    %rax,%rdi
   195af:	e8 0c d4 ff ff       	callq  169c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EED1Ev@plt>
   195b4:	c9                   	leaveq 
   195b5:	c3                   	retq   

00000000000195b6 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev>:
			/*enum taskType
			 {
			 read,write,accept
			 };*/

			struct taskInfo
   195b6:	55                   	push   %rbp
   195b7:	48 89 e5             	mov    %rsp,%rbp
   195ba:	53                   	push   %rbx
   195bb:	48 83 ec 18          	sub    $0x18,%rsp
   195bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   195c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   195c7:	48 83 c0 50          	add    $0x50,%rax
   195cb:	48 89 c7             	mov    %rax,%rdi
   195ce:	e8 5d bf ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   195d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   195d7:	48 83 c0 30          	add    $0x30,%rax
   195db:	48 89 c7             	mov    %rax,%rdi
   195de:	e8 4d bf ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   195e3:	48 83 c4 18          	add    $0x18,%rsp
   195e7:	5b                   	pop    %rbx
   195e8:	5d                   	pop    %rbp
   195e9:	c3                   	retq   
   195ea:	48 89 c3             	mov    %rax,%rbx
   195ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   195f1:	48 83 c0 30          	add    $0x30,%rax
   195f5:	48 89 c7             	mov    %rax,%rdi
   195f8:	e8 33 bf ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   195fd:	48 89 d8             	mov    %rbx,%rax
   19600:	48 89 c7             	mov    %rax,%rdi
   19603:	e8 a8 d4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000019608 <_ZN6xaxaxa6BufferaSERKS0_>:
	typedef __int32_t Int;
	typedef __uint32_t UInt;
	typedef __int64_t Long;
	typedef __uint64_t ULong;

	class Buffer
   19608:	55                   	push   %rbp
   19609:	48 89 e5             	mov    %rsp,%rbp
   1960c:	48 83 ec 10          	sub    $0x10,%rsp
   19610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19614:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19618:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1961c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19620:	48 89 d6             	mov    %rdx,%rsi
   19623:	48 89 c7             	mov    %rax,%rdi
   19626:	e8 45 c8 ff ff       	callq  15e70 <_ZN5boost12shared_arrayIhEaSERKS1_@plt>
   1962b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1962f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19637:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1963b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1963f:	0f b6 50 18          	movzbl 0x18(%rax),%edx
   19643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19647:	88 50 18             	mov    %dl,0x18(%rax)
   1964a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1964e:	8b 50 1c             	mov    0x1c(%rax),%edx
   19651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19655:	89 50 1c             	mov    %edx,0x1c(%rax)
   19658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1965c:	c9                   	leaveq 
   1965d:	c3                   	retq   

000000000001965e <_ZN6xaxaxa2IO17FileStreamManager8taskInfoaSERKS2_>:
   1965e:	55                   	push   %rbp
   1965f:	48 89 e5             	mov    %rsp,%rbp
   19662:	48 83 ec 10          	sub    $0x10,%rsp
   19666:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1966a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1966e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19672:	8b 10                	mov    (%rax),%edx
   19674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19678:	89 10                	mov    %edx,(%rax)
   1967a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1967e:	8b 50 04             	mov    0x4(%rax),%edx
   19681:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19685:	89 50 04             	mov    %edx,0x4(%rax)
   19688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1968c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19690:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   19694:	48 89 48 08          	mov    %rcx,0x8(%rax)
   19698:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1969c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   196a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   196a8:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   196ac:	48 89 48 18          	mov    %rcx,0x18(%rax)
   196b0:	48 8b 52 20          	mov    0x20(%rdx),%rdx
   196b4:	48 89 50 20          	mov    %rdx,0x20(%rax)
   196b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196bc:	8b 50 28             	mov    0x28(%rax),%edx
   196bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196c3:	89 50 28             	mov    %edx,0x28(%rax)
   196c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196ca:	8b 50 2c             	mov    0x2c(%rax),%edx
   196cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196d1:	89 50 2c             	mov    %edx,0x2c(%rax)
   196d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196d8:	48 8d 50 30          	lea    0x30(%rax),%rdx
   196dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196e0:	48 83 c0 30          	add    $0x30,%rax
   196e4:	48 89 d6             	mov    %rdx,%rsi
   196e7:	48 89 c7             	mov    %rax,%rdi
   196ea:	e8 d1 c0 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
   196ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196f3:	48 8d 50 50          	lea    0x50(%rax),%rdx
   196f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196fb:	48 83 c0 50          	add    $0x50,%rax
   196ff:	48 89 d6             	mov    %rdx,%rsi
   19702:	48 89 c7             	mov    %rax,%rdi
   19705:	e8 b6 c0 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
   1970a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1970e:	8b 50 70             	mov    0x70(%rax),%edx
   19711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19715:	89 50 70             	mov    %edx,0x70(%rax)
   19718:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1971c:	8b 50 74             	mov    0x74(%rax),%edx
   1971f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19723:	89 50 74             	mov    %edx,0x74(%rax)
   19726:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1972a:	8b 50 78             	mov    0x78(%rax),%edx
   1972d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19731:	89 50 78             	mov    %edx,0x78(%rax)
   19734:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19738:	8b 50 7c             	mov    0x7c(%rax),%edx
   1973b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1973f:	89 50 7c             	mov    %edx,0x7c(%rax)
   19742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19746:	c9                   	leaveq 
   19747:	c3                   	retq   

0000000000019748 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_>:
   19748:	55                   	push   %rbp
   19749:	48 89 e5             	mov    %rsp,%rbp
   1974c:	53                   	push   %rbx
   1974d:	48 83 ec 18          	sub    $0x18,%rsp
   19751:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19755:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19759:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1975d:	8b 10                	mov    (%rax),%edx
   1975f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19763:	89 10                	mov    %edx,(%rax)
   19765:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19769:	8b 50 04             	mov    0x4(%rax),%edx
   1976c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19770:	89 50 04             	mov    %edx,0x4(%rax)
   19773:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19777:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1977b:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1977f:	48 89 48 08          	mov    %rcx,0x8(%rax)
   19783:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   19787:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1978b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1978f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19793:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   19797:	48 89 48 18          	mov    %rcx,0x18(%rax)
   1979b:	48 8b 52 20          	mov    0x20(%rdx),%rdx
   1979f:	48 89 50 20          	mov    %rdx,0x20(%rax)
   197a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197a7:	8b 50 28             	mov    0x28(%rax),%edx
   197aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197ae:	89 50 28             	mov    %edx,0x28(%rax)
   197b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197b5:	8b 50 2c             	mov    0x2c(%rax),%edx
   197b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197bc:	89 50 2c             	mov    %edx,0x2c(%rax)
   197bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197c3:	48 8d 50 30          	lea    0x30(%rax),%rdx
   197c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197cb:	48 83 c0 30          	add    $0x30,%rax
   197cf:	48 89 d6             	mov    %rdx,%rsi
   197d2:	48 89 c7             	mov    %rax,%rdi
   197d5:	e8 06 cd ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   197da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197de:	48 8d 50 50          	lea    0x50(%rax),%rdx
   197e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197e6:	48 83 c0 50          	add    $0x50,%rax
   197ea:	48 89 d6             	mov    %rdx,%rsi
   197ed:	48 89 c7             	mov    %rax,%rdi
   197f0:	e8 eb cc ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   197f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197f9:	8b 50 70             	mov    0x70(%rax),%edx
   197fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19800:	89 50 70             	mov    %edx,0x70(%rax)
   19803:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19807:	8b 50 74             	mov    0x74(%rax),%edx
   1980a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1980e:	89 50 74             	mov    %edx,0x74(%rax)
   19811:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19815:	8b 50 78             	mov    0x78(%rax),%edx
   19818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1981c:	89 50 78             	mov    %edx,0x78(%rax)
   1981f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19823:	8b 50 7c             	mov    0x7c(%rax),%edx
   19826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1982a:	89 50 7c             	mov    %edx,0x7c(%rax)
   1982d:	48 83 c4 18          	add    $0x18,%rsp
   19831:	5b                   	pop    %rbx
   19832:	5d                   	pop    %rbp
   19833:	c3                   	retq   
   19834:	48 89 c3             	mov    %rax,%rbx
   19837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1983b:	48 83 c0 30          	add    $0x30,%rax
   1983f:	48 89 c7             	mov    %rax,%rdi
   19842:	e8 e9 bc ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   19847:	48 89 d8             	mov    %rbx,%rax
   1984a:	48 89 c7             	mov    %rax,%rdi
   1984d:	e8 5e d2 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000019852 <_ZN6xaxaxa4FileC1ERKS0_>:
		virtual void Flush();
		virtual void Close();
	};
	typedef int FILEDES;
	#define CreateFile open
	struct File
   19852:	55                   	push   %rbp
   19853:	48 89 e5             	mov    %rsp,%rbp
   19856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1985a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1985e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19862:	48 8b 15 bf 08 21 00 	mov    0x2108bf(%rip),%rdx        # 22a128 <_DYNAMIC+0x290>
   19869:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1986d:	48 89 10             	mov    %rdx,(%rax)
   19870:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19874:	8b 50 08             	mov    0x8(%rax),%edx
   19877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1987b:	89 50 08             	mov    %edx,0x8(%rax)
   1987e:	5d                   	pop    %rbp
   1987f:	c3                   	retq   

0000000000019880 <_ZN5boost3argILi1EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   19880:	55                   	push   %rbp
   19881:	48 89 e5             	mov    %rsp,%rbp
   19884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   19888:	5d                   	pop    %rbp
   19889:	c3                   	retq   

000000000001988a <_ZN5boost3argILi2EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   1988a:	55                   	push   %rbp
   1988b:	48 89 e5             	mov    %rsp,%rbp
   1988e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   19892:	5d                   	pop    %rbp
   19893:	c3                   	retq   

0000000000019894 <_ZN5boost3argILi3EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   19894:	55                   	push   %rbp
   19895:	48 89 e5             	mov    %rsp,%rbp
   19898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   1989c:	5d                   	pop    %rbp
   1989d:	c3                   	retq   

000000000001989e <_ZN5boost3argILi4EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   1989e:	55                   	push   %rbp
   1989f:	48 89 e5             	mov    %rsp,%rbp
   198a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   198a6:	5d                   	pop    %rbp
   198a7:	c3                   	retq   

00000000000198a8 <_ZN5boost3argILi5EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   198a8:	55                   	push   %rbp
   198a9:	48 89 e5             	mov    %rsp,%rbp
   198ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   198b0:	5d                   	pop    %rbp
   198b1:	c3                   	retq   

00000000000198b2 <_ZN5boost3argILi6EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   198b2:	55                   	push   %rbp
   198b3:	48 89 e5             	mov    %rsp,%rbp
   198b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   198ba:	5d                   	pop    %rbp
   198bb:	c3                   	retq   

00000000000198bc <_ZN5boost3argILi7EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   198bc:	55                   	push   %rbp
   198bd:	48 89 e5             	mov    %rsp,%rbp
   198c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   198c4:	5d                   	pop    %rbp
   198c5:	c3                   	retq   

00000000000198c6 <_ZN5boost3argILi8EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   198c6:	55                   	push   %rbp
   198c7:	48 89 e5             	mov    %rsp,%rbp
   198ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   198ce:	5d                   	pop    %rbp
   198cf:	c3                   	retq   

00000000000198d0 <_ZN5boost3argILi9EEC1Ev>:
namespace boost
{

template< int I > struct arg
{
    arg()
   198d0:	55                   	push   %rbp
   198d1:	48 89 e5             	mov    %rsp,%rbp
   198d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
    }
   198d8:	5d                   	pop    %rbp
   198d9:	c3                   	retq   

00000000000198da <_ZN5boost12shared_arrayIhEC1EPh>:

public:

    typedef T element_type;

    explicit shared_array(T * p = 0): px(p), pn(p, deleter())
   198da:	55                   	push   %rbp
   198db:	48 89 e5             	mov    %rsp,%rbp
   198de:	48 83 ec 20          	sub    $0x20,%rsp
   198e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   198e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   198ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   198f2:	48 89 10             	mov    %rdx,(%rax)
   198f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198f9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   198fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19901:	88 0c 24             	mov    %cl,(%rsp)
   19904:	48 89 c6             	mov    %rax,%rsi
   19907:	48 89 d7             	mov    %rdx,%rdi
   1990a:	e8 d1 d1 ff ff       	callq  16ae0 <_ZN5boost6detail12shared_countC1IPhNS_21checked_array_deleterIhEEEET_T0_@plt>
    {
    }
   1990f:	c9                   	leaveq 
   19910:	c3                   	retq   
   19911:	90                   	nop

0000000000019912 <_ZN5boost12shared_arrayIhEaSERKS1_>:

#endif

    // assignment

    shared_array & operator=( shared_array const & r ) // never throws
   19912:	55                   	push   %rbp
   19913:	48 89 e5             	mov    %rsp,%rbp
   19916:	53                   	push   %rbx
   19917:	48 83 ec 28          	sub    $0x28,%rsp
   1991b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1991f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    {
        this_type( r ).swap( *this );
   19923:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   19927:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1992b:	48 89 d6             	mov    %rdx,%rsi
   1992e:	48 89 c7             	mov    %rax,%rdi
   19931:	e8 9a c4 ff ff       	callq  15dd0 <_ZN5boost12shared_arrayIhEC1ERKS1_@plt>
   19936:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1993a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1993e:	48 89 d6             	mov    %rdx,%rsi
   19941:	48 89 c7             	mov    %rax,%rdi
   19944:	e8 47 cc ff ff       	callq  16590 <_ZN5boost12shared_arrayIhE4swapERS1_@plt>
   19949:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1994d:	48 89 c7             	mov    %rax,%rdi
   19950:	e8 6b cc ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
        return *this;
   19955:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    }
   19959:	48 83 c4 28          	add    $0x28,%rsp
   1995d:	5b                   	pop    %rbx
   1995e:	5d                   	pop    %rbp
   1995f:	c3                   	retq   
   19960:	48 89 c3             	mov    %rax,%rbx

    // assignment

    shared_array & operator=( shared_array const & r ) // never throws
    {
        this_type( r ).swap( *this );
   19963:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19967:	48 89 c7             	mov    %rax,%rdi
   1996a:	e8 51 cc ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
   1996f:	48 89 d8             	mov    %rbx,%rax
   19972:	48 89 c7             	mov    %rax,%rdi
   19975:	e8 36 d1 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001997a <_ZN5boost12shared_arrayIhEC1ERKS1_>:

#if defined( BOOST_HAS_RVALUE_REFS )

// ... except in C++0x, move disables the implicit copy

    shared_array( shared_array const & r ): px( r.px ), pn( r.pn ) // never throws
   1997a:	55                   	push   %rbp
   1997b:	48 89 e5             	mov    %rsp,%rbp
   1997e:	48 83 ec 10          	sub    $0x10,%rsp
   19982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19986:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1998a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1998e:	48 8b 10             	mov    (%rax),%rdx
   19991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19995:	48 89 10             	mov    %rdx,(%rax)
   19998:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1999c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   199a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199a4:	48 83 c0 08          	add    $0x8,%rax
   199a8:	48 89 d6             	mov    %rdx,%rsi
   199ab:	48 89 c7             	mov    %rax,%rdi
   199ae:	e8 3d ba ff ff       	callq  153f0 <_ZN5boost6detail12shared_countC1ERKS1_@plt>
    {
    }
   199b3:	c9                   	leaveq 
   199b4:	c3                   	retq   
   199b5:	90                   	nop

00000000000199b6 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEC1Ev>:
      // (get_allocator() is normally listed in this section, but seems to have
      // been accidentally omitted in the printed standard)
      /**
       *  @brief  Default constructor creates no elements.
       */
      map()
   199b6:	55                   	push   %rbp
   199b7:	48 89 e5             	mov    %rsp,%rbp
   199ba:	48 83 ec 10          	sub    $0x10,%rsp
   199be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_t() { }
   199c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199c6:	48 89 c7             	mov    %rax,%rdi
   199c9:	e8 d2 b8 ff ff       	callq  152a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EEC1Ev@plt>
   199ce:	c9                   	leaveq 
   199cf:	c3                   	retq   

00000000000199d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev>:
      }

    protected:
      template<typename _Key_compare, 
	       bool _Is_pod_comparator = __is_pod(_Key_compare)>
        struct _Rb_tree_impl : public _Node_allocator
   199d0:	55                   	push   %rbp
   199d1:	48 89 e5             	mov    %rsp,%rbp
   199d4:	48 83 ec 10          	sub    $0x10,%rsp
   199d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   199dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199e0:	48 89 c7             	mov    %rax,%rdi
   199e3:	e8 a8 c4 ff ff       	callq  15e90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEED2Ev@plt>
   199e8:	c9                   	leaveq 
   199e9:	c3                   	retq   

00000000000199ea <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EED1Ev>:

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      _Rb_tree(_Rb_tree&& __x);
#endif

      ~_Rb_tree()
   199ea:	55                   	push   %rbp
   199eb:	48 89 e5             	mov    %rsp,%rbp
   199ee:	53                   	push   %rbx
   199ef:	48 83 ec 18          	sub    $0x18,%rsp
   199f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { _M_erase(_M_begin()); }
   199f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   199fb:	48 89 c7             	mov    %rax,%rdi
   199fe:	e8 7d d1 ff ff       	callq  16b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   19a03:	48 89 c2             	mov    %rax,%rdx
   19a06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a0a:	48 89 d6             	mov    %rdx,%rsi
   19a0d:	48 89 c7             	mov    %rax,%rdi
   19a10:	e8 0b be ff ff       	callq  15820 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>
   19a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a19:	48 89 c7             	mov    %rax,%rdi
   19a1c:	e8 bf c1 ff ff       	callq  15be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev@plt>
   19a21:	48 83 c4 18          	add    $0x18,%rsp
   19a25:	5b                   	pop    %rbx
   19a26:	5d                   	pop    %rbp
   19a27:	c3                   	retq   
   19a28:	48 89 c3             	mov    %rax,%rbx
   19a2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a2f:	48 89 c7             	mov    %rax,%rdi
   19a32:	e8 a9 c1 ff ff       	callq  15be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev@plt>
   19a37:	48 89 d8             	mov    %rbx,%rax
   19a3a:	48 89 c7             	mov    %rax,%rdi
   19a3d:	e8 6e d0 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000019a42 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEED1Ev>:
    struct _Index_tuple;
#endif

  /// Struct holding two objects of arbitrary type.
  template<class _T1, class _T2>
    struct pair
   19a42:	55                   	push   %rbp
   19a43:	48 89 e5             	mov    %rsp,%rbp
   19a46:	48 83 ec 10          	sub    $0x10,%rsp
   19a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a52:	48 83 c0 08          	add    $0x8,%rax
   19a56:	48 89 c7             	mov    %rax,%rdi
   19a59:	e8 c2 c3 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   19a5e:	c9                   	leaveq 
   19a5f:	c3                   	retq   

0000000000019a60 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_>:
       *  is created using default values, which is then returned.
       *
       *  Lookup requires logarithmic time.
       */
      mapped_type&
      operator[](const key_type& __k)
   19a60:	55                   	push   %rbp
   19a61:	48 89 e5             	mov    %rsp,%rbp
   19a64:	53                   	push   %rbx
   19a65:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   19a6c:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   19a73:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   19a7a:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
   19a81:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   19a88:	48 89 d6             	mov    %rdx,%rsi
   19a8b:	48 89 c7             	mov    %rax,%rdi
   19a8e:	e8 8d cf ff ff       	callq  16a20 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE11lower_boundERS7_@plt>
   19a93:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   19a9a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   19aa1:	48 89 c7             	mov    %rax,%rdi
   19aa4:	e8 97 d0 ff ff       	callq  16b40 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE3endEv@plt>
   19aa9:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
   19ab0:	48 8d 95 c0 fe ff ff 	lea    -0x140(%rbp),%rdx
   19ab7:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   19abe:	48 89 d6             	mov    %rdx,%rsi
   19ac1:	48 89 c7             	mov    %rax,%rdi
   19ac4:	e8 47 ba ff ff       	callq  15510 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_@plt>
   19ac9:	84 c0                	test   %al,%al
   19acb:	75 41                	jne    19b0e <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0xae>
   19acd:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   19ad4:	48 89 c7             	mov    %rax,%rdi
   19ad7:	e8 64 c1 ff ff       	callq  15c40 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEdeEv@plt>
   19adc:	48 89 c3             	mov    %rax,%rbx
   19adf:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   19ae6:	48 89 c7             	mov    %rax,%rdi
   19ae9:	e8 12 c7 ff ff       	callq  16200 <_ZNKSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE8key_compEv@plt>
   19aee:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
   19af5:	48 8d 85 cf fe ff ff 	lea    -0x131(%rbp),%rax
   19afc:	48 89 da             	mov    %rbx,%rdx
   19aff:	48 89 ce             	mov    %rcx,%rsi
   19b02:	48 89 c7             	mov    %rax,%rdi
   19b05:	e8 76 c2 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   19b0a:	84 c0                	test   %al,%al
   19b0c:	74 07                	je     19b15 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0xb5>
   19b0e:	b8 01 00 00 00       	mov    $0x1,%eax
   19b13:	eb 05                	jmp    19b1a <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0xba>
   19b15:	b8 00 00 00 00       	mov    $0x0,%eax
   19b1a:	84 c0                	test   %al,%al
   19b1c:	0f 84 87 00 00 00    	je     19ba9 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0x149>
          __i = insert(__i, value_type(__k, mapped_type()));
   19b22:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   19b29:	48 89 c7             	mov    %rax,%rdi
   19b2c:	e8 1f be ff ff       	callq  15950 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1Ev@plt>
   19b31:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
   19b38:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
   19b3f:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   19b46:	48 89 ce             	mov    %rcx,%rsi
   19b49:	48 89 c7             	mov    %rax,%rdi
   19b4c:	e8 6f ba ff ff       	callq  155c0 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEC1IS4_vEERS0_OT_@plt>
   19b51:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   19b58:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19b5c:	48 89 d6             	mov    %rdx,%rsi
   19b5f:	48 89 c7             	mov    %rax,%rdi
   19b62:	e8 49 c6 ff ff       	callq  161b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   19b67:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
   19b6e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19b72:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   19b79:	48 89 ce             	mov    %rcx,%rsi
   19b7c:	48 89 c7             	mov    %rax,%rdi
   19b7f:	e8 5c ca ff ff       	callq  165e0 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE6insertIS8_vEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EOT_@plt>
   19b84:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   19b8b:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   19b92:	48 89 c7             	mov    %rax,%rdi
   19b95:	e8 66 c3 ff ff       	callq  15f00 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEED1Ev@plt>
   19b9a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   19ba1:	48 89 c7             	mov    %rax,%rdi
   19ba4:	e8 77 c2 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
	return (*__i).second;
   19ba9:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   19bb0:	48 89 c7             	mov    %rax,%rdi
   19bb3:	e8 88 c0 ff ff       	callq  15c40 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEdeEv@plt>
   19bb8:	48 83 c0 08          	add    $0x8,%rax
      }
   19bbc:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   19bc3:	5b                   	pop    %rbx
   19bc4:	5d                   	pop    %rbp
   19bc5:	c3                   	retq   
   19bc6:	48 89 c3             	mov    %rax,%rbx
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
          __i = insert(__i, value_type(__k, mapped_type()));
   19bc9:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   19bd0:	48 89 c7             	mov    %rax,%rdi
   19bd3:	e8 28 c3 ff ff       	callq  15f00 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEED1Ev@plt>
   19bd8:	eb 03                	jmp    19bdd <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0x17d>
   19bda:	48 89 c3             	mov    %rax,%rbx
   19bdd:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   19be4:	48 89 c7             	mov    %rax,%rdi
   19be7:	e8 34 c2 ff ff       	callq  15e20 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoD1Ev@plt>
   19bec:	48 89 d8             	mov    %rbx,%rax
   19bef:	48 89 c7             	mov    %rax,%rdi
   19bf2:	e8 b9 ce ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   19bf7:	90                   	nop

0000000000019bf8 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
   19bf8:	55                   	push   %rbp
   19bf9:	48 89 e5             	mov    %rsp,%rbp
   19bfc:	48 83 ec 10          	sub    $0x10,%rsp
   19c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19c04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.erase(__x); }
   19c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19c10:	48 89 d6             	mov    %rdx,%rsi
   19c13:	48 89 c7             	mov    %rax,%rdi
   19c16:	e8 75 b8 ff ff       	callq  15490 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseERS1_@plt>
   19c1b:	c9                   	leaveq 
   19c1c:	c3                   	retq   
   19c1d:	90                   	nop

0000000000019c1e <_ZN5boost6detail12shared_countC1IPhNS_21checked_array_deleterIhEEEET_T0_>:
    }

#if defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <= 1200 )
    template<class Y, class D> shared_count( Y * p, D d ): pi_(0)
#else
    template<class P, class D> shared_count( P p, D d ): pi_(0)
   19c1e:	55                   	push   %rbp
   19c1f:	48 89 e5             	mov    %rsp,%rbp
   19c22:	41 54                	push   %r12
   19c24:	53                   	push   %rbx
   19c25:	48 83 ec 10          	sub    $0x10,%rsp
   19c29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19c2d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19c31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c35:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
#endif
#ifndef BOOST_NO_EXCEPTIONS

        try
        {
            pi_ = new sp_counted_impl_pd<P, D>(p, d);
   19c3c:	bf 20 00 00 00       	mov    $0x20,%edi
   19c41:	e8 4a ce ff ff       	callq  16a90 <_Znwm@plt>
   19c46:	48 89 c3             	mov    %rax,%rbx
   19c49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c4d:	48 8d 55 10          	lea    0x10(%rbp),%rdx
   19c51:	48 89 c6             	mov    %rax,%rsi
   19c54:	48 89 df             	mov    %rbx,%rdi
   19c57:	e8 04 ca ff ff       	callq  16660 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEEC1ES2_RS4_@plt>
   19c5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c60:	48 89 18             	mov    %rbx,(%rax)
            d(p); // delete p
            boost::throw_exception(std::bad_alloc());
        }

#endif
    }
   19c63:	48 83 c4 10          	add    $0x10,%rsp
   19c67:	5b                   	pop    %rbx
   19c68:	41 5c                	pop    %r12
   19c6a:	5d                   	pop    %rbp
   19c6b:	c3                   	retq   
   19c6c:	49 89 c4             	mov    %rax,%r12
#endif
#ifndef BOOST_NO_EXCEPTIONS

        try
        {
            pi_ = new sp_counted_impl_pd<P, D>(p, d);
   19c6f:	48 89 df             	mov    %rbx,%rdi
   19c72:	e8 79 b9 ff ff       	callq  155f0 <_ZdlPv@plt>
   19c77:	4c 89 e0             	mov    %r12,%rax
   19c7a:	eb 13                	jmp    19c8f <_ZN5boost6detail12shared_countC1IPhNS_21checked_array_deleterIhEEEET_T0_+0x71>
   19c7c:	48 89 c3             	mov    %rax,%rbx
        }
        catch(...)
   19c7f:	e8 9c cb ff ff       	callq  16820 <__cxa_end_catch@plt>
   19c84:	48 89 d8             	mov    %rbx,%rax
   19c87:	48 89 c7             	mov    %rax,%rdi
   19c8a:	e8 21 ce ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   19c8f:	48 89 c7             	mov    %rax,%rdi
   19c92:	e8 89 cc ff ff       	callq  16920 <__cxa_begin_catch@plt>
        {
            d(p); // delete p
   19c97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c9b:	48 89 c6             	mov    %rax,%rsi
   19c9e:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   19ca2:	e8 e9 bb ff ff       	callq  15890 <_ZNK5boost21checked_array_deleterIhEclEPh@plt>
            throw;
   19ca7:	e8 94 ba ff ff       	callq  15740 <__cxa_rethrow@plt>

0000000000019cac <_ZN5boost12shared_arrayIhE4swapERS1_>:
    long use_count() const // never throws
    {
        return pn.use_count();
    }

    void swap(shared_array<T> & other) // never throws
   19cac:	55                   	push   %rbp
   19cad:	48 89 e5             	mov    %rsp,%rbp
   19cb0:	48 83 ec 10          	sub    $0x10,%rsp
   19cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
        std::swap(px, other.px);
   19cbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cc4:	48 89 d6             	mov    %rdx,%rsi
   19cc7:	48 89 c7             	mov    %rax,%rdi
   19cca:	e8 71 bb ff ff       	callq  15840 <_ZSt4swapIPhEvRT_S2_@plt>
        pn.swap(other.pn);
   19ccf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19cd3:	48 8d 50 08          	lea    0x8(%rax),%rdx
   19cd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cdb:	48 83 c0 08          	add    $0x8,%rax
   19cdf:	48 89 d6             	mov    %rdx,%rsi
   19ce2:	48 89 c7             	mov    %rax,%rdi
   19ce5:	e8 46 bb ff ff       	callq  15830 <_ZN5boost6detail12shared_count4swapERS1_@plt>
    }
   19cea:	c9                   	leaveq 
   19ceb:	c3                   	retq   

0000000000019cec <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EEC1Ev>:
      _M_upper_bound(_Const_Link_type __x, _Const_Link_type __y,
		     const _Key& __k) const;

    public:
      // allocation/deallocation
      _Rb_tree() { }
   19cec:	55                   	push   %rbp
   19ced:	48 89 e5             	mov    %rsp,%rbp
   19cf0:	48 83 ec 10          	sub    $0x10,%rsp
   19cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cfc:	48 89 c7             	mov    %rax,%rdi
   19cff:	e8 ec ca ff ff       	callq  167f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev@plt>
   19d04:	c9                   	leaveq 
   19d05:	c3                   	retq   

0000000000019d06 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEED1Ev>:
      : __glibcxx_base_allocator<_Tp>(__a) { }

      template<typename _Tp1>
        allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
   19d06:	55                   	push   %rbp
   19d07:	48 89 e5             	mov    %rsp,%rbp
   19d0a:	48 83 ec 10          	sub    $0x10,%rsp
   19d0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d16:	48 89 c7             	mov    %rax,%rdi
   19d19:	e8 22 c0 ff ff       	callq  15d40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEED2Ev@plt>
   19d1e:	c9                   	leaveq 
   19d1f:	c3                   	retq   

0000000000019d20 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   19d20:	55                   	push   %rbp
   19d21:	48 89 e5             	mov    %rsp,%rbp
   19d24:	48 83 ec 20          	sub    $0x20,%rsp
   19d28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19d2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   19d30:	eb 49                	jmp    19d7b <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   19d32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19d36:	48 89 c7             	mov    %rax,%rdi
   19d39:	e8 a2 ce ff ff       	callq  16be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   19d3e:	48 89 c2             	mov    %rax,%rdx
   19d41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d45:	48 89 d6             	mov    %rdx,%rsi
   19d48:	48 89 c7             	mov    %rax,%rdi
   19d4b:	e8 d0 ba ff ff       	callq  15820 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>
	  _Link_type __y = _S_left(__x);
   19d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19d54:	48 89 c7             	mov    %rax,%rdi
   19d57:	e8 d4 b9 ff ff       	callq  15730 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   19d5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_destroy_node(__x);
   19d60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19d64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d68:	48 89 d6             	mov    %rdx,%rsi
   19d6b:	48 89 c7             	mov    %rax,%rdi
   19d6e:	e8 0d be ff ff       	callq  15b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
	  __x = __y;
   19d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d77:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   19d7b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19d80:	0f 95 c0             	setne  %al
   19d83:	84 c0                	test   %al,%al
   19d85:	75 ab                	jne    19d32 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x12>
	  _M_erase(_S_right(__x));
	  _Link_type __y = _S_left(__x);
	  _M_destroy_node(__x);
	  __x = __y;
	}
    }
   19d87:	c9                   	leaveq 
   19d88:	c3                   	retq   
   19d89:	90                   	nop

0000000000019d8a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv>:
      _Const_Base_ptr
      _M_rightmost() const
      { return this->_M_impl._M_header._M_right; }

      _Link_type
      _M_begin()
   19d8a:	55                   	push   %rbp
   19d8b:	48 89 e5             	mov    %rsp,%rbp
   19d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   19d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d96:	48 8b 40 10          	mov    0x10(%rax),%rax
   19d9a:	5d                   	pop    %rbp
   19d9b:	c3                   	retq   

0000000000019d9c <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE11lower_boundERS7_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   19d9c:	55                   	push   %rbp
   19d9d:	48 89 e5             	mov    %rsp,%rbp
   19da0:	48 83 ec 10          	sub    $0x10,%rsp
   19da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19da8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   19dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19db0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19db4:	48 89 d6             	mov    %rdx,%rsi
   19db7:	48 89 c7             	mov    %rax,%rdi
   19dba:	e8 21 c5 ff ff       	callq  162e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11lower_boundERS1_@plt>
   19dbf:	c9                   	leaveq 
   19dc0:	c3                   	retq   
   19dc1:	90                   	nop

0000000000019dc2 <_ZNKSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE8key_compEv>:
      /**
       *  Returns the key comparison object out of which the %map was
       *  constructed.
       */
      key_compare
      key_comp() const
   19dc2:	55                   	push   %rbp
   19dc3:	48 89 e5             	mov    %rsp,%rbp
   19dc6:	53                   	push   %rbx
   19dc7:	48 83 ec 18          	sub    $0x18,%rsp
   19dcb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _M_t.key_comp(); }
   19dcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19dd3:	48 89 c7             	mov    %rax,%rdi
   19dd6:	e8 65 c5 ff ff       	callq  16340 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8key_compEv@plt>
   19ddb:	89 d8                	mov    %ebx,%eax
   19ddd:	48 83 c4 18          	add    $0x18,%rsp
   19de1:	5b                   	pop    %rbx
   19de2:	5d                   	pop    %rbp
   19de3:	c3                   	retq   

0000000000019de4 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEdeEv>:
      explicit
      _Rb_tree_iterator(_Link_type __x)
      : _M_node(__x) { }

      reference
      operator*() const
   19de4:	55                   	push   %rbp
   19de5:	48 89 e5             	mov    %rsp,%rbp
   19de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(_M_node)->_M_value_field; }
   19dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19df0:	48 8b 00             	mov    (%rax),%rax
   19df3:	48 83 c0 20          	add    $0x20,%rax
   19df7:	5d                   	pop    %rbp
   19df8:	c3                   	retq   
   19df9:	90                   	nop

0000000000019dfa <_ZNKSt4lessIiEclERKiS2_>:
  /// One of the @link comparison_functors comparison functors@endlink.
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   19dfa:	55                   	push   %rbp
   19dfb:	48 89 e5             	mov    %rsp,%rbp
   19dfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19e06:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   19e0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19e0e:	8b 10                	mov    (%rax),%edx
   19e10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e14:	8b 00                	mov    (%rax),%eax
   19e16:	39 c2                	cmp    %eax,%edx
   19e18:	0f 9c c0             	setl   %al
   19e1b:	5d                   	pop    %rbp
   19e1c:	c3                   	retq   
   19e1d:	90                   	nop

0000000000019e1e <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  pair in the %map.  Iteration is done in ascending order
       *  according to the keys.
       */
      iterator
      end()
   19e1e:	55                   	push   %rbp
   19e1f:	48 89 e5             	mov    %rsp,%rbp
   19e22:	48 83 ec 10          	sub    $0x10,%rsp
   19e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   19e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e2e:	48 89 c7             	mov    %rax,%rdi
   19e31:	e8 4a b4 ff ff       	callq  15280 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv@plt>
   19e36:	c9                   	leaveq 
   19e37:	c3                   	retq   

0000000000019e38 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_>:
	_M_node = _Rb_tree_decrement(_M_node);
	return __tmp;
      }

      bool
      operator==(const _Self& __x) const
   19e38:	55                   	push   %rbp
   19e39:	48 89 e5             	mov    %rsp,%rbp
   19e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node == __x._M_node; }
   19e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e48:	48 8b 10             	mov    (%rax),%rdx
   19e4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19e4f:	48 8b 00             	mov    (%rax),%rax
   19e52:	48 39 c2             	cmp    %rax,%rdx
   19e55:	0f 94 c0             	sete   %al
   19e58:	5d                   	pop    %rbp
   19e59:	c3                   	retq   

0000000000019e5a <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEC1IS4_vEERS0_OT_>:
	pair(_U1&& __x, const _T2& __y)
	: first(std::forward<_U1>(__x)), second(__y) { }

      template<class _U2, class = typename
	       std::enable_if<std::is_convertible<_U2, _T2>::value>::type>
	pair(const _T1& __x, _U2&& __y)
   19e5a:	55                   	push   %rbp
   19e5b:	48 89 e5             	mov    %rsp,%rbp
   19e5e:	48 83 ec 20          	sub    $0x20,%rsp
   19e62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19e6a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(__x), second(std::forward<_U2>(__y)) { }
   19e6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19e72:	8b 10                	mov    (%rax),%edx
   19e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e78:	89 10                	mov    %edx,(%rax)
   19e7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e7e:	48 89 c7             	mov    %rax,%rdi
   19e81:	e8 4a c0 ff ff       	callq  15ed0 <_ZSt7forwardIN6xaxaxa2IO17FileStreamManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE@plt>
   19e86:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19e8a:	48 83 c2 08          	add    $0x8,%rdx
   19e8e:	48 89 c6             	mov    %rax,%rsi
   19e91:	48 89 d7             	mov    %rdx,%rdi
   19e94:	e8 b7 b7 ff ff       	callq  15650 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_@plt>
   19e99:	c9                   	leaveq 
   19e9a:	c3                   	retq   
   19e9b:	90                   	nop

0000000000019e9c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E>:

      explicit
      _Rb_tree_const_iterator(_Link_type __x)
      : _M_node(__x) { }

      _Rb_tree_const_iterator(const iterator& __it)
   19e9c:	55                   	push   %rbp
   19e9d:	48 89 e5             	mov    %rsp,%rbp
   19ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   19ea8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19eac:	48 8b 10             	mov    (%rax),%rdx
   19eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19eb3:	48 89 10             	mov    %rdx,(%rax)
   19eb6:	5d                   	pop    %rbp
   19eb7:	c3                   	retq   

0000000000019eb8 <_ZNSt3mapIiN6xaxaxa2IO17FileStreamManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE6insertIS8_vEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EOT_>:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename _Pair, typename = typename
	       std::enable_if<std::is_convertible<_Pair,
						  value_type>::value>::type>
        iterator
        insert(const_iterator __position, _Pair&& __x)
   19eb8:	55                   	push   %rbp
   19eb9:	48 89 e5             	mov    %rsp,%rbp
   19ebc:	48 83 ec 20          	sub    $0x20,%rsp
   19ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ec4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ec8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return _M_t._M_insert_unique_(__position,
					std::forward<_Pair>(__x)); }
   19ecc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ed0:	48 89 c7             	mov    %rax,%rdi
   19ed3:	e8 f8 cb ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   19ed8:	48 89 c2             	mov    %rax,%rdx
   19edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19edf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19ee3:	48 89 ce             	mov    %rcx,%rsi
   19ee6:	48 89 c7             	mov    %rax,%rdi
   19ee9:	e8 d2 bf ff ff       	callq  15ec0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_@plt>
   19eee:	c9                   	leaveq 
   19eef:	c3                   	retq   

0000000000019ef0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseERS1_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   19ef0:	55                   	push   %rbp
   19ef1:	48 89 e5             	mov    %rsp,%rbp
   19ef4:	48 83 ec 60          	sub    $0x60,%rsp
   19ef8:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   19efc:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
   19f00:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   19f04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19f08:	48 89 d6             	mov    %rdx,%rsi
   19f0b:	48 89 c7             	mov    %rax,%rdi
   19f0e:	e8 9d c3 ff ff       	callq  162b0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_@plt>
   19f13:	48 89 c1             	mov    %rax,%rcx
   19f16:	48 89 d0             	mov    %rdx,%rax
   19f19:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   19f1d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   19f21:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19f25:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   19f29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19f2d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   19f31:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   19f35:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   19f39:	48 89 d6             	mov    %rdx,%rsi
   19f3c:	48 89 c7             	mov    %rax,%rdi
   19f3f:	e8 6c c8 ff ff       	callq  167b0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>
      const size_type __old_size = size();
   19f44:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19f48:	48 89 c7             	mov    %rax,%rdi
   19f4b:	e8 70 c7 ff ff       	callq  166c0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>
   19f50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      erase(__p.first, __p.second);
   19f54:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   19f58:	48 8d 50 08          	lea    0x8(%rax),%rdx
   19f5c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19f60:	48 89 d6             	mov    %rdx,%rsi
   19f63:	48 89 c7             	mov    %rax,%rdi
   19f66:	e8 45 c2 ff ff       	callq  161b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   19f6b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   19f6f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   19f73:	48 89 d6             	mov    %rdx,%rsi
   19f76:	48 89 c7             	mov    %rax,%rdi
   19f79:	e8 32 c2 ff ff       	callq  161b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   19f7e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19f82:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19f86:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19f8a:	48 89 ce             	mov    %rcx,%rsi
   19f8d:	48 89 c7             	mov    %rax,%rdi
   19f90:	e8 0b cc ff ff       	callq  16ba0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_ESE_@plt>
      return __old_size - size();
   19f95:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19f99:	48 89 c7             	mov    %rax,%rdi
   19f9c:	e8 1f c7 ff ff       	callq  166c0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>
   19fa1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19fa5:	48 89 d1             	mov    %rdx,%rcx
   19fa8:	48 29 c1             	sub    %rax,%rcx
   19fab:	48 89 c8             	mov    %rcx,%rax
    }
   19fae:	c9                   	leaveq 
   19faf:	c3                   	retq   

0000000000019fb0 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEEC1ES2_RS4_>:

public:

    // pre: d(p) must not throw

    sp_counted_impl_pd( P p, D & d ): ptr( p ), del( d )
   19fb0:	55                   	push   %rbp
   19fb1:	48 89 e5             	mov    %rsp,%rbp
   19fb4:	48 83 ec 20          	sub    $0x20,%rsp
   19fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19fbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19fc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   19fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fc8:	48 89 c7             	mov    %rax,%rdi
   19fcb:	e8 70 c9 ff ff       	callq  16940 <_ZN5boost6detail15sp_counted_baseC2Ev@plt>
   19fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fd4:	48 8b 15 25 01 21 00 	mov    0x210125(%rip),%rdx        # 22a100 <_DYNAMIC+0x268>
   19fdb:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   19fdf:	48 89 10             	mov    %rdx,(%rax)
   19fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fe6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19fea:	48 89 50 10          	mov    %rdx,0x10(%rax)
    {
    }
   19fee:	c9                   	leaveq 
   19fef:	c3                   	retq   

0000000000019ff0 <_ZNK5boost21checked_array_deleterIhEclEPh>:
template<class T> struct checked_array_deleter
{
    typedef void result_type;
    typedef T * argument_type;

    void operator()(T * x) const
   19ff0:	55                   	push   %rbp
   19ff1:	48 89 e5             	mov    %rsp,%rbp
   19ff4:	48 83 ec 10          	sub    $0x10,%rsp
   19ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ffc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
        boost::checked_array_delete(x);
   1a000:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a004:	48 89 c7             	mov    %rax,%rdi
   1a007:	e8 f4 c8 ff ff       	callq  16900 <_ZN5boost20checked_array_deleteIhEEvPT_@plt>
    }
   1a00c:	c9                   	leaveq 
   1a00d:	c3                   	retq   

000000000001a00e <_ZSt4swapIPhEvRT_S2_>:
   *  @param  __b  Another thing of arbitrary type.
   *  @return   Nothing.
  */
  template<typename _Tp>
    inline void
    swap(_Tp& __a, _Tp& __b)
   1a00e:	55                   	push   %rbp
   1a00f:	48 89 e5             	mov    %rsp,%rbp
   1a012:	48 83 ec 20          	sub    $0x20,%rsp
   1a016:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a01a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)

      _Tp __tmp = _GLIBCXX_MOVE(__a);
   1a01e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a022:	48 89 c7             	mov    %rax,%rdi
   1a025:	e8 76 bd ff ff       	callq  15da0 <_ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_@plt>
   1a02a:	48 8b 00             	mov    (%rax),%rax
   1a02d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
   1a031:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a035:	48 89 c7             	mov    %rax,%rdi
   1a038:	e8 63 bd ff ff       	callq  15da0 <_ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_@plt>
   1a03d:	48 8b 10             	mov    (%rax),%rdx
   1a040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a044:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
   1a047:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1a04b:	48 89 c7             	mov    %rax,%rdi
   1a04e:	e8 4d bd ff ff       	callq  15da0 <_ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_@plt>
   1a053:	48 8b 10             	mov    (%rax),%rdx
   1a056:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a05a:	48 89 10             	mov    %rdx,(%rax)
    }
   1a05d:	c9                   	leaveq 
   1a05e:	c3                   	retq   
   1a05f:	90                   	nop

000000000001a060 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev>:
        {
	  _Key_compare		_M_key_compare;
	  _Rb_tree_node_base 	_M_header;
	  size_type 		_M_node_count; // Keeps track of size of tree.

	  _Rb_tree_impl()
   1a060:	55                   	push   %rbp
   1a061:	48 89 e5             	mov    %rsp,%rbp
   1a064:	53                   	push   %rbx
   1a065:	48 83 ec 18          	sub    $0x18,%rsp
   1a069:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	  : _Node_allocator(), _M_key_compare(), _M_header(),
	    _M_node_count(0)
   1a06d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a071:	48 89 c7             	mov    %rax,%rdi
   1a074:	e8 17 c9 ff ff       	callq  16990 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEC2Ev@plt>
   1a079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a07d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   1a084:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a088:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1a08f:	00 
   1a090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a094:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1a09b:	00 
   1a09c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a0a0:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1a0a7:	00 
   1a0a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a0ac:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1a0b3:	00 
	  { _M_initialize(); }
   1a0b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a0b8:	48 89 c7             	mov    %rax,%rdi
   1a0bb:	e8 e0 b9 ff ff       	callq  15aa0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EE13_M_initializeEv@plt>
   1a0c0:	eb 1a                	jmp    1a0dc <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev+0x7c>
   1a0c2:	48 89 c3             	mov    %rax,%rbx
	  _Rb_tree_node_base 	_M_header;
	  size_type 		_M_node_count; // Keeps track of size of tree.

	  _Rb_tree_impl()
	  : _Node_allocator(), _M_key_compare(), _M_header(),
	    _M_node_count(0)
   1a0c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a0c9:	48 89 c7             	mov    %rax,%rdi
   1a0cc:	e8 bf bd ff ff       	callq  15e90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEED2Ev@plt>
   1a0d1:	48 89 d8             	mov    %rbx,%rax
   1a0d4:	48 89 c7             	mov    %rax,%rdi
   1a0d7:	e8 d4 c9 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
	  { _M_initialize(); }
   1a0dc:	48 83 c4 18          	add    $0x18,%rsp
   1a0e0:	5b                   	pop    %rbx
   1a0e1:	5d                   	pop    %rbp
   1a0e2:	c3                   	retq   
   1a0e3:	90                   	nop

000000000001a0e4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEED1Ev>:
      new_allocator(const new_allocator&) throw() { }

      template<typename _Tp1>
        new_allocator(const new_allocator<_Tp1>&) throw() { }

      ~new_allocator() throw() { }
   1a0e4:	55                   	push   %rbp
   1a0e5:	48 89 e5             	mov    %rsp,%rbp
   1a0e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a0ec:	5d                   	pop    %rbp
   1a0ed:	c3                   	retq   

000000000001a0ee <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>:
      static _Const_Link_type
      _S_left(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x->_M_left); }

      static _Link_type
      _S_right(_Base_ptr __x)
   1a0ee:	55                   	push   %rbp
   1a0ef:	48 89 e5             	mov    %rsp,%rbp
   1a0f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1a0f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0fa:	48 8b 40 18          	mov    0x18(%rax),%rax
   1a0fe:	5d                   	pop    %rbp
   1a0ff:	c3                   	retq   

000000000001a100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base>:
      static const _Key&
      _S_key(_Const_Link_type __x)
      { return _KeyOfValue()(_S_value(__x)); }

      static _Link_type
      _S_left(_Base_ptr __x)
   1a100:	55                   	push   %rbp
   1a101:	48 89 e5             	mov    %rsp,%rbp
   1a104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1a108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a10c:	48 8b 40 10          	mov    0x10(%rax),%rax
   1a110:	5d                   	pop    %rbp
   1a111:	c3                   	retq   

000000000001a112 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E>:
	    }
	  return __tmp;
	}

      void
      _M_destroy_node(_Link_type __p)
   1a112:	55                   	push   %rbp
   1a113:	48 89 e5             	mov    %rsp,%rbp
   1a116:	48 83 ec 10          	sub    $0x10,%rsp
   1a11a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a11e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	_M_get_Node_allocator().destroy(__p);
   1a122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a126:	48 89 c7             	mov    %rax,%rdi
   1a129:	e8 82 b3 ff ff       	callq  154b0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv@plt>
   1a12e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a132:	48 89 d6             	mov    %rdx,%rsi
   1a135:	48 89 c7             	mov    %rax,%rdi
   1a138:	e8 a3 c5 ff ff       	callq  166e0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE7destroyEPS9_@plt>
	_M_put_node(__p);
   1a13d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a145:	48 89 d6             	mov    %rdx,%rsi
   1a148:	48 89 c7             	mov    %rax,%rdi
   1a14b:	e8 50 bf ff ff       	callq  160a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
      }
   1a150:	c9                   	leaveq 
   1a151:	c3                   	retq   

000000000001a152 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11lower_boundERS1_>:

      size_type
      count(const key_type& __k) const;

      iterator
      lower_bound(const key_type& __k)
   1a152:	55                   	push   %rbp
   1a153:	48 89 e5             	mov    %rsp,%rbp
   1a156:	53                   	push   %rbx
   1a157:	48 83 ec 18          	sub    $0x18,%rsp
   1a15b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a15f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   1a163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a167:	48 89 c7             	mov    %rax,%rdi
   1a16a:	e8 71 b7 ff ff       	callq  158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1a16f:	48 89 c3             	mov    %rax,%rbx
   1a172:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a176:	48 89 c7             	mov    %rax,%rdi
   1a179:	e8 02 ca ff ff       	callq  16b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   1a17e:	48 89 c6             	mov    %rax,%rsi
   1a181:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a189:	48 89 d1             	mov    %rdx,%rcx
   1a18c:	48 89 da             	mov    %rbx,%rdx
   1a18f:	48 89 c7             	mov    %rax,%rdi
   1a192:	e8 f9 b1 ff ff       	callq  15390 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>
   1a197:	48 83 c4 18          	add    $0x18,%rsp
   1a19b:	5b                   	pop    %rbx
   1a19c:	5d                   	pop    %rbp
   1a19d:	c3                   	retq   

000000000001a19e <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8key_compEv>:
      _Rb_tree&
      operator=(const _Rb_tree& __x);

      // Accessors.
      _Compare
      key_comp() const
   1a19e:	55                   	push   %rbp
   1a19f:	48 89 e5             	mov    %rsp,%rbp
   1a1a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   1a1a6:	5d                   	pop    %rbp
   1a1a7:	c3                   	retq   

000000000001a1a8 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv>:
	return const_iterator(static_cast<_Const_Link_type>
			      (this->_M_impl._M_header._M_left));
      }

      iterator
      end()
   1a1a8:	55                   	push   %rbp
   1a1a9:	48 89 e5             	mov    %rsp,%rbp
   1a1ac:	48 83 ec 20          	sub    $0x20,%rsp
   1a1b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(static_cast<_Link_type>(&this->_M_impl._M_header)); }
   1a1b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a1b8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1a1bc:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1a1c0:	48 89 d6             	mov    %rdx,%rsi
   1a1c3:	48 89 c7             	mov    %rax,%rdi
   1a1c6:	e8 e5 c2 ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1a1cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1cf:	c9                   	leaveq 
   1a1d0:	c3                   	retq   

000000000001a1d1 <_ZSt7forwardIN6xaxaxa2IO17FileStreamManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1a1d1:	55                   	push   %rbp
   1a1d2:	48 89 e5             	mov    %rsp,%rbp
   1a1d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1a1d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1dd:	5d                   	pop    %rbp
   1a1de:	c3                   	retq   

000000000001a1df <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1a1df:	55                   	push   %rbp
   1a1e0:	48 89 e5             	mov    %rsp,%rbp
   1a1e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1a1e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1eb:	5d                   	pop    %rbp
   1a1ec:	c3                   	retq   
   1a1ed:	90                   	nop

000000000001a1ee <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_>:
           typename _Compare, typename _Alloc>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1a1ee:	55                   	push   %rbp
   1a1ef:	48 89 e5             	mov    %rsp,%rbp
   1a1f2:	41 54                	push   %r12
   1a1f4:	53                   	push   %rbx
   1a1f5:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   1a1fc:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   1a203:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   1a20a:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
#else
    _M_insert_unique_(const_iterator __position, const _Val& __v)
#endif
    {
      // end()
      if (__position._M_node == _M_end())
   1a211:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   1a218:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a21f:	48 89 c7             	mov    %rax,%rdi
   1a222:	e8 b9 b6 ff ff       	callq  158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1a227:	48 39 c3             	cmp    %rax,%rbx
   1a22a:	0f 94 c0             	sete   %al
   1a22d:	84 c0                	test   %al,%al
   1a22f:	0f 84 08 01 00 00    	je     1a33d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x14f>
	{
	  if (size() > 0
   1a235:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a23c:	48 89 c7             	mov    %rax,%rdi
   1a23f:	e8 7c c4 ff ff       	callq  166c0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>
   1a244:	48 85 c0             	test   %rax,%rax
   1a247:	74 56                	je     1a29f <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xb1>
   1a249:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a250:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   1a254:	48 89 d6             	mov    %rdx,%rsi
   1a257:	48 89 c7             	mov    %rax,%rdi
   1a25a:	e8 21 c7 ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1a25f:	48 89 c3             	mov    %rax,%rbx
   1a262:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a269:	48 89 c7             	mov    %rax,%rdi
   1a26c:	e8 0f ba ff ff       	callq  15c80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1a271:	48 8b 00             	mov    (%rax),%rax
   1a274:	48 89 c7             	mov    %rax,%rdi
   1a277:	e8 c4 c5 ff ff       	callq  16840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1a27c:	48 89 c1             	mov    %rax,%rcx
   1a27f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a286:	48 89 da             	mov    %rbx,%rdx
   1a289:	48 89 ce             	mov    %rcx,%rsi
   1a28c:	48 89 c7             	mov    %rax,%rdi
   1a28f:	e8 ec ba ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1a294:	84 c0                	test   %al,%al
   1a296:	74 07                	je     1a29f <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xb1>
   1a298:	b8 01 00 00 00       	mov    $0x1,%eax
   1a29d:	eb 05                	jmp    1a2a4 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xb6>
   1a29f:	b8 00 00 00 00       	mov    $0x0,%eax
   1a2a4:	84 c0                	test   %al,%al
   1a2a6:	74 40                	je     1a2e8 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xfa>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), 
					_KeyOfValue()(__v)))
	    return _M_insert_(0, _M_rightmost(), _GLIBCXX_FORWARD(_Arg, __v));
   1a2a8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a2af:	48 89 c7             	mov    %rax,%rdi
   1a2b2:	e8 19 c8 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a2b7:	48 89 c3             	mov    %rax,%rbx
   1a2ba:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a2c1:	48 89 c7             	mov    %rax,%rdi
   1a2c4:	e8 b7 b9 ff ff       	callq  15c80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1a2c9:	48 8b 10             	mov    (%rax),%rdx
   1a2cc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a2d3:	48 89 d9             	mov    %rbx,%rcx
   1a2d6:	be 00 00 00 00       	mov    $0x0,%esi
   1a2db:	48 89 c7             	mov    %rax,%rdi
   1a2de:	e8 1d be ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1a2e3:	e9 0e 04 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   1a2e8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a2ef:	48 89 c7             	mov    %rax,%rdi
   1a2f2:	e8 d9 c7 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a2f7:	48 89 c2             	mov    %rax,%rdx
   1a2fa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a301:	48 89 d6             	mov    %rdx,%rsi
   1a304:	48 89 c7             	mov    %rax,%rdi
   1a307:	e8 34 c3 ff ff       	callq  16640 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>
   1a30c:	48 89 c1             	mov    %rax,%rcx
   1a30f:	89 d0                	mov    %edx,%eax
   1a311:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1a318:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1a31e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a325:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1a329:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1a330:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1a334:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1a338:	e9 b9 03 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	}
      else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
   1a33d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a344:	48 89 c7             	mov    %rax,%rdi
   1a347:	e8 f4 c4 ff ff       	callq  16840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1a34c:	48 89 c3             	mov    %rax,%rbx
   1a34f:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a356:	48 8d 45 be          	lea    -0x42(%rbp),%rax
   1a35a:	48 89 d6             	mov    %rdx,%rsi
   1a35d:	48 89 c7             	mov    %rax,%rdi
   1a360:	e8 1b c6 ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1a365:	48 89 c1             	mov    %rax,%rcx
   1a368:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a36f:	48 89 da             	mov    %rbx,%rdx
   1a372:	48 89 ce             	mov    %rcx,%rsi
   1a375:	48 89 c7             	mov    %rax,%rdi
   1a378:	e8 03 ba ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1a37d:	84 c0                	test   %al,%al
   1a37f:	0f 84 98 01 00 00    	je     1a51d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x32f>
				      _S_key(__position._M_node)))
	{
	  // First, try before...
	  const_iterator __before = __position;
   1a385:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a38c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
	  if (__position._M_node == _M_leftmost()) // begin()
   1a390:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   1a397:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a39e:	48 89 c7             	mov    %rax,%rdi
   1a3a1:	e8 8a bb ff ff       	callq  15f30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   1a3a6:	48 8b 00             	mov    (%rax),%rax
   1a3a9:	48 39 c3             	cmp    %rax,%rbx
   1a3ac:	0f 94 c0             	sete   %al
   1a3af:	84 c0                	test   %al,%al
   1a3b1:	74 50                	je     1a403 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x215>
	    return _M_insert_(_M_leftmost(), _M_leftmost(),
			      _GLIBCXX_FORWARD(_Arg, __v));
   1a3b3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a3ba:	48 89 c7             	mov    %rax,%rdi
   1a3bd:	e8 0e c7 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a3c2:	49 89 c4             	mov    %rax,%r12
   1a3c5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a3cc:	48 89 c7             	mov    %rax,%rdi
   1a3cf:	e8 5c bb ff ff       	callq  15f30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   1a3d4:	48 8b 18             	mov    (%rax),%rbx
   1a3d7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a3de:	48 89 c7             	mov    %rax,%rdi
   1a3e1:	e8 4a bb ff ff       	callq  15f30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   1a3e6:	48 8b 30             	mov    (%rax),%rsi
   1a3e9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a3f0:	4c 89 e1             	mov    %r12,%rcx
   1a3f3:	48 89 da             	mov    %rbx,%rdx
   1a3f6:	48 89 c7             	mov    %rax,%rdi
   1a3f9:	e8 02 bd ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1a3fe:	e9 f3 02 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), 
   1a403:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a40a:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1a40e:	48 89 d6             	mov    %rdx,%rsi
   1a411:	48 89 c7             	mov    %rax,%rdi
   1a414:	e8 67 c5 ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1a419:	48 89 c3             	mov    %rax,%rbx
   1a41c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1a420:	48 89 c7             	mov    %rax,%rdi
   1a423:	e8 28 bb ff ff       	callq  15f50 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEmmEv@plt>
   1a428:	48 8b 00             	mov    (%rax),%rax
   1a42b:	48 89 c7             	mov    %rax,%rdi
   1a42e:	e8 0d c4 ff ff       	callq  16840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1a433:	48 89 c1             	mov    %rax,%rcx
   1a436:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a43d:	48 89 da             	mov    %rbx,%rdx
   1a440:	48 89 ce             	mov    %rcx,%rsi
   1a443:	48 89 c7             	mov    %rax,%rdi
   1a446:	e8 35 b9 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1a44b:	84 c0                	test   %al,%al
   1a44d:	74 79                	je     1a4c8 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x2da>
					  _KeyOfValue()(__v)))
	    {
	      if (_S_right(__before._M_node) == 0)
   1a44f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1a453:	48 89 c7             	mov    %rax,%rdi
   1a456:	e8 35 c7 ff ff       	callq  16b90 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>
   1a45b:	48 85 c0             	test   %rax,%rax
   1a45e:	0f 94 c0             	sete   %al
   1a461:	84 c0                	test   %al,%al
   1a463:	74 2f                	je     1a494 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x2a6>
		return _M_insert_(0, __before._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1a465:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a46c:	48 89 c7             	mov    %rax,%rdi
   1a46f:	e8 5c c6 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a474:	48 89 c1             	mov    %rax,%rcx
   1a477:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a47b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a482:	be 00 00 00 00       	mov    $0x0,%esi
   1a487:	48 89 c7             	mov    %rax,%rdi
   1a48a:	e8 71 bc ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1a48f:	e9 62 02 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	      else
		return _M_insert_(__position._M_node,
				  __position._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1a494:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a49b:	48 89 c7             	mov    %rax,%rdi
   1a49e:	e8 2d c6 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a4a3:	48 89 c1             	mov    %rax,%rcx
   1a4a6:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1a4ad:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
   1a4b4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a4bb:	48 89 c7             	mov    %rax,%rdi
   1a4be:	e8 3d bc ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1a4c3:	e9 2e 02 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	    }
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   1a4c8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a4cf:	48 89 c7             	mov    %rax,%rdi
   1a4d2:	e8 f9 c5 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a4d7:	48 89 c2             	mov    %rax,%rdx
   1a4da:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a4e1:	48 89 d6             	mov    %rdx,%rsi
   1a4e4:	48 89 c7             	mov    %rax,%rdi
   1a4e7:	e8 54 c1 ff ff       	callq  16640 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>
   1a4ec:	48 89 c1             	mov    %rax,%rcx
   1a4ef:	89 d0                	mov    %edx,%eax
   1a4f1:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1a4f8:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1a4fe:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a505:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1a509:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1a510:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1a514:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a518:	e9 d9 01 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	}
      else if (_M_impl._M_key_compare(_S_key(__position._M_node),
   1a51d:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a524:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   1a528:	48 89 d6             	mov    %rdx,%rsi
   1a52b:	48 89 c7             	mov    %rax,%rdi
   1a52e:	e8 4d c4 ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1a533:	48 89 c3             	mov    %rax,%rbx
   1a536:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a53d:	48 89 c7             	mov    %rax,%rdi
   1a540:	e8 fb c2 ff ff       	callq  16840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1a545:	48 89 c1             	mov    %rax,%rcx
   1a548:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a54f:	48 89 da             	mov    %rbx,%rdx
   1a552:	48 89 ce             	mov    %rcx,%rsi
   1a555:	48 89 c7             	mov    %rax,%rdi
   1a558:	e8 23 b8 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1a55d:	84 c0                	test   %al,%al
   1a55f:	0f 84 82 01 00 00    	je     1a6e7 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x4f9>
				      _KeyOfValue()(__v)))
	{
	  // ... then try after.
	  const_iterator __after = __position;
   1a565:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a56c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
	  if (__position._M_node == _M_rightmost())
   1a570:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   1a577:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a57e:	48 89 c7             	mov    %rax,%rdi
   1a581:	e8 fa b6 ff ff       	callq  15c80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1a586:	48 8b 00             	mov    (%rax),%rax
   1a589:	48 39 c3             	cmp    %rax,%rbx
   1a58c:	0f 94 c0             	sete   %al
   1a58f:	84 c0                	test   %al,%al
   1a591:	74 40                	je     1a5d3 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x3e5>
	    return _M_insert_(0, _M_rightmost(),
			      _GLIBCXX_FORWARD(_Arg, __v));
   1a593:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a59a:	48 89 c7             	mov    %rax,%rdi
   1a59d:	e8 2e c5 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a5a2:	48 89 c3             	mov    %rax,%rbx
   1a5a5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a5ac:	48 89 c7             	mov    %rax,%rdi
   1a5af:	e8 cc b6 ff ff       	callq  15c80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1a5b4:	48 8b 10             	mov    (%rax),%rdx
   1a5b7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a5be:	48 89 d9             	mov    %rbx,%rcx
   1a5c1:	be 00 00 00 00       	mov    $0x0,%esi
   1a5c6:	48 89 c7             	mov    %rax,%rdi
   1a5c9:	e8 32 bb ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1a5ce:	e9 23 01 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	  else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
   1a5d3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1a5d7:	48 89 c7             	mov    %rax,%rdi
   1a5da:	e8 51 b3 ff ff       	callq  15930 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEppEv@plt>
   1a5df:	48 8b 00             	mov    (%rax),%rax
   1a5e2:	48 89 c7             	mov    %rax,%rdi
   1a5e5:	e8 56 c2 ff ff       	callq  16840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1a5ea:	48 89 c3             	mov    %rax,%rbx
   1a5ed:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a5f4:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1a5f8:	48 89 d6             	mov    %rdx,%rsi
   1a5fb:	48 89 c7             	mov    %rax,%rdi
   1a5fe:	e8 7d c3 ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1a603:	48 89 c1             	mov    %rax,%rcx
   1a606:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a60d:	48 89 da             	mov    %rbx,%rdx
   1a610:	48 89 ce             	mov    %rcx,%rsi
   1a613:	48 89 c7             	mov    %rax,%rdi
   1a616:	e8 65 b7 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1a61b:	84 c0                	test   %al,%al
   1a61d:	74 76                	je     1a695 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x4a7>
					  _S_key((++__after)._M_node)))
	    {
	      if (_S_right(__position._M_node) == 0)
   1a61f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1a626:	48 89 c7             	mov    %rax,%rdi
   1a629:	e8 62 c5 ff ff       	callq  16b90 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>
   1a62e:	48 85 c0             	test   %rax,%rax
   1a631:	0f 94 c0             	sete   %al
   1a634:	84 c0                	test   %al,%al
   1a636:	74 32                	je     1a66a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x47c>
		return _M_insert_(0, __position._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1a638:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a63f:	48 89 c7             	mov    %rax,%rdi
   1a642:	e8 89 c4 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a647:	48 89 c1             	mov    %rax,%rcx
   1a64a:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1a651:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a658:	be 00 00 00 00       	mov    $0x0,%esi
   1a65d:	48 89 c7             	mov    %rax,%rdi
   1a660:	e8 9b ba ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1a665:	e9 8c 00 00 00       	jmpq   1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	      else
		return _M_insert_(__after._M_node, __after._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1a66a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a671:	48 89 c7             	mov    %rax,%rdi
   1a674:	e8 57 c4 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a679:	48 89 c1             	mov    %rax,%rcx
   1a67c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1a680:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   1a684:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a68b:	48 89 c7             	mov    %rax,%rdi
   1a68e:	e8 6d ba ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1a693:	eb 61                	jmp    1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	    }
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   1a695:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a69c:	48 89 c7             	mov    %rax,%rdi
   1a69f:	e8 2c c4 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1a6a4:	48 89 c2             	mov    %rax,%rdx
   1a6a7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1a6ae:	48 89 d6             	mov    %rdx,%rsi
   1a6b1:	48 89 c7             	mov    %rax,%rdi
   1a6b4:	e8 87 bf ff ff       	callq  16640 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>
   1a6b9:	48 89 c1             	mov    %rax,%rcx
   1a6bc:	89 d0                	mov    %edx,%eax
   1a6be:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1a6c5:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1a6cb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a6d2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a6d6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1a6dd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a6e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a6e5:	eb 0f                	jmp    1a6f6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	}
      else
	// Equivalent keys.
	return __position._M_const_cast();
   1a6e7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1a6ee:	48 89 c7             	mov    %rax,%rdi
   1a6f1:	e8 2a af ff ff       	callq  15620 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEE13_M_const_castEv@plt>
    }
   1a6f6:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   1a6fd:	5b                   	pop    %rbx
   1a6fe:	41 5c                	pop    %r12
   1a700:	5d                   	pop    %rbp
   1a701:	c3                   	retq   

000000000001a702 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_>:
           typename _Compare, typename _Alloc>
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator,
	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1a702:	55                   	push   %rbp
   1a703:	48 89 e5             	mov    %rsp,%rbp
   1a706:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   1a70d:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   1a714:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    equal_range(const _Key& __k)
    {
      _Link_type __x = _M_begin();
   1a71b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a722:	48 89 c7             	mov    %rax,%rdi
   1a725:	e8 56 c4 ff ff       	callq  16b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   1a72a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _Link_type __y = _M_end();
   1a72e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a735:	48 89 c7             	mov    %rax,%rdi
   1a738:	e8 a3 b1 ff ff       	callq  158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1a73d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      while (__x != 0)
   1a741:	e9 57 01 00 00       	jmpq   1a89d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x19b>
	{
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
   1a746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a74a:	48 89 c7             	mov    %rax,%rdi
   1a74d:	e8 ae be ff ff       	callq  16600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   1a752:	48 89 c1             	mov    %rax,%rcx
   1a755:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a75c:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1a763:	48 89 ce             	mov    %rcx,%rsi
   1a766:	48 89 c7             	mov    %rax,%rdi
   1a769:	e8 12 b6 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1a76e:	84 c0                	test   %al,%al
   1a770:	74 15                	je     1a787 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x85>
	    __x = _S_right(__x);
   1a772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a776:	48 89 c7             	mov    %rax,%rdi
   1a779:	e8 62 c4 ff ff       	callq  16be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1a77e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a782:	e9 16 01 00 00       	jmpq   1a89d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x19b>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
   1a787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a78b:	48 89 c7             	mov    %rax,%rdi
   1a78e:	e8 6d be ff ff       	callq  16600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   1a793:	48 89 c2             	mov    %rax,%rdx
   1a796:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a79d:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1a7a4:	48 89 ce             	mov    %rcx,%rsi
   1a7a7:	48 89 c7             	mov    %rax,%rdi
   1a7aa:	e8 d1 b5 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1a7af:	84 c0                	test   %al,%al
   1a7b1:	74 1d                	je     1a7d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0xce>
	    __y = __x, __x = _S_left(__x);
   1a7b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a7bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7bf:	48 89 c7             	mov    %rax,%rdi
   1a7c2:	e8 69 af ff ff       	callq  15730 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   1a7c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a7cb:	e9 cd 00 00 00       	jmpq   1a89d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x19b>
	  else
	    {
	      _Link_type __xu(__x), __yu(__y);
   1a7d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a7d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a7dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	      __y = __x, __x = _S_left(__x);
   1a7e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a7e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7ec:	48 89 c7             	mov    %rax,%rdi
   1a7ef:	e8 3c af ff ff       	callq  15730 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   1a7f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      __xu = _S_right(__xu);
   1a7f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7fc:	48 89 c7             	mov    %rax,%rdi
   1a7ff:	e8 dc c3 ff ff       	callq  16be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1a804:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	      return pair<iterator,
		          iterator>(_M_lower_bound(__x, __y, __k),
				    _M_upper_bound(__xu, __yu, __k));
   1a808:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1a80f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a813:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1a817:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a81e:	48 89 c7             	mov    %rax,%rdi
   1a821:	e8 2a be ff ff       	callq  16650 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>
   1a826:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1a82a:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1a831:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a835:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1a839:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1a840:	48 89 c7             	mov    %rax,%rdi
   1a843:	e8 48 ab ff ff       	callq  15390 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>
   1a848:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1a84c:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   1a850:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   1a854:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1a85b:	48 89 ce             	mov    %rcx,%rsi
   1a85e:	48 89 c7             	mov    %rax,%rdi
   1a861:	e8 aa b0 ff ff       	callq  15910 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_@plt>
   1a866:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   1a86d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1a874:	48 89 d6             	mov    %rdx,%rsi
   1a877:	48 89 c7             	mov    %rax,%rdi
   1a87a:	e8 31 bf ff ff       	callq  167b0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>
   1a87f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1a886:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1a88d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1a894:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1a89b:	eb 76                	jmp    1a913 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x211>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    equal_range(const _Key& __k)
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();
      while (__x != 0)
   1a89d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a8a2:	0f 95 c0             	setne  %al
   1a8a5:	84 c0                	test   %al,%al
   1a8a7:	0f 85 99 fe ff ff    	jne    1a746 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x44>
		          iterator>(_M_lower_bound(__x, __y, __k),
				    _M_upper_bound(__xu, __yu, __k));
	    }
	}
      return pair<iterator, iterator>(iterator(__y),
				      iterator(__y));
   1a8ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a8b1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1a8b5:	48 89 d6             	mov    %rdx,%rsi
   1a8b8:	48 89 c7             	mov    %rax,%rdi
   1a8bb:	e8 f0 bb ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1a8c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a8c4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a8c8:	48 89 d6             	mov    %rdx,%rsi
   1a8cb:	48 89 c7             	mov    %rax,%rdi
   1a8ce:	e8 dd bb ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1a8d3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1a8d7:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   1a8db:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1a8df:	48 89 ce             	mov    %rcx,%rsi
   1a8e2:	48 89 c7             	mov    %rax,%rdi
   1a8e5:	e8 26 b0 ff ff       	callq  15910 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_@plt>
   1a8ea:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   1a8ee:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1a8f2:	48 89 d6             	mov    %rdx,%rsi
   1a8f5:	48 89 c7             	mov    %rax,%rdi
   1a8f8:	e8 b3 be ff ff       	callq  167b0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>
   1a8fd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1a901:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1a908:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1a90c:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1a913:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1a91a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    }
   1a921:	c9                   	leaveq 
   1a922:	c3                   	retq   
   1a923:	90                   	nop

000000000001a924 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E>:
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   1a924:	55                   	push   %rbp
   1a925:	48 89 e5             	mov    %rsp,%rbp
   1a928:	48 83 ec 10          	sub    $0x10,%rsp
   1a92c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a930:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   1a934:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a938:	48 89 c7             	mov    %rax,%rdi
   1a93b:	e8 20 b6 ff ff       	callq  15f60 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   1a940:	48 89 c2             	mov    %rax,%rdx
   1a943:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a947:	48 8b 12             	mov    (%rdx),%rdx
   1a94a:	48 89 10             	mov    %rdx,(%rax)
   1a94d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a951:	48 83 c0 08          	add    $0x8,%rax
   1a955:	48 89 c7             	mov    %rax,%rdi
   1a958:	e8 03 b6 ff ff       	callq  15f60 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   1a95d:	48 89 c2             	mov    %rax,%rdx
   1a960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a964:	48 8b 12             	mov    (%rdx),%rdx
   1a967:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1a96b:	c9                   	leaveq 
   1a96c:	c3                   	retq   
   1a96d:	90                   	nop

000000000001a96e <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv>:
      bool
      empty() const
      { return _M_impl._M_node_count == 0; }

      size_type
      size() const
   1a96e:	55                   	push   %rbp
   1a96f:	48 89 e5             	mov    %rsp,%rbp
   1a972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1a976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a97a:	48 8b 40 28          	mov    0x28(%rax),%rax
   1a97e:	5d                   	pop    %rbp
   1a97f:	c3                   	retq   

000000000001a980 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_ESE_>:

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // DR 130. Associative erase should return an iterator.
      iterator
      erase(const_iterator __first, const_iterator __last)
   1a980:	55                   	push   %rbp
   1a981:	48 89 e5             	mov    %rsp,%rbp
   1a984:	48 83 ec 20          	sub    $0x20,%rsp
   1a988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a98c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a990:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
      {
	_M_erase_aux(__first, __last);
   1a994:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a998:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a99c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9a0:	48 89 ce             	mov    %rcx,%rsi
   1a9a3:	48 89 c7             	mov    %rax,%rdi
   1a9a6:	e8 45 a9 ff ff       	callq  152f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_@plt>
	return __last._M_const_cast();
   1a9ab:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1a9af:	48 89 c7             	mov    %rax,%rdi
   1a9b2:	e8 69 ac ff ff       	callq  15620 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEE13_M_const_castEv@plt>
      }
   1a9b7:	c9                   	leaveq 
   1a9b8:	c3                   	retq   

000000000001a9b9 <_ZN5boost20checked_array_deleteIhEEvPT_>:
    typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
    (void) sizeof(type_must_be_complete);
    delete x;
}

template<class T> inline void checked_array_delete(T * x)
   1a9b9:	55                   	push   %rbp
   1a9ba:	48 89 e5             	mov    %rsp,%rbp
   1a9bd:	48 83 ec 10          	sub    $0x10,%rsp
   1a9c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
{
    typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
    (void) sizeof(type_must_be_complete);
    delete [] x;
   1a9c5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a9ca:	74 0c                	je     1a9d8 <_ZN5boost20checked_array_deleteIhEEvPT_+0x1f>
   1a9cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9d0:	48 89 c7             	mov    %rax,%rdi
   1a9d3:	e8 98 bc ff ff       	callq  16670 <_ZdaPv@plt>
}
   1a9d8:	c9                   	leaveq 
   1a9d9:	c3                   	retq   

000000000001a9da <_ZSt4moveIRPhEONSt16remove_referenceIT_E4typeEOS3_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return Same, moved.
  */
  template<typename _Tp>
    inline typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t)
   1a9da:	55                   	push   %rbp
   1a9db:	48 89 e5             	mov    %rsp,%rbp
   1a9de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1a9e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9e6:	5d                   	pop    %rbp
   1a9e7:	c3                   	retq   

000000000001a9e8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEC1Ev>:

      template<typename _Tp1>
        struct rebind
        { typedef allocator<_Tp1> other; };

      allocator() throw() { }
   1a9e8:	55                   	push   %rbp
   1a9e9:	48 89 e5             	mov    %rsp,%rbp
   1a9ec:	48 83 ec 10          	sub    $0x10,%rsp
   1a9f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a9f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9f8:	48 89 c7             	mov    %rax,%rdi
   1a9fb:	e8 30 c1 ff ff       	callq  16b30 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEC2Ev@plt>
   1aa00:	c9                   	leaveq 
   1aa01:	c3                   	retq   

000000000001aa02 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EE13_M_initializeEv>:
	    _M_node_count(0)
	  { _M_initialize(); }

	private:
	  void
	  _M_initialize()
   1aa02:	55                   	push   %rbp
   1aa03:	48 89 e5             	mov    %rsp,%rbp
   1aa06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  {
	    this->_M_header._M_color = _S_red;
   1aa0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa0e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
	    this->_M_header._M_parent = 0;
   1aa15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa19:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1aa20:	00 
	    this->_M_header._M_left = &this->_M_header;
   1aa21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa25:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1aa29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa2d:	48 89 50 18          	mov    %rdx,0x18(%rax)
	    this->_M_header._M_right = &this->_M_header;
   1aa31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa35:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1aa39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa3d:	48 89 50 20          	mov    %rdx,0x20(%rax)
	  }	    
   1aa41:	5d                   	pop    %rbp
   1aa42:	c3                   	retq   
   1aa43:	90                   	nop

000000000001aa44 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv>:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

      _Node_allocator&
      _M_get_Node_allocator()
   1aa44:	55                   	push   %rbp
   1aa45:	48 89 e5             	mov    %rsp,%rbp
   1aa48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Node_allocator*>(&this->_M_impl); }
   1aa4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa50:	5d                   	pop    %rbp
   1aa51:	c3                   	retq   

000000000001aa52 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEED1Ev>:
      return __x;
    }
  };

  template<typename _Val>
    struct _Rb_tree_node : public _Rb_tree_node_base
   1aa52:	55                   	push   %rbp
   1aa53:	48 89 e5             	mov    %rsp,%rbp
   1aa56:	48 83 ec 10          	sub    $0x10,%rsp
   1aa5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa62:	48 83 c0 20          	add    $0x20,%rax
   1aa66:	48 89 c7             	mov    %rax,%rdi
   1aa69:	e8 92 b4 ff ff       	callq  15f00 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEED1Ev@plt>
   1aa6e:	c9                   	leaveq 
   1aa6f:	c3                   	retq   

000000000001aa70 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE7destroyEPS9_>:
        construct(pointer __p, _Args&&... __args)
	{ ::new((void *)__p) _Tp(std::forward<_Args>(__args)...); }
#endif

      void 
      destroy(pointer __p) { __p->~_Tp(); }
   1aa70:	55                   	push   %rbp
   1aa71:	48 89 e5             	mov    %rsp,%rbp
   1aa74:	48 83 ec 10          	sub    $0x10,%rsp
   1aa78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aa80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aa84:	48 89 c7             	mov    %rax,%rdi
   1aa87:	e8 84 b3 ff ff       	callq  15e10 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEED1Ev@plt>
   1aa8c:	c9                   	leaveq 
   1aa8d:	c3                   	retq   

000000000001aa8e <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E>:
      _Link_type
      _M_get_node()
      { return _M_impl._Node_allocator::allocate(1); }

      void
      _M_put_node(_Link_type __p)
   1aa8e:	55                   	push   %rbp
   1aa8f:	48 89 e5             	mov    %rsp,%rbp
   1aa92:	48 83 ec 10          	sub    $0x10,%rsp
   1aa96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_impl._Node_allocator::deallocate(__p, 1); }
   1aa9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aaa2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aaa6:	ba 01 00 00 00       	mov    $0x1,%edx
   1aaab:	48 89 ce             	mov    %rcx,%rsi
   1aaae:	48 89 c7             	mov    %rax,%rdi
   1aab1:	e8 1a bd ff ff       	callq  167d0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE10deallocateEPS9_m@plt>
   1aab6:	c9                   	leaveq 
   1aab7:	c3                   	retq   

000000000001aab8 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv>:
	return static_cast<_Const_Link_type>
	  (this->_M_impl._M_header._M_parent);
      }

      _Link_type
      _M_end()
   1aab8:	55                   	push   %rbp
   1aab9:	48 89 e5             	mov    %rsp,%rbp
   1aabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(&this->_M_impl._M_header); }
   1aac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aac4:	48 83 c0 08          	add    $0x8,%rax
   1aac8:	5d                   	pop    %rbp
   1aac9:	c3                   	retq   

000000000001aaca <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1aaca:	55                   	push   %rbp
   1aacb:	48 89 e5             	mov    %rsp,%rbp
   1aace:	48 83 ec 30          	sub    $0x30,%rsp
   1aad2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aad6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1aada:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1aade:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    _M_lower_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   1aae2:	eb 53                	jmp    1ab37 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6d>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   1aae4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aae8:	48 89 c7             	mov    %rax,%rdi
   1aaeb:	e8 10 bb ff ff       	callq  16600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   1aaf0:	48 89 c1             	mov    %rax,%rcx
   1aaf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aaf7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1aafb:	48 89 ce             	mov    %rcx,%rsi
   1aafe:	48 89 c7             	mov    %rax,%rdi
   1ab01:	e8 7a b2 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1ab06:	83 f0 01             	xor    $0x1,%eax
   1ab09:	84 c0                	test   %al,%al
   1ab0b:	74 1a                	je     1ab27 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x5d>
	  __y = __x, __x = _S_left(__x);
   1ab0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ab11:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1ab15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ab19:	48 89 c7             	mov    %rax,%rdi
   1ab1c:	e8 0f ac ff ff       	callq  15730 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   1ab21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ab25:	eb 10                	jmp    1ab37 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6d>
	else
	  __x = _S_right(__x);
   1ab27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ab2b:	48 89 c7             	mov    %rax,%rdi
   1ab2e:	e8 ad c0 ff ff       	callq  16be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1ab33:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_lower_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   1ab37:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1ab3c:	0f 95 c0             	setne  %al
   1ab3f:	84 c0                	test   %al,%al
   1ab41:	75 a1                	jne    1aae4 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x1a>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
	  __y = __x, __x = _S_left(__x);
	else
	  __x = _S_right(__x);
      return iterator(__y);
   1ab43:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1ab47:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1ab4b:	48 89 d6             	mov    %rdx,%rsi
   1ab4e:	48 89 c7             	mov    %rax,%rdi
   1ab51:	e8 5a b9 ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1ab56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    }
   1ab5a:	c9                   	leaveq 
   1ab5b:	c3                   	retq   

000000000001ab5c <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E>:

      _Rb_tree_iterator()
      : _M_node() { }

      explicit
      _Rb_tree_iterator(_Link_type __x)
   1ab5c:	55                   	push   %rbp
   1ab5d:	48 89 e5             	mov    %rsp,%rbp
   1ab60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1ab68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1ab70:	48 89 10             	mov    %rdx,(%rax)
   1ab73:	5d                   	pop    %rbp
   1ab74:	c3                   	retq   
   1ab75:	90                   	nop

000000000001ab76 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv>:
      _Const_Base_ptr
      _M_leftmost() const
      { return this->_M_impl._M_header._M_left; }

      _Base_ptr&
      _M_rightmost()
   1ab76:	55                   	push   %rbp
   1ab77:	48 89 e5             	mov    %rsp,%rbp
   1ab7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1ab7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab82:	48 83 c0 20          	add    $0x20,%rax
   1ab86:	5d                   	pop    %rbp
   1ab87:	c3                   	retq   

000000000001ab88 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      static const_reference
      _S_value(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x)->_M_value_field; }

      static const _Key&
      _S_key(_Const_Base_ptr __x)
   1ab88:	55                   	push   %rbp
   1ab89:	48 89 e5             	mov    %rsp,%rbp
   1ab8c:	48 83 ec 20          	sub    $0x20,%rsp
   1ab90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _KeyOfValue()(_S_value(__x)); }
   1ab94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ab98:	48 89 c7             	mov    %rax,%rdi
   1ab9b:	e8 b0 ae ff ff       	callq  15a50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt18_Rb_tree_node_base@plt>
   1aba0:	48 89 c2             	mov    %rax,%rdx
   1aba3:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1aba7:	48 89 d6             	mov    %rdx,%rsi
   1abaa:	48 89 c7             	mov    %rax,%rdi
   1abad:	e8 7e af ff ff       	callq  15b30 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERKS6_@plt>
   1abb2:	c9                   	leaveq 
   1abb3:	c3                   	retq   

000000000001abb4 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_>:
  template<typename _Pair>
    struct _Select1st : public unary_function<_Pair,
					      typename _Pair::first_type>
    {
      typename _Pair::first_type&
      operator()(_Pair& __x) const
   1abb4:	55                   	push   %rbp
   1abb5:	48 89 e5             	mov    %rsp,%rbp
   1abb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1abbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   1abc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1abc4:	5d                   	pop    %rbp
   1abc5:	c3                   	retq   

000000000001abc6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_>:
           typename _Compare, typename _Alloc>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1abc6:	55                   	push   %rbp
   1abc7:	48 89 e5             	mov    %rsp,%rbp
   1abca:	53                   	push   %rbx
   1abcb:	48 83 ec 58          	sub    $0x58,%rsp
   1abcf:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1abd3:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1abd7:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1abdb:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    _M_insert_(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)
#endif
    {
      bool __insert_left = (__x != 0 || __p == _M_end()
			    || _M_impl._M_key_compare(_KeyOfValue()(__v), 
						      _S_key(__p)));
   1abdf:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1abe4:	75 4d                	jne    1ac33 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x6d>
   1abe6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1abea:	48 89 c7             	mov    %rax,%rdi
   1abed:	e8 ee ac ff ff       	callq  158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1abf2:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   1abf6:	74 3b                	je     1ac33 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x6d>
   1abf8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1abfc:	48 89 c7             	mov    %rax,%rdi
   1abff:	e8 3c bc ff ff       	callq  16840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1ac04:	48 89 c3             	mov    %rax,%rbx
   1ac07:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1ac0b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1ac0f:	48 89 d6             	mov    %rdx,%rsi
   1ac12:	48 89 c7             	mov    %rax,%rdi
   1ac15:	e8 66 bd ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1ac1a:	48 89 c1             	mov    %rax,%rcx
   1ac1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac21:	48 89 da             	mov    %rbx,%rdx
   1ac24:	48 89 ce             	mov    %rcx,%rsi
   1ac27:	48 89 c7             	mov    %rax,%rdi
   1ac2a:	e8 51 b1 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1ac2f:	84 c0                	test   %al,%al
   1ac31:	74 07                	je     1ac3a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x74>
   1ac33:	b8 01 00 00 00       	mov    $0x1,%eax
   1ac38:	eb 05                	jmp    1ac3f <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x79>
   1ac3a:	b8 00 00 00 00       	mov    $0x0,%eax
   1ac3f:	88 45 ef             	mov    %al,-0x11(%rbp)

      _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
   1ac42:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ac46:	48 89 c7             	mov    %rax,%rdi
   1ac49:	e8 82 be ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1ac4e:	48 89 c2             	mov    %rax,%rdx
   1ac51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac55:	48 89 d6             	mov    %rdx,%rsi
   1ac58:	48 89 c7             	mov    %rax,%rdi
   1ac5b:	e8 20 b3 ff ff       	callq  15f80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_create_nodeIIS6_EEEPSt13_Rb_tree_nodeIS6_EDpOT_@plt>
   1ac60:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

      _Rb_tree_insert_and_rebalance(__insert_left, __z,
   1ac64:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac68:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1ac6c:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   1ac70:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1ac74:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1ac78:	89 c7                	mov    %eax,%edi
   1ac7a:	e8 91 b7 ff ff       	callq  16410 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
				    const_cast<_Base_ptr>(__p),  
				    this->_M_impl._M_header);
      ++_M_impl._M_node_count;
   1ac7f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac83:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ac87:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ac8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ac8f:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   1ac93:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1ac97:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ac9b:	48 89 d6             	mov    %rdx,%rsi
   1ac9e:	48 89 c7             	mov    %rax,%rdi
   1aca1:	e8 0a b8 ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1aca6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    }
   1acaa:	48 83 c4 58          	add    $0x58,%rsp
   1acae:	5b                   	pop    %rbx
   1acaf:	5d                   	pop    %rbp
   1acb0:	c3                   	retq   
   1acb1:	90                   	nop

000000000001acb2 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_>:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator, bool>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1acb2:	55                   	push   %rbp
   1acb3:	48 89 e5             	mov    %rsp,%rbp
   1acb6:	53                   	push   %rbx
   1acb7:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1acbe:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   1acc5:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    _M_insert_unique(_Arg&& __v)
#else
    _M_insert_unique(const _Val& __v)
#endif
    {
      _Link_type __x = _M_begin();
   1accc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1acd3:	48 89 c7             	mov    %rax,%rdi
   1acd6:	e8 a5 be ff ff       	callq  16b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   1acdb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      _Link_type __y = _M_end();
   1acdf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ace6:	48 89 c7             	mov    %rax,%rdi
   1ace9:	e8 f2 ab ff ff       	callq  158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1acee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      bool __comp = true;
   1acf2:	c6 45 df 01          	movb   $0x1,-0x21(%rbp)
      while (__x != 0)
   1acf6:	eb 6f                	jmp    1ad67 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0xb5>
	{
	  __y = __x;
   1acf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1acfc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  __comp = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x));
   1ad00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad04:	48 89 c7             	mov    %rax,%rdi
   1ad07:	e8 f4 b8 ff ff       	callq  16600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   1ad0c:	48 89 c3             	mov    %rax,%rbx
   1ad0f:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1ad16:	48 8d 85 0f ff ff ff 	lea    -0xf1(%rbp),%rax
   1ad1d:	48 89 d6             	mov    %rdx,%rsi
   1ad20:	48 89 c7             	mov    %rax,%rdi
   1ad23:	e8 58 bc ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1ad28:	48 89 c1             	mov    %rax,%rcx
   1ad2b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ad32:	48 89 da             	mov    %rbx,%rdx
   1ad35:	48 89 ce             	mov    %rcx,%rsi
   1ad38:	48 89 c7             	mov    %rax,%rdi
   1ad3b:	e8 40 b0 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1ad40:	88 45 df             	mov    %al,-0x21(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1ad43:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
   1ad47:	74 0e                	je     1ad57 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0xa5>
   1ad49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad4d:	48 89 c7             	mov    %rax,%rdi
   1ad50:	e8 db a9 ff ff       	callq  15730 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   1ad55:	eb 0c                	jmp    1ad63 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0xb1>
   1ad57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad5b:	48 89 c7             	mov    %rax,%rdi
   1ad5e:	e8 7d be ff ff       	callq  16be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1ad63:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
#endif
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();
      bool __comp = true;
      while (__x != 0)
   1ad67:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1ad6c:	0f 95 c0             	setne  %al
   1ad6f:	84 c0                	test   %al,%al
   1ad71:	75 85                	jne    1acf8 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x46>
	{
	  __y = __x;
	  __comp = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x));
	  __x = __comp ? _S_left(__x) : _S_right(__x);
	}
      iterator __j = iterator(__y);
   1ad73:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1ad77:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1ad7e:	48 89 d6             	mov    %rdx,%rsi
   1ad81:	48 89 c7             	mov    %rax,%rdi
   1ad84:	e8 27 b7 ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
      if (__comp)
   1ad89:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
   1ad8d:	0f 84 d7 00 00 00    	je     1ae6a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x1b8>
	{
	  if (__j == begin())
   1ad93:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ad9a:	48 89 c7             	mov    %rax,%rdi
   1ad9d:	e8 ce a9 ff ff       	callq  15770 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv@plt>
   1ada2:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1ada9:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   1adb0:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1adb7:	48 89 d6             	mov    %rdx,%rsi
   1adba:	48 89 c7             	mov    %rax,%rdi
   1adbd:	e8 4e a7 ff ff       	callq  15510 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_@plt>
   1adc2:	84 c0                	test   %al,%al
   1adc4:	0f 84 91 00 00 00    	je     1ae5b <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x1a9>
	    return pair<iterator, bool>
	      (_M_insert_(__x, __y, _GLIBCXX_FORWARD(_Arg, __v)), true);
   1adca:	c6 85 5f ff ff ff 01 	movb   $0x1,-0xa1(%rbp)
   1add1:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1add8:	48 89 c7             	mov    %rax,%rdi
   1addb:	e8 f0 bc ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1ade0:	48 89 c1             	mov    %rax,%rcx
   1ade3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1ade7:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1adeb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1adf2:	48 89 c7             	mov    %rax,%rdi
   1adf5:	e8 06 b3 ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1adfa:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1ae01:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
   1ae08:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
   1ae0f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1ae16:	48 89 ce             	mov    %rcx,%rsi
   1ae19:	48 89 c7             	mov    %rax,%rdi
   1ae1c:	e8 3f a6 ff ff       	callq  15460 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_@plt>
   1ae21:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
   1ae28:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   1ae2f:	48 89 d6             	mov    %rdx,%rsi
   1ae32:	48 89 c7             	mov    %rax,%rdi
   1ae35:	e8 16 aa ff ff       	callq  15850 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>
   1ae3a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1ae41:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1ae48:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1ae4f:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1ae56:	e9 19 01 00 00       	jmpq   1af74 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x2c2>
	  else
	    --__j;
   1ae5b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1ae62:	48 89 c7             	mov    %rax,%rdi
   1ae65:	e8 06 a6 ff ff       	callq  15470 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEmmEv@plt>
	}
      if (_M_impl._M_key_compare(_S_key(__j._M_node), _KeyOfValue()(__v)))
   1ae6a:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   1ae71:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1ae78:	48 89 d6             	mov    %rdx,%rsi
   1ae7b:	48 89 c7             	mov    %rax,%rdi
   1ae7e:	e8 fd ba ff ff       	callq  16980 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERS6_@plt>
   1ae83:	48 89 c3             	mov    %rax,%rbx
   1ae86:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1ae8d:	48 89 c7             	mov    %rax,%rdi
   1ae90:	e8 ab b9 ff ff       	callq  16840 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1ae95:	48 89 c1             	mov    %rax,%rcx
   1ae98:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1ae9f:	48 89 da             	mov    %rbx,%rdx
   1aea2:	48 89 ce             	mov    %rcx,%rsi
   1aea5:	48 89 c7             	mov    %rax,%rdi
   1aea8:	e8 d3 ae ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1aead:	84 c0                	test   %al,%al
   1aeaf:	74 7c                	je     1af2d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x27b>
	return pair<iterator, bool>
	  (_M_insert_(__x, __y, _GLIBCXX_FORWARD(_Arg, __v)), true);
   1aeb1:	c6 45 9f 01          	movb   $0x1,-0x61(%rbp)
   1aeb5:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1aebc:	48 89 c7             	mov    %rax,%rdi
   1aebf:	e8 0c bc ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1aec4:	48 89 c1             	mov    %rax,%rcx
   1aec7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1aecb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1aecf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1aed6:	48 89 c7             	mov    %rax,%rdi
   1aed9:	e8 22 b2 ff ff       	callq  16100 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1aede:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1aee2:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
   1aee6:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1aeea:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1aeee:	48 89 ce             	mov    %rcx,%rsi
   1aef1:	48 89 c7             	mov    %rax,%rdi
   1aef4:	e8 67 a5 ff ff       	callq  15460 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_@plt>
   1aef9:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   1aefd:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1af04:	48 89 d6             	mov    %rdx,%rsi
   1af07:	48 89 c7             	mov    %rax,%rdi
   1af0a:	e8 41 a9 ff ff       	callq  15850 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>
   1af0f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1af16:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1af1d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1af24:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1af2b:	eb 47                	jmp    1af74 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x2c2>
      return pair<iterator, bool>(__j, false);
   1af2d:	c6 45 de 00          	movb   $0x0,-0x22(%rbp)
   1af31:	48 8d 55 de          	lea    -0x22(%rbp),%rdx
   1af35:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
   1af3c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1af40:	48 89 ce             	mov    %rcx,%rsi
   1af43:	48 89 c7             	mov    %rax,%rdi
   1af46:	e8 35 a8 ff ff       	callq  15780 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IRS7_bvEEOT_OT0_@plt>
   1af4b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1af4f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1af53:	48 89 d6             	mov    %rdx,%rsi
   1af56:	48 89 c7             	mov    %rax,%rdi
   1af59:	e8 f2 a8 ff ff       	callq  15850 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>
   1af5e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1af62:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1af69:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1af6d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1af74:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1af7b:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
    }
   1af81:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   1af88:	5b                   	pop    %rbx
   1af89:	5d                   	pop    %rbp
   1af8a:	c3                   	retq   
   1af8b:	90                   	nop

000000000001af8c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv>:
      _Const_Base_ptr
      _M_root() const
      { return this->_M_impl._M_header._M_parent; }

      _Base_ptr&
      _M_leftmost()
   1af8c:	55                   	push   %rbp
   1af8d:	48 89 e5             	mov    %rsp,%rbp
   1af90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   1af94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af98:	48 83 c0 18          	add    $0x18,%rax
   1af9c:	5d                   	pop    %rbp
   1af9d:	c3                   	retq   

000000000001af9e <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEmmEv>:
	_M_node = _Rb_tree_increment(_M_node);
	return __tmp;
      }

      _Self&
      operator--()
   1af9e:	55                   	push   %rbp
   1af9f:	48 89 e5             	mov    %rsp,%rbp
   1afa2:	48 83 ec 10          	sub    $0x10,%rsp
   1afa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_decrement(_M_node);
   1afaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afae:	48 8b 00             	mov    (%rax),%rax
   1afb1:	48 89 c7             	mov    %rax,%rdi
   1afb4:	e8 a7 a3 ff ff       	callq  15360 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base@plt>
   1afb9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1afbd:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1afc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1afc4:	c9                   	leaveq 
   1afc5:	c3                   	retq   

000000000001afc6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      static _Link_type
      _S_right(_Base_ptr __x)
      { return static_cast<_Link_type>(__x->_M_right); }

      static _Const_Link_type
      _S_right(_Const_Base_ptr __x)
   1afc6:	55                   	push   %rbp
   1afc7:	48 89 e5             	mov    %rsp,%rbp
   1afca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(__x->_M_right); }
   1afce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afd2:	48 8b 40 18          	mov    0x18(%rax),%rax
   1afd6:	5d                   	pop    %rbp
   1afd7:	c3                   	retq   

000000000001afd8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEppEv>:
      operator->() const
      { return std::__addressof(static_cast<_Link_type>
				(_M_node)->_M_value_field); }

      _Self&
      operator++()
   1afd8:	55                   	push   %rbp
   1afd9:	48 89 e5             	mov    %rsp,%rbp
   1afdc:	48 83 ec 10          	sub    $0x10,%rsp
   1afe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_increment(_M_node);
   1afe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afe8:	48 8b 00             	mov    (%rax),%rax
   1afeb:	48 89 c7             	mov    %rax,%rdi
   1afee:	e8 1d af ff ff       	callq  15f10 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
   1aff3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aff7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1affa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1affe:	c9                   	leaveq 
   1afff:	c3                   	retq   

000000000001b000 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEE13_M_const_castEv>:

      _Rb_tree_const_iterator(const iterator& __it)
      : _M_node(__it._M_node) { }

      iterator
      _M_const_cast() const
   1b000:	55                   	push   %rbp
   1b001:	48 89 e5             	mov    %rsp,%rbp
   1b004:	48 83 ec 20          	sub    $0x20,%rsp
   1b008:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(static_cast<typename iterator::_Link_type>
			(const_cast<typename iterator::_Base_ptr>(_M_node))); }
   1b00c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b010:	48 8b 10             	mov    (%rax),%rdx
   1b013:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1b017:	48 89 d6             	mov    %rdx,%rsi
   1b01a:	48 89 c7             	mov    %rax,%rdi
   1b01d:	e8 8e b4 ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1b022:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b026:	c9                   	leaveq 
   1b027:	c3                   	retq   

000000000001b028 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>:
      static const_reference
      _S_value(_Const_Link_type __x)
      { return __x->_M_value_field; }

      static const _Key&
      _S_key(_Const_Link_type __x)
   1b028:	55                   	push   %rbp
   1b029:	48 89 e5             	mov    %rsp,%rbp
   1b02c:	48 83 ec 20          	sub    $0x20,%rsp
   1b030:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _KeyOfValue()(_S_value(__x)); }
   1b034:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b038:	48 89 c7             	mov    %rax,%rdi
   1b03b:	e8 30 b4 ff ff       	callq  16470 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt13_Rb_tree_nodeIS6_E@plt>
   1b040:	48 89 c2             	mov    %rax,%rdx
   1b043:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1b047:	48 89 d6             	mov    %rdx,%rsi
   1b04a:	48 89 c7             	mov    %rax,%rdi
   1b04d:	e8 de aa ff ff       	callq  15b30 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERKS6_@plt>
   1b052:	c9                   	leaveq 
   1b053:	c3                   	retq   

000000000001b054 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1b054:	55                   	push   %rbp
   1b055:	48 89 e5             	mov    %rsp,%rbp
   1b058:	48 83 ec 30          	sub    $0x30,%rsp
   1b05c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b060:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b064:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1b068:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    _M_upper_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   1b06c:	eb 50                	jmp    1b0be <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6a>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
   1b06e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b072:	48 89 c7             	mov    %rax,%rdi
   1b075:	e8 86 b5 ff ff       	callq  16600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   1b07a:	48 89 c2             	mov    %rax,%rdx
   1b07d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b081:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1b085:	48 89 ce             	mov    %rcx,%rsi
   1b088:	48 89 c7             	mov    %rax,%rdi
   1b08b:	e8 f0 ac ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1b090:	84 c0                	test   %al,%al
   1b092:	74 1a                	je     1b0ae <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x5a>
	  __y = __x, __x = _S_left(__x);
   1b094:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b098:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1b09c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b0a0:	48 89 c7             	mov    %rax,%rdi
   1b0a3:	e8 88 a6 ff ff       	callq  15730 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   1b0a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1b0ac:	eb 10                	jmp    1b0be <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6a>
	else
	  __x = _S_right(__x);
   1b0ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b0b2:	48 89 c7             	mov    %rax,%rdi
   1b0b5:	e8 26 bb ff ff       	callq  16be0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1b0ba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_upper_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   1b0be:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1b0c3:	0f 95 c0             	setne  %al
   1b0c6:	84 c0                	test   %al,%al
   1b0c8:	75 a4                	jne    1b06e <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x1a>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
	  __y = __x, __x = _S_left(__x);
	else
	  __x = _S_right(__x);
      return iterator(__y);
   1b0ca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b0ce:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1b0d2:	48 89 d6             	mov    %rdx,%rsi
   1b0d5:	48 89 c7             	mov    %rax,%rdi
   1b0d8:	e8 d3 b3 ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1b0dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    }
   1b0e1:	c9                   	leaveq 
   1b0e2:	c3                   	retq   
   1b0e3:	90                   	nop

000000000001b0e4 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   1b0e4:	55                   	push   %rbp
   1b0e5:	48 89 e5             	mov    %rsp,%rbp
   1b0e8:	48 83 ec 20          	sub    $0x20,%rsp
   1b0ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b0f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b0f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1b0f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b0fc:	48 89 c7             	mov    %rax,%rdi
   1b0ff:	e8 5c ae ff ff       	callq  15f60 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   1b104:	48 89 c2             	mov    %rax,%rdx
   1b107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b10b:	48 8b 12             	mov    (%rdx),%rdx
   1b10e:	48 89 10             	mov    %rdx,(%rax)
   1b111:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b115:	48 89 c7             	mov    %rax,%rdi
   1b118:	e8 43 ae ff ff       	callq  15f60 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   1b11d:	48 89 c2             	mov    %rax,%rdx
   1b120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b124:	48 8b 12             	mov    (%rdx),%rdx
   1b127:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1b12b:	c9                   	leaveq 
   1b12c:	c3                   	retq   

000000000001b12d <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1b12d:	55                   	push   %rbp
   1b12e:	48 89 e5             	mov    %rsp,%rbp
   1b131:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1b135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b139:	5d                   	pop    %rbp
   1b13a:	c3                   	retq   
   1b13b:	90                   	nop

000000000001b13c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1b13c:	55                   	push   %rbp
   1b13d:	48 89 e5             	mov    %rsp,%rbp
   1b140:	48 83 ec 60          	sub    $0x60,%rsp
   1b144:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1b148:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1b14c:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    _M_erase_aux(const_iterator __first, const_iterator __last)
    {
      if (__first == begin() && __last == end())
   1b150:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b154:	48 89 c7             	mov    %rax,%rdi
   1b157:	e8 14 a6 ff ff       	callq  15770 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv@plt>
   1b15c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1b160:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1b164:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1b168:	48 89 d6             	mov    %rdx,%rsi
   1b16b:	48 89 c7             	mov    %rax,%rdi
   1b16e:	e8 3d b0 ff ff       	callq  161b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   1b173:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1b177:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1b17b:	48 89 d6             	mov    %rdx,%rsi
   1b17e:	48 89 c7             	mov    %rax,%rdi
   1b181:	e8 9a a2 ff ff       	callq  15420 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_@plt>
   1b186:	84 c0                	test   %al,%al
   1b188:	74 41                	je     1b1cb <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0x8f>
   1b18a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b18e:	48 89 c7             	mov    %rax,%rdi
   1b191:	e8 ea a0 ff ff       	callq  15280 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv@plt>
   1b196:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b19a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1b19e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1b1a2:	48 89 d6             	mov    %rdx,%rsi
   1b1a5:	48 89 c7             	mov    %rax,%rdi
   1b1a8:	e8 03 b0 ff ff       	callq  161b0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   1b1ad:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1b1b1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1b1b5:	48 89 d6             	mov    %rdx,%rsi
   1b1b8:	48 89 c7             	mov    %rax,%rdi
   1b1bb:	e8 60 a2 ff ff       	callq  15420 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_@plt>
   1b1c0:	84 c0                	test   %al,%al
   1b1c2:	74 07                	je     1b1cb <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0x8f>
   1b1c4:	b8 01 00 00 00       	mov    $0x1,%eax
   1b1c9:	eb 05                	jmp    1b1d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0x94>
   1b1cb:	b8 00 00 00 00       	mov    $0x0,%eax
   1b1d0:	84 c0                	test   %al,%al
   1b1d2:	74 31                	je     1b205 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0xc9>
	clear();
   1b1d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b1d8:	48 89 c7             	mov    %rax,%rdi
   1b1db:	e8 10 a8 ff ff       	callq  159f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5clearEv@plt>
   1b1e0:	eb 3a                	jmp    1b21c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0xe0>
      else
	while (__first != __last)
	  erase(__first++);
   1b1e2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1b1e6:	be 00 00 00 00       	mov    $0x0,%esi
   1b1eb:	48 89 c7             	mov    %rax,%rdi
   1b1ee:	e8 2d a1 ff ff       	callq  15320 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEppEi@plt>
   1b1f3:	48 89 c2             	mov    %rax,%rdx
   1b1f6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b1fa:	48 89 d6             	mov    %rdx,%rsi
   1b1fd:	48 89 c7             	mov    %rax,%rdi
   1b200:	e8 1b b3 ff ff       	callq  16520 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_E@plt>
    _M_erase_aux(const_iterator __first, const_iterator __last)
    {
      if (__first == begin() && __last == end())
	clear();
      else
	while (__first != __last)
   1b205:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1b209:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1b20d:	48 89 d6             	mov    %rdx,%rsi
   1b210:	48 89 c7             	mov    %rax,%rdi
   1b213:	e8 48 b5 ff ff       	callq  16760 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEneERKS7_@plt>
   1b218:	84 c0                	test   %al,%al
   1b21a:	75 c6                	jne    1b1e2 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0xa6>
	  erase(__first++);
    }
   1b21c:	c9                   	leaveq 
   1b21d:	c3                   	retq   

000000000001b21e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEC1Ev>:

      template<typename _Tp1>
        struct rebind
        { typedef new_allocator<_Tp1> other; };

      new_allocator() throw() { }
   1b21e:	55                   	push   %rbp
   1b21f:	48 89 e5             	mov    %rsp,%rbp
   1b222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b226:	5d                   	pop    %rbp
   1b227:	c3                   	retq   

000000000001b228 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE10deallocateEPS9_m>:
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(pointer __p, size_type)
   1b228:	55                   	push   %rbp
   1b229:	48 89 e5             	mov    %rsp,%rbp
   1b22c:	48 83 ec 20          	sub    $0x20,%rsp
   1b230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b234:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b238:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { ::operator delete(__p); }
   1b23c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b240:	48 89 c7             	mov    %rax,%rdi
   1b243:	e8 a8 a3 ff ff       	callq  155f0 <_ZdlPv@plt>
   1b248:	c9                   	leaveq 
   1b249:	c3                   	retq   

000000000001b24a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt18_Rb_tree_node_base>:
      static _Const_Link_type
      _S_right(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x->_M_right); }

      static const_reference
      _S_value(_Const_Base_ptr __x)
   1b24a:	55                   	push   %rbp
   1b24b:	48 89 e5             	mov    %rsp,%rbp
   1b24e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(__x)->_M_value_field; }
   1b252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b256:	48 83 c0 20          	add    $0x20,%rax
   1b25a:	5d                   	pop    %rbp
   1b25b:	c3                   	retq   

000000000001b25c <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEclERKS6_>:

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   1b25c:	55                   	push   %rbp
   1b25d:	48 89 e5             	mov    %rsp,%rbp
   1b260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b264:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   1b268:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b26c:	5d                   	pop    %rbp
   1b26d:	c3                   	retq   

000000000001b26e <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_create_nodeIIS6_EEEPSt13_Rb_tree_nodeIS6_EDpOT_>:
	_M_put_node(__p);
      }
#else
      template<typename... _Args>
        _Link_type
        _M_create_node(_Args&&... __args)
   1b26e:	55                   	push   %rbp
   1b26f:	48 89 e5             	mov    %rsp,%rbp
   1b272:	53                   	push   %rbx
   1b273:	48 83 ec 28          	sub    $0x28,%rsp
   1b277:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b27b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	{
	  _Link_type __tmp = _M_get_node();
   1b27f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b283:	48 89 c7             	mov    %rax,%rdi
   1b286:	e8 35 a4 ff ff       	callq  156c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_get_nodeEv@plt>
   1b28b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  __try
	    {
	      _M_get_Node_allocator().construct(__tmp,
   1b28f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b293:	48 89 c7             	mov    %rax,%rdi
   1b296:	e8 35 b8 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1b29b:	48 89 c3             	mov    %rax,%rbx
   1b29e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b2a2:	48 89 c7             	mov    %rax,%rdi
   1b2a5:	e8 06 a2 ff ff       	callq  154b0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv@plt>
   1b2aa:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1b2ae:	48 89 da             	mov    %rbx,%rdx
   1b2b1:	48 89 ce             	mov    %rcx,%rsi
   1b2b4:	48 89 c7             	mov    %rax,%rdi
   1b2b7:	e8 44 a2 ff ff       	callq  15500 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_@plt>
	  __catch(...)
	    {
	      _M_put_node(__tmp);
	      __throw_exception_again;
	    }
	  return __tmp;
   1b2bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1b2c0:	48 83 c4 28          	add    $0x28,%rsp
   1b2c4:	5b                   	pop    %rbx
   1b2c5:	5d                   	pop    %rbp
   1b2c6:	c3                   	retq   
   1b2c7:	48 89 c3             	mov    %rax,%rbx
	  __try
	    {
	      _M_get_Node_allocator().construct(__tmp,
					     std::forward<_Args>(__args)...);
	    }
	  __catch(...)
   1b2ca:	e8 51 b5 ff ff       	callq  16820 <__cxa_end_catch@plt>
   1b2cf:	48 89 d8             	mov    %rbx,%rax
   1b2d2:	48 89 c7             	mov    %rax,%rdi
   1b2d5:	e8 d6 b7 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1b2da:	48 89 c7             	mov    %rax,%rdi
   1b2dd:	e8 3e b6 ff ff       	callq  16920 <__cxa_begin_catch@plt>
	    {
	      _M_put_node(__tmp);
   1b2e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b2e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b2ea:	48 89 d6             	mov    %rdx,%rsi
   1b2ed:	48 89 c7             	mov    %rax,%rdi
   1b2f0:	e8 ab ad ff ff       	callq  160a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
	      __throw_exception_again;
   1b2f5:	e8 46 a4 ff ff       	callq  15740 <__cxa_rethrow@plt>

000000000001b2fa <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv>:
      _Compare
      key_comp() const
      { return _M_impl._M_key_compare; }

      iterator
      begin()
   1b2fa:	55                   	push   %rbp
   1b2fb:	48 89 e5             	mov    %rsp,%rbp
   1b2fe:	48 83 ec 20          	sub    $0x20,%rsp
   1b302:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { 
	return iterator(static_cast<_Link_type>
			(this->_M_impl._M_header._M_left));
   1b306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b30a:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1b30e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1b312:	48 89 d6             	mov    %rdx,%rsi
   1b315:	48 89 c7             	mov    %rax,%rdi
   1b318:	e8 93 b1 ff ff       	callq  164b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1b31d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
   1b321:	c9                   	leaveq 
   1b322:	c3                   	retq   
   1b323:	90                   	nop

000000000001b324 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   1b324:	55                   	push   %rbp
   1b325:	48 89 e5             	mov    %rsp,%rbp
   1b328:	48 83 ec 20          	sub    $0x20,%rsp
   1b32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b330:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b334:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1b338:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b33c:	48 89 c7             	mov    %rax,%rdi
   1b33f:	e8 1c ac ff ff       	callq  15f60 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   1b344:	48 89 c2             	mov    %rax,%rdx
   1b347:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b34b:	48 8b 12             	mov    (%rdx),%rdx
   1b34e:	48 89 10             	mov    %rdx,(%rax)
   1b351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b355:	48 89 c7             	mov    %rax,%rdi
   1b358:	e8 03 a2 ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   1b35d:	0f b6 10             	movzbl (%rax),%edx
   1b360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b364:	88 50 08             	mov    %dl,0x8(%rax)
   1b367:	c9                   	leaveq 
   1b368:	c3                   	retq   
   1b369:	90                   	nop

000000000001b36a <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E>:

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   1b36a:	55                   	push   %rbp
   1b36b:	48 89 e5             	mov    %rsp,%rbp
   1b36e:	48 83 ec 10          	sub    $0x10,%rsp
   1b372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b376:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   1b37a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b37e:	48 89 c7             	mov    %rax,%rdi
   1b381:	e8 da ab ff ff       	callq  15f60 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   1b386:	48 89 c2             	mov    %rax,%rdx
   1b389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b38d:	48 8b 12             	mov    (%rdx),%rdx
   1b390:	48 89 10             	mov    %rdx,(%rax)
   1b393:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b397:	48 83 c0 08          	add    $0x8,%rax
   1b39b:	48 89 c7             	mov    %rax,%rdi
   1b39e:	e8 bd a1 ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   1b3a3:	0f b6 10             	movzbl (%rax),%edx
   1b3a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b3aa:	88 50 08             	mov    %dl,0x8(%rax)
   1b3ad:	c9                   	leaveq 
   1b3ae:	c3                   	retq   
   1b3af:	90                   	nop

000000000001b3b0 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEmmEv>:
	_M_node = _Rb_tree_increment(_M_node);
	return __tmp;
      }

      _Self&
      operator--()
   1b3b0:	55                   	push   %rbp
   1b3b1:	48 89 e5             	mov    %rsp,%rbp
   1b3b4:	48 83 ec 10          	sub    $0x10,%rsp
   1b3b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_decrement(_M_node);
   1b3bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b3c0:	48 8b 00             	mov    (%rax),%rax
   1b3c3:	48 89 c7             	mov    %rax,%rdi
   1b3c6:	e8 d5 a4 ff ff       	callq  158a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   1b3cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b3cf:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1b3d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1b3d6:	c9                   	leaveq 
   1b3d7:	c3                   	retq   

000000000001b3d8 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEbEC1IRS7_bvEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   1b3d8:	55                   	push   %rbp
   1b3d9:	48 89 e5             	mov    %rsp,%rbp
   1b3dc:	48 83 ec 20          	sub    $0x20,%rsp
   1b3e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b3e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b3e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1b3ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b3f0:	48 89 c7             	mov    %rax,%rdi
   1b3f3:	e8 78 a2 ff ff       	callq  15670 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceISA_E4typeE@plt>
   1b3f8:	48 89 c2             	mov    %rax,%rdx
   1b3fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b3ff:	48 8b 12             	mov    (%rdx),%rdx
   1b402:	48 89 10             	mov    %rdx,(%rax)
   1b405:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b409:	48 89 c7             	mov    %rax,%rdi
   1b40c:	e8 4f a1 ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   1b411:	0f b6 10             	movzbl (%rax),%edx
   1b414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b418:	88 50 08             	mov    %dl,0x8(%rax)
   1b41b:	c9                   	leaveq 
   1b41c:	c3                   	retq   

000000000001b41d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt13_Rb_tree_nodeIS6_E>:
      _Const_Link_type
      _M_end() const
      { return static_cast<_Const_Link_type>(&this->_M_impl._M_header); }

      static const_reference
      _S_value(_Const_Link_type __x)
   1b41d:	55                   	push   %rbp
   1b41e:	48 89 e5             	mov    %rsp,%rbp
   1b421:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __x->_M_value_field; }
   1b425:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b429:	48 83 c0 20          	add    $0x20,%rax
   1b42d:	5d                   	pop    %rbp
   1b42e:	c3                   	retq   
   1b42f:	90                   	nop

000000000001b430 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEeqERKS7_>:
	_M_node = _Rb_tree_decrement(_M_node);
	return __tmp;
      }

      bool
      operator==(const _Self& __x) const
   1b430:	55                   	push   %rbp
   1b431:	48 89 e5             	mov    %rsp,%rbp
   1b434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b438:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node == __x._M_node; }
   1b43c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b440:	48 8b 10             	mov    (%rax),%rdx
   1b443:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b447:	48 8b 00             	mov    (%rax),%rax
   1b44a:	48 39 c2             	cmp    %rax,%rdx
   1b44d:	0f 94 c0             	sete   %al
   1b450:	5d                   	pop    %rbp
   1b451:	c3                   	retq   

000000000001b452 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5clearEv>:
#endif
      void
      erase(const key_type* __first, const key_type* __last);

      void
      clear()
   1b452:	55                   	push   %rbp
   1b453:	48 89 e5             	mov    %rsp,%rbp
   1b456:	53                   	push   %rbx
   1b457:	48 83 ec 18          	sub    $0x18,%rsp
   1b45b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
        _M_erase(_M_begin());
   1b45f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b463:	48 89 c7             	mov    %rax,%rdi
   1b466:	e8 15 b7 ff ff       	callq  16b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   1b46b:	48 89 c2             	mov    %rax,%rdx
   1b46e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b472:	48 89 d6             	mov    %rdx,%rsi
   1b475:	48 89 c7             	mov    %rax,%rdi
   1b478:	e8 a3 a3 ff ff       	callq  15820 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>
        _M_leftmost() = _M_end();
   1b47d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b481:	48 89 c7             	mov    %rax,%rdi
   1b484:	e8 a7 aa ff ff       	callq  15f30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   1b489:	48 89 c3             	mov    %rax,%rbx
   1b48c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b490:	48 89 c7             	mov    %rax,%rdi
   1b493:	e8 48 a4 ff ff       	callq  158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1b498:	48 89 03             	mov    %rax,(%rbx)
        _M_root() = 0;
   1b49b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b49f:	48 89 c7             	mov    %rax,%rdi
   1b4a2:	e8 59 a1 ff ff       	callq  15600 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_M_rootEv@plt>
   1b4a7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
        _M_rightmost() = _M_end();
   1b4ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b4b2:	48 89 c7             	mov    %rax,%rdi
   1b4b5:	e8 c6 a7 ff ff       	callq  15c80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1b4ba:	48 89 c3             	mov    %rax,%rbx
   1b4bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b4c1:	48 89 c7             	mov    %rax,%rdi
   1b4c4:	e8 17 a4 ff ff       	callq  158e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1b4c9:	48 89 03             	mov    %rax,(%rbx)
        _M_impl._M_node_count = 0;
   1b4cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b4d0:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1b4d7:	00 
      }
   1b4d8:	48 83 c4 18          	add    $0x18,%rsp
   1b4dc:	5b                   	pop    %rbx
   1b4dd:	5d                   	pop    %rbp
   1b4de:	c3                   	retq   
   1b4df:	90                   	nop

000000000001b4e0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEneERKS7_>:
      bool
      operator==(const _Self& __x) const
      { return _M_node == __x._M_node; }

      bool
      operator!=(const _Self& __x) const
   1b4e0:	55                   	push   %rbp
   1b4e1:	48 89 e5             	mov    %rsp,%rbp
   1b4e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b4e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node != __x._M_node; }
   1b4ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b4f0:	48 8b 10             	mov    (%rax),%rdx
   1b4f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b4f7:	48 8b 00             	mov    (%rax),%rax
   1b4fa:	48 39 c2             	cmp    %rax,%rdx
   1b4fd:	0f 95 c0             	setne  %al
   1b500:	5d                   	pop    %rbp
   1b501:	c3                   	retq   

000000000001b502 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEppEi>:
	_M_node = _Rb_tree_increment(_M_node);
	return *this;
      }

      _Self
      operator++(int)
   1b502:	55                   	push   %rbp
   1b503:	48 89 e5             	mov    %rsp,%rbp
   1b506:	48 83 ec 20          	sub    $0x20,%rsp
   1b50a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b50e:	89 75 e4             	mov    %esi,-0x1c(%rbp)
      {
	_Self __tmp = *this;
   1b511:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b515:	48 8b 00             	mov    (%rax),%rax
   1b518:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   1b51c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b520:	48 8b 00             	mov    (%rax),%rax
   1b523:	48 89 c7             	mov    %rax,%rdi
   1b526:	e8 e5 a9 ff ff       	callq  15f10 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
   1b52b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b52f:	48 89 02             	mov    %rax,(%rdx)
	return __tmp;
   1b532:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
   1b536:	c9                   	leaveq 
   1b537:	c3                   	retq   

000000000001b538 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_E>:
    public:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // DR 130. Associative erase should return an iterator.
      iterator
      erase(const_iterator __position)
   1b538:	55                   	push   %rbp
   1b539:	48 89 e5             	mov    %rsp,%rbp
   1b53c:	48 83 ec 20          	sub    $0x20,%rsp
   1b540:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b544:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	const_iterator __result = __position;
   1b548:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b54c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	++__result;
   1b550:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1b554:	48 89 c7             	mov    %rax,%rdi
   1b557:	e8 d4 a3 ff ff       	callq  15930 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEppEv@plt>
	_M_erase_aux(__position);
   1b55c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b560:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b564:	48 89 d6             	mov    %rdx,%rsi
   1b567:	48 89 c7             	mov    %rax,%rdi
   1b56a:	e8 31 a9 ff ff       	callq  15ea0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_E@plt>
	return __result._M_const_cast();
   1b56f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1b573:	48 89 c7             	mov    %rax,%rdi
   1b576:	e8 a5 a0 ff ff       	callq  15620 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEE13_M_const_castEv@plt>
      }
   1b57b:	c9                   	leaveq 
   1b57c:	c3                   	retq   
   1b57d:	90                   	nop

000000000001b57e <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_get_nodeEv>:
      get_allocator() const
      { return allocator_type(_M_get_Node_allocator()); }

    protected:
      _Link_type
      _M_get_node()
   1b57e:	55                   	push   %rbp
   1b57f:	48 89 e5             	mov    %rsp,%rbp
   1b582:	48 83 ec 10          	sub    $0x10,%rsp
   1b586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._Node_allocator::allocate(1); }
   1b58a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b58e:	ba 00 00 00 00       	mov    $0x0,%edx
   1b593:	be 01 00 00 00       	mov    $0x1,%esi
   1b598:	48 89 c7             	mov    %rax,%rdi
   1b59b:	e8 d0 9c ff ff       	callq  15270 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE8allocateEmPKv@plt>
   1b5a0:	c9                   	leaveq 
   1b5a1:	c3                   	retq   

000000000001b5a2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_>:
      { ::new((void *)__p) _Tp(__val); }

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename... _Args>
        void
        construct(pointer __p, _Args&&... __args)
   1b5a2:	55                   	push   %rbp
   1b5a3:	48 89 e5             	mov    %rsp,%rbp
   1b5a6:	41 55                	push   %r13
   1b5a8:	41 54                	push   %r12
   1b5aa:	53                   	push   %rbx
   1b5ab:	48 83 ec 28          	sub    $0x28,%rsp
   1b5af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b5b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1b5b7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	{ ::new((void *)__p) _Tp(std::forward<_Args>(__args)...); }
   1b5bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b5bf:	48 89 c7             	mov    %rax,%rdi
   1b5c2:	e8 09 b5 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1b5c7:	49 89 c5             	mov    %rax,%r13
   1b5ca:	4c 8b 65 d0          	mov    -0x30(%rbp),%r12
   1b5ce:	4c 89 e6             	mov    %r12,%rsi
   1b5d1:	bf a8 00 00 00       	mov    $0xa8,%edi
   1b5d6:	e8 b5 a3 ff ff       	callq  15990 <_ZnwmPv@plt>
   1b5db:	48 89 c3             	mov    %rax,%rbx
   1b5de:	48 85 db             	test   %rbx,%rbx
   1b5e1:	74 26                	je     1b609 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_+0x67>
   1b5e3:	4c 89 ee             	mov    %r13,%rsi
   1b5e6:	48 89 df             	mov    %rbx,%rdi
   1b5e9:	e8 12 af ff ff       	callq  16500 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1IIS6_EEEDpOT_@plt>
   1b5ee:	eb 19                	jmp    1b609 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_+0x67>
   1b5f0:	49 89 c5             	mov    %rax,%r13
   1b5f3:	4c 89 e6             	mov    %r12,%rsi
   1b5f6:	48 89 df             	mov    %rbx,%rdi
   1b5f9:	e8 12 b4 ff ff       	callq  16a10 <_ZdlPvS_@plt>
   1b5fe:	4c 89 e8             	mov    %r13,%rax
   1b601:	48 89 c7             	mov    %rax,%rdi
   1b604:	e8 a7 b4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1b609:	48 83 c4 28          	add    $0x28,%rsp
   1b60d:	5b                   	pop    %rbx
   1b60e:	41 5c                	pop    %r12
   1b610:	41 5d                	pop    %r13
   1b612:	5d                   	pop    %rbp
   1b613:	c3                   	retq   

000000000001b614 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1b614:	55                   	push   %rbp
   1b615:	48 89 e5             	mov    %rsp,%rbp
   1b618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1b61c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b620:	5d                   	pop    %rbp
   1b621:	c3                   	retq   

000000000001b622 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEEOT_RNSt16remove_referenceISA_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1b622:	55                   	push   %rbp
   1b623:	48 89 e5             	mov    %rsp,%rbp
   1b626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1b62a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b62e:	5d                   	pop    %rbp
   1b62f:	c3                   	retq   

000000000001b630 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_M_rootEv>:

      _Rb_tree_impl<_Compare> _M_impl;

    protected:
      _Base_ptr&
      _M_root()
   1b630:	55                   	push   %rbp
   1b631:	48 89 e5             	mov    %rsp,%rbp
   1b634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_parent; }
   1b638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b63c:	48 83 c0 10          	add    $0x10,%rax
   1b640:	5d                   	pop    %rbp
   1b641:	c3                   	retq   

000000000001b642 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1b642:	55                   	push   %rbp
   1b643:	48 89 e5             	mov    %rsp,%rbp
   1b646:	48 83 ec 20          	sub    $0x20,%rsp
   1b64a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b64e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase_aux(const_iterator __position)
    {
      _Link_type __y =
	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
				(const_cast<_Base_ptr>(__position._M_node),
				 this->_M_impl._M_header));
   1b652:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b656:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1b65a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b65e:	48 89 d6             	mov    %rdx,%rsi
   1b661:	48 89 c7             	mov    %rax,%rdi
   1b664:	e8 37 ae ff ff       	callq  164a0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>
   1b669:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_destroy_node(__y);
   1b66d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b671:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b675:	48 89 d6             	mov    %rdx,%rsi
   1b678:	48 89 c7             	mov    %rax,%rdi
   1b67b:	e8 00 a5 ff ff       	callq  15b80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
      --_M_impl._M_node_count;
   1b680:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b684:	48 8b 40 28          	mov    0x28(%rax),%rax
   1b688:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1b68c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b690:	48 89 50 28          	mov    %rdx,0x28(%rax)
    }
   1b694:	c9                   	leaveq 
   1b695:	c3                   	retq   

000000000001b696 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE8allocateEmPKv>:
      address(const_reference __x) const { return std::__addressof(__x); }

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      pointer
      allocate(size_type __n, const void* = 0)
   1b696:	55                   	push   %rbp
   1b697:	48 89 e5             	mov    %rsp,%rbp
   1b69a:	48 83 ec 20          	sub    $0x20,%rsp
   1b69e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b6a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b6a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { 
	if (__n > this->max_size())
   1b6aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6ae:	48 89 c7             	mov    %rax,%rdi
   1b6b1:	e8 7a 9f ff ff       	callq  15630 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE8max_sizeEv@plt>
   1b6b6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b6ba:	0f 92 c0             	setb   %al
   1b6bd:	84 c0                	test   %al,%al
   1b6bf:	74 05                	je     1b6c6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE8allocateEmPKv+0x30>
	  std::__throw_bad_alloc();
   1b6c1:	e8 8a b1 ff ff       	callq  16850 <_ZSt17__throw_bad_allocv@plt>

	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
   1b6c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b6ca:	48 89 d0             	mov    %rdx,%rax
   1b6cd:	48 c1 e0 02          	shl    $0x2,%rax
   1b6d1:	48 01 d0             	add    %rdx,%rax
   1b6d4:	48 c1 e0 02          	shl    $0x2,%rax
   1b6d8:	48 01 d0             	add    %rdx,%rax
   1b6db:	48 c1 e0 03          	shl    $0x3,%rax
   1b6df:	48 89 c7             	mov    %rax,%rdi
   1b6e2:	e8 a9 b3 ff ff       	callq  16a90 <_Znwm@plt>
      }
   1b6e7:	c9                   	leaveq 
   1b6e8:	c3                   	retq   
   1b6e9:	90                   	nop

000000000001b6ea <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEC1IIS6_EEEDpOT_>:
      typedef _Rb_tree_node<_Val>* _Link_type;
      _Val _M_value_field;

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename... _Args>
        _Rb_tree_node(_Args&&... __args)
   1b6ea:	55                   	push   %rbp
   1b6eb:	48 89 e5             	mov    %rsp,%rbp
   1b6ee:	48 83 ec 10          	sub    $0x10,%rsp
   1b6f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b6f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Rb_tree_node_base(),
	  _M_value_field(std::forward<_Args>(__args)...) { }
   1b6fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6fe:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1b704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b708:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1b70f:	00 
   1b710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b714:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1b71b:	00 
   1b71c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b720:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1b727:	00 
   1b728:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b72c:	48 89 c7             	mov    %rax,%rdi
   1b72f:	e8 9c b3 ff ff       	callq  16ad0 <_ZSt7forwardISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1b734:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b738:	48 83 c2 20          	add    $0x20,%rdx
   1b73c:	48 89 c6             	mov    %rax,%rsi
   1b73f:	48 89 d7             	mov    %rdx,%rdi
   1b742:	e8 59 9d ff ff       	callq  154a0 <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEC1IS0_S4_EEOS_IT_T0_E@plt>
   1b747:	c9                   	leaveq 
   1b748:	c3                   	retq   
   1b749:	90                   	nop

000000000001b74a <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEEE8max_sizeEv>:
      void
      deallocate(pointer __p, size_type)
      { ::operator delete(__p); }

      size_type
      max_size() const throw() 
   1b74a:	55                   	push   %rbp
   1b74b:	48 89 e5             	mov    %rsp,%rbp
   1b74e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_t(-1) / sizeof(_Tp); }
   1b752:	48 b8 86 61 18 86 61 	movabs $0x186186186186186,%rax
   1b759:	18 86 01 
   1b75c:	5d                   	pop    %rbp
   1b75d:	c3                   	retq   

000000000001b75e <_ZNSt4pairIKiN6xaxaxa2IO17FileStreamManager8taskInfoEEC1IS0_S4_EEOS_IT_T0_E>:

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   1b75e:	55                   	push   %rbp
   1b75f:	48 89 e5             	mov    %rsp,%rbp
   1b762:	48 83 ec 10          	sub    $0x10,%rsp
   1b766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b76a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   1b76e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b772:	48 89 c7             	mov    %rax,%rdi
   1b775:	e8 56 9f ff ff       	callq  156d0 <_ZSt7forwardIKiEOT_RNSt16remove_referenceIS1_E4typeE@plt>
   1b77a:	8b 10                	mov    (%rax),%edx
   1b77c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b780:	89 10                	mov    %edx,(%rax)
   1b782:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b786:	48 83 c0 08          	add    $0x8,%rax
   1b78a:	48 89 c7             	mov    %rax,%rdi
   1b78d:	e8 3e a7 ff ff       	callq  15ed0 <_ZSt7forwardIN6xaxaxa2IO17FileStreamManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE@plt>
   1b792:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b796:	48 83 c2 08          	add    $0x8,%rdx
   1b79a:	48 89 c6             	mov    %rax,%rsi
   1b79d:	48 89 d7             	mov    %rdx,%rdi
   1b7a0:	e8 ab 9e ff ff       	callq  15650 <_ZN6xaxaxa2IO17FileStreamManager8taskInfoC1ERKS2_@plt>
   1b7a5:	c9                   	leaveq 
   1b7a6:	c3                   	retq   

000000000001b7a7 <_ZSt7forwardIKiEOT_RNSt16remove_referenceIS1_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1b7a7:	55                   	push   %rbp
   1b7a8:	48 89 e5             	mov    %rsp,%rbp
   1b7ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1b7af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7b3:	5d                   	pop    %rbp
   1b7b4:	c3                   	retq   
   1b7b5:	90                   	nop

000000000001b7b6 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEED1Ev>:
//
#ifdef __CODEGUARD__
# pragma option push -Vx-
#endif

template<class P, class D> class sp_counted_impl_pd: public sp_counted_base
   1b7b6:	55                   	push   %rbp
   1b7b7:	48 89 e5             	mov    %rsp,%rbp
   1b7ba:	48 83 ec 10          	sub    $0x10,%rsp
   1b7be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b7c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7c6:	48 8b 15 33 e9 20 00 	mov    0x20e933(%rip),%rdx        # 22a100 <_DYNAMIC+0x268>
   1b7cd:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1b7d1:	48 89 10             	mov    %rdx,(%rax)
   1b7d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7d8:	48 89 c7             	mov    %rax,%rdi
   1b7db:	e8 30 a4 ff ff       	callq  15c10 <_ZN5boost6detail15sp_counted_baseD2Ev@plt>
   1b7e0:	b8 00 00 00 00       	mov    $0x0,%eax
   1b7e5:	83 e0 01             	and    $0x1,%eax
   1b7e8:	84 c0                	test   %al,%al
   1b7ea:	74 0c                	je     1b7f8 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEED1Ev+0x42>
   1b7ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7f0:	48 89 c7             	mov    %rax,%rdi
   1b7f3:	e8 f8 9d ff ff       	callq  155f0 <_ZdlPv@plt>
   1b7f8:	c9                   	leaveq 
   1b7f9:	c3                   	retq   

000000000001b7fa <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEED0Ev>:
   1b7fa:	55                   	push   %rbp
   1b7fb:	48 89 e5             	mov    %rsp,%rbp
   1b7fe:	48 83 ec 10          	sub    $0x10,%rsp
   1b802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b80a:	48 89 c7             	mov    %rax,%rdi
   1b80d:	e8 de a3 ff ff       	callq  15bf0 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEED1Ev@plt>
   1b812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b816:	48 89 c7             	mov    %rax,%rdi
   1b819:	e8 d2 9d ff ff       	callq  155f0 <_ZdlPv@plt>
   1b81e:	c9                   	leaveq 
   1b81f:	c3                   	retq   

000000000001b820 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEE7disposeEv>:

    sp_counted_impl_pd( P p ): ptr( p ), del()
    {
    }

    virtual void dispose() // nothrow
   1b820:	55                   	push   %rbp
   1b821:	48 89 e5             	mov    %rsp,%rbp
   1b824:	48 83 ec 10          	sub    $0x10,%rsp
   1b828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
        del( ptr );
   1b82c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b830:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b834:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b838:	48 83 c2 18          	add    $0x18,%rdx
   1b83c:	48 89 c6             	mov    %rax,%rsi
   1b83f:	48 89 d7             	mov    %rdx,%rdi
   1b842:	e8 49 a0 ff ff       	callq  15890 <_ZNK5boost21checked_array_deleterIhEclEPh@plt>
    }
   1b847:	c9                   	leaveq 
   1b848:	c3                   	retq   
   1b849:	90                   	nop

000000000001b84a <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEE11get_deleterERKSt9type_info>:

    virtual void * get_deleter( detail::sp_typeinfo const & ti )
   1b84a:	55                   	push   %rbp
   1b84b:	48 89 e5             	mov    %rsp,%rbp
   1b84e:	48 83 ec 10          	sub    $0x10,%rsp
   1b852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b856:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
        return ti == BOOST_SP_TYPEID(D)? &reinterpret_cast<char&>( del ): 0;
   1b85a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b85e:	48 8b 15 bb e8 20 00 	mov    0x20e8bb(%rip),%rdx        # 22a120 <_DYNAMIC+0x288>
   1b865:	48 89 d6             	mov    %rdx,%rsi
   1b868:	48 89 c7             	mov    %rax,%rdi
   1b86b:	e8 30 ab ff ff       	callq  163a0 <_ZNKSt9type_infoeqERKS_@plt>
   1b870:	84 c0                	test   %al,%al
   1b872:	74 0a                	je     1b87e <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEE11get_deleterERKSt9type_info+0x34>
   1b874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b878:	48 83 c0 18          	add    $0x18,%rax
   1b87c:	eb 05                	jmp    1b883 <_ZN5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEE11get_deleterERKSt9type_info+0x39>
   1b87e:	b8 00 00 00 00       	mov    $0x0,%eax
    }
   1b883:	c9                   	leaveq 
   1b884:	c3                   	retq   
   1b885:	90                   	nop
   1b886:	90                   	nop
   1b887:	90                   	nop

000000000001b888 <_ZN6xaxaxa7Sockets8EndPoint12FromSockAddrEP8sockaddr>:
	namespace Sockets
	{


		EndPoint* EndPoint::FromSockAddr(sockaddr* addr)
		{
   1b888:	55                   	push   %rbp
   1b889:	48 89 e5             	mov    %rsp,%rbp
   1b88c:	53                   	push   %rbx
   1b88d:	48 83 ec 18          	sub    $0x18,%rsp
   1b891:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
			switch(addr->sa_family)
   1b895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b899:	0f b7 00             	movzwl (%rax),%eax
   1b89c:	0f b7 c0             	movzwl %ax,%eax
   1b89f:	83 f8 02             	cmp    $0x2,%eax
   1b8a2:	74 07                	je     1b8ab <_ZN6xaxaxa7Sockets8EndPoint12FromSockAddrEP8sockaddr+0x23>
   1b8a4:	83 f8 0a             	cmp    $0xa,%eax
   1b8a7:	74 23                	je     1b8cc <_ZN6xaxaxa7Sockets8EndPoint12FromSockAddrEP8sockaddr+0x44>
   1b8a9:	eb 42                	jmp    1b8ed <_ZN6xaxaxa7Sockets8EndPoint12FromSockAddrEP8sockaddr+0x65>
			{
			case AF_INET:
				return new IPEndPoint(*((sockaddr_in*)addr));
   1b8ab:	bf 18 00 00 00       	mov    $0x18,%edi
   1b8b0:	e8 db b1 ff ff       	callq  16a90 <_Znwm@plt>
   1b8b5:	48 89 c3             	mov    %rax,%rbx
   1b8b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b8bc:	48 89 c6             	mov    %rax,%rsi
   1b8bf:	48 89 df             	mov    %rbx,%rdi
   1b8c2:	e8 49 af ff ff       	callq  16810 <_ZN6xaxaxa7Sockets10IPEndPointC1ER11sockaddr_in@plt>
   1b8c7:	48 89 d8             	mov    %rbx,%rax
   1b8ca:	eb 26                	jmp    1b8f2 <_ZN6xaxaxa7Sockets8EndPoint12FromSockAddrEP8sockaddr+0x6a>
			case AF_INET6:
				return new IPv6EndPoint(*((sockaddr_in6*)addr));
   1b8cc:	bf 20 00 00 00       	mov    $0x20,%edi
   1b8d1:	e8 ba b1 ff ff       	callq  16a90 <_Znwm@plt>
   1b8d6:	48 89 c3             	mov    %rax,%rbx
   1b8d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b8dd:	48 89 c6             	mov    %rax,%rsi
   1b8e0:	48 89 df             	mov    %rbx,%rdi
   1b8e3:	e8 d8 9b ff ff       	callq  154c0 <_ZN6xaxaxa7Sockets12IPv6EndPointC1ER12sockaddr_in6@plt>
   1b8e8:	48 89 d8             	mov    %rbx,%rax
   1b8eb:	eb 05                	jmp    1b8f2 <_ZN6xaxaxa7Sockets8EndPoint12FromSockAddrEP8sockaddr+0x6a>
			default:
				return NULL;
   1b8ed:	b8 00 00 00 00       	mov    $0x0,%eax
			}
		}
   1b8f2:	48 83 c4 18          	add    $0x18,%rsp
   1b8f6:	5b                   	pop    %rbx
   1b8f7:	5d                   	pop    %rbp
   1b8f8:	c3                   	retq   
   1b8f9:	90                   	nop

000000000001b8fa <_ZN6xaxaxa7Sockets13SocketManagerC1Ev>:
		const int pollcount = 32;
		SocketManager::SocketManager()
   1b8fa:	55                   	push   %rbp
   1b8fb:	48 89 e5             	mov    %rsp,%rbp
   1b8fe:	53                   	push   %rbx
   1b8ff:	48 83 ec 18          	sub    $0x18,%rsp
   1b903:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b907:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b90b:	48 89 c7             	mov    %rax,%rdi
   1b90e:	e8 3d a7 ff ff       	callq  16050 <_ZN6xaxaxa6ObjectC2Ev@plt>
   1b913:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b917:	48 8b 15 62 e7 20 00 	mov    0x20e762(%rip),%rdx        # 22a080 <_DYNAMIC+0x1e8>
   1b91e:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1b922:	48 89 10             	mov    %rdx,(%rax)
   1b925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b929:	48 83 c0 10          	add    $0x10,%rax
   1b92d:	48 89 c7             	mov    %rax,%rdi
   1b930:	e8 6b ad ff ff       	callq  166a0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEC1Ev@plt>
   1b935:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b939:	48 83 c0 40          	add    $0x40,%rax
   1b93d:	48 89 c7             	mov    %rax,%rdi
   1b940:	e8 6b 9f ff ff       	callq  158b0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEC1Ev@plt>
		{
			__current_task_=NULL;
   1b945:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b949:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
   1b950:	00 
			this->epollfd = epoll_create(pollcount);
   1b951:	bf 20 00 00 00       	mov    $0x20,%edi
   1b956:	e8 f5 9b ff ff       	callq  15550 <epoll_create@plt>
   1b95b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b95f:	89 42 0c             	mov    %eax,0xc(%rdx)
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) perror("epoll_create");
   1b962:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b966:	8b 40 0c             	mov    0xc(%rax),%eax
   1b969:	85 c0                	test   %eax,%eax
   1b96b:	79 52                	jns    1b9bf <_ZN6xaxaxa7Sockets13SocketManagerC1Ev+0xc5>
   1b96d:	48 8d 3d 9f 88 00 00 	lea    0x889f(%rip),%rdi        # 24213 <_ZStL6ignore+0x49>
   1b974:	e8 37 b0 ff ff       	callq  169b0 <perror@plt>
		}
   1b979:	eb 44                	jmp    1b9bf <_ZN6xaxaxa7Sockets13SocketManagerC1Ev+0xc5>
   1b97b:	48 89 c3             	mov    %rax,%rbx
			default:
				return NULL;
			}
		}
		const int pollcount = 32;
		SocketManager::SocketManager()
   1b97e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b982:	48 83 c0 40          	add    $0x40,%rax
   1b986:	48 89 c7             	mov    %rax,%rdi
   1b989:	e8 92 aa ff ff       	callq  16420 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEED1Ev@plt>
   1b98e:	eb 03                	jmp    1b993 <_ZN6xaxaxa7Sockets13SocketManagerC1Ev+0x99>
   1b990:	48 89 c3             	mov    %rax,%rbx
   1b993:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b997:	48 83 c0 10          	add    $0x10,%rax
   1b99b:	48 89 c7             	mov    %rax,%rdi
   1b99e:	e8 ed 9d ff ff       	callq  15790 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>
   1b9a3:	eb 03                	jmp    1b9a8 <_ZN6xaxaxa7Sockets13SocketManagerC1Ev+0xae>
   1b9a5:	48 89 c3             	mov    %rax,%rbx
   1b9a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b9ac:	48 89 c7             	mov    %rax,%rdi
   1b9af:	e8 2c a8 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   1b9b4:	48 89 d8             	mov    %rbx,%rax
   1b9b7:	48 89 c7             	mov    %rax,%rdi
   1b9ba:	e8 f1 b0 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
		{
			__current_task_=NULL;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) perror("epoll_create");
		}
   1b9bf:	90                   	nop
   1b9c0:	48 83 c4 18          	add    $0x18,%rsp
   1b9c4:	5b                   	pop    %rbx
   1b9c5:	5d                   	pop    %rbp
   1b9c6:	c3                   	retq   
   1b9c7:	90                   	nop

000000000001b9c8 <_ZN6xaxaxa7Sockets13SocketManagerD1Ev>:
		SocketManager::~SocketManager()
   1b9c8:	55                   	push   %rbp
   1b9c9:	48 89 e5             	mov    %rsp,%rbp
   1b9cc:	53                   	push   %rbx
   1b9cd:	48 83 ec 18          	sub    $0x18,%rsp
   1b9d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b9d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b9d9:	48 8b 15 a0 e6 20 00 	mov    0x20e6a0(%rip),%rdx        # 22a080 <_DYNAMIC+0x1e8>
   1b9e0:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1b9e4:	48 89 10             	mov    %rdx,(%rax)
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
   1b9e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b9eb:	8b 40 0c             	mov    0xc(%rax),%eax
   1b9ee:	89 c7                	mov    %eax,%edi
   1b9f0:	e8 0b 9a ff ff       	callq  15400 <close@plt>
			__current_task_=NULL;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) perror("epoll_create");
		}
		SocketManager::~SocketManager()
   1b9f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b9f9:	48 83 c0 40          	add    $0x40,%rax
   1b9fd:	48 89 c7             	mov    %rax,%rdi
   1ba00:	e8 1b aa ff ff       	callq  16420 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEED1Ev@plt>
   1ba05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ba09:	48 83 c0 10          	add    $0x10,%rax
   1ba0d:	48 89 c7             	mov    %rax,%rdi
   1ba10:	e8 7b 9d ff ff       	callq  15790 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>
   1ba15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ba19:	48 89 c7             	mov    %rax,%rdi
   1ba1c:	e8 bf a7 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
		}
   1ba21:	b8 00 00 00 00       	mov    $0x0,%eax
   1ba26:	83 e0 01             	and    $0x1,%eax
   1ba29:	84 c0                	test   %al,%al
   1ba2b:	74 52                	je     1ba7f <_ZN6xaxaxa7Sockets13SocketManagerD1Ev+0xb7>
   1ba2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ba31:	48 89 c7             	mov    %rax,%rdi
   1ba34:	e8 b7 9b ff ff       	callq  155f0 <_ZdlPv@plt>
   1ba39:	eb 44                	jmp    1ba7f <_ZN6xaxaxa7Sockets13SocketManagerD1Ev+0xb7>
   1ba3b:	48 89 c3             	mov    %rax,%rbx
			__current_task_=NULL;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) perror("epoll_create");
		}
		SocketManager::~SocketManager()
   1ba3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ba42:	48 83 c0 40          	add    $0x40,%rax
   1ba46:	48 89 c7             	mov    %rax,%rdi
   1ba49:	e8 d2 a9 ff ff       	callq  16420 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEED1Ev@plt>
   1ba4e:	eb 03                	jmp    1ba53 <_ZN6xaxaxa7Sockets13SocketManagerD1Ev+0x8b>
   1ba50:	48 89 c3             	mov    %rax,%rbx
   1ba53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ba57:	48 83 c0 10          	add    $0x10,%rax
   1ba5b:	48 89 c7             	mov    %rax,%rdi
   1ba5e:	e8 2d 9d ff ff       	callq  15790 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev@plt>
   1ba63:	eb 03                	jmp    1ba68 <_ZN6xaxaxa7Sockets13SocketManagerD1Ev+0xa0>
   1ba65:	48 89 c3             	mov    %rax,%rbx
   1ba68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ba6c:	48 89 c7             	mov    %rax,%rdi
   1ba6f:	e8 6c a7 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   1ba74:	48 89 d8             	mov    %rbx,%rax
   1ba77:	48 89 c7             	mov    %rax,%rdi
   1ba7a:	e8 31 b0 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
		}
   1ba7f:	48 83 c4 18          	add    $0x18,%rsp
   1ba83:	5b                   	pop    %rbx
   1ba84:	5d                   	pop    %rbp
   1ba85:	c3                   	retq   

000000000001ba86 <_ZN6xaxaxa7Sockets13SocketManagerD0Ev>:
			__current_task_=NULL;
			this->epollfd = epoll_create(pollcount);
			dbgprint("socketmanager " << this->epollfd << " created");
			if (epollfd < 0) perror("epoll_create");
		}
		SocketManager::~SocketManager()
   1ba86:	55                   	push   %rbp
   1ba87:	48 89 e5             	mov    %rsp,%rbp
   1ba8a:	48 83 ec 10          	sub    $0x10,%rsp
   1ba8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
			dbgprint("socketmanager " << this->epollfd << " closed");
			close(this->epollfd);
		}
   1ba92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba96:	48 89 c7             	mov    %rax,%rdi
   1ba99:	e8 92 a6 ff ff       	callq  16130 <_ZN6xaxaxa7Sockets13SocketManagerD1Ev@plt>
   1ba9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1baa2:	48 89 c7             	mov    %rax,%rdi
   1baa5:	e8 46 9b ff ff       	callq  155f0 <_ZdlPv@plt>
   1baaa:	c9                   	leaveq 
   1baab:	c3                   	retq   

000000000001baac <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv>:
		void SocketManager::EventLoop()
		{
   1baac:	55                   	push   %rbp
   1baad:	48 89 e5             	mov    %rsp,%rbp
   1bab0:	41 54                	push   %r12
   1bab2:	53                   	push   %rbx
   1bab3:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   1baba:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
			epoll_event* events = new epoll_event[pollcount];
   1bac1:	bf 80 01 00 00       	mov    $0x180,%edi
   1bac6:	e8 e5 9a ff ff       	callq  155b0 <_Znam@plt>
   1bacb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
			while (1)
			{
				int tmp = epoll_wait(this->epollfd, events, pollcount, -1);
   1bacf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bad6:	8b 40 0c             	mov    0xc(%rax),%eax
   1bad9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1badd:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1bae2:	ba 20 00 00 00       	mov    $0x20,%edx
   1bae7:	89 c7                	mov    %eax,%edi
   1bae9:	e8 e2 aa ff ff       	callq  165d0 <epoll_wait@plt>
   1baee:	89 45 dc             	mov    %eax,-0x24(%rbp)
				//cout << tmp << endl;
				if (tmp == -1)
   1baf1:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
   1baf5:	75 4a                	jne    1bb41 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x95>
				{
					if(errno == EINTR) continue;
   1baf7:	e8 e4 a8 ff ff       	callq  163e0 <__errno_location@plt>
   1bafc:	8b 00                	mov    (%rax),%eax
   1bafe:	83 f8 04             	cmp    $0x4,%eax
   1bb01:	0f 84 22 06 00 00    	je     1c129 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x67d>
					throw Exception(errno);
   1bb07:	bf 18 00 00 00       	mov    $0x18,%edi
   1bb0c:	e8 1f aa ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1bb11:	48 89 c3             	mov    %rax,%rbx
   1bb14:	e8 c7 a8 ff ff       	callq  163e0 <__errno_location@plt>
   1bb19:	8b 00                	mov    (%rax),%eax
   1bb1b:	89 c6                	mov    %eax,%esi
   1bb1d:	48 89 df             	mov    %rbx,%rdi
   1bb20:	e8 5b 9b ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1bb25:	48 8b 05 6c e5 20 00 	mov    0x20e56c(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1bb2c:	48 89 c2             	mov    %rax,%rdx
   1bb2f:	48 8b 05 02 e6 20 00 	mov    0x20e602(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1bb36:	48 89 c6             	mov    %rax,%rsi
   1bb39:	48 89 df             	mov    %rbx,%rdi
   1bb3c:	e8 cf ab ff ff       	callq  16710 <__cxa_throw@plt>
				}
				for (int a = 0; a < tmp; a++)
   1bb41:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   1bb48:	e9 a4 05 00 00       	jmpq   1c0f1 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x645>
				{
					epoll_event ev = events[a];
   1bb4d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1bb50:	48 63 d0             	movslq %eax,%rdx
   1bb53:	48 89 d0             	mov    %rdx,%rax
   1bb56:	48 01 c0             	add    %rax,%rax
   1bb59:	48 01 d0             	add    %rdx,%rax
   1bb5c:	48 c1 e0 02          	shl    $0x2,%rax
   1bb60:	48 03 45 e0          	add    -0x20(%rbp),%rax
   1bb64:	48 8b 10             	mov    (%rax),%rdx
   1bb67:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
   1bb6e:	8b 40 08             	mov    0x8(%rax),%eax
   1bb71:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
					SOCKET s = ev.data.fd;
   1bb77:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
   1bb7d:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
					if(tmp_erased.count(s)>0)continue;
   1bb83:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bb8a:	48 8d 50 40          	lea    0x40(%rax),%rdx
   1bb8e:	48 8d 85 3c ff ff ff 	lea    -0xc4(%rbp),%rax
   1bb95:	48 89 c6             	mov    %rax,%rsi
   1bb98:	48 89 d7             	mov    %rdx,%rdi
   1bb9b:	e8 50 a9 ff ff       	callq  164f0 <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE5countERS3_@plt>
   1bba0:	48 85 c0             	test   %rax,%rax
   1bba3:	0f 95 c0             	setne  %al
   1bba6:	84 c0                	test   %al,%al
   1bba8:	0f 85 38 05 00 00    	jne    1c0e6 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x63a>
					dbgprint("s=" << s);
					taskInfo& __current_task = this->info[s];
   1bbae:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bbb5:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1bbb9:	48 8d 85 3c ff ff ff 	lea    -0xc4(%rbp),%rax
   1bbc0:	48 89 c6             	mov    %rax,%rsi
   1bbc3:	48 89 d7             	mov    %rdx,%rdi
   1bbc6:	e8 e5 a3 ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1bbcb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
					__current_task_=&__current_task;
   1bbcf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1bbd6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1bbda:	48 89 50 70          	mov    %rdx,0x70(%rax)
					 {
					 dbgprint(s << "not initialized");
					 this->info.erase(s);
					 continue;
					 }*/
					bool hup=(ev.events & EPOLLHUP) || (ev.events & EPOLLERR);
   1bbde:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1bbe4:	83 e0 10             	and    $0x10,%eax
   1bbe7:	85 c0                	test   %eax,%eax
   1bbe9:	75 0d                	jne    1bbf8 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x14c>
   1bbeb:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1bbf1:	83 e0 08             	and    $0x8,%eax
   1bbf4:	85 c0                	test   %eax,%eax
   1bbf6:	74 07                	je     1bbff <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x153>
   1bbf8:	b8 01 00 00 00       	mov    $0x1,%eax
   1bbfd:	eb 05                	jmp    1bc04 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x158>
   1bbff:	b8 00 00 00 00       	mov    $0x0,%eax
   1bc04:	88 45 cf             	mov    %al,-0x31(%rbp)
					__current_task.new_events = __current_task.events
							& (~ev.events);
   1bc07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc0b:	8b 40 28             	mov    0x28(%rax),%eax
   1bc0e:	8b 95 40 ff ff ff    	mov    -0xc0(%rbp),%edx
   1bc14:	f7 d2                	not    %edx
   1bc16:	21 c2                	and    %eax,%edx
   1bc18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc1c:	89 50 2c             	mov    %edx,0x2c(%rax)
					if (hup)__current_task.new_events=0;
   1bc1f:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
   1bc23:	74 0b                	je     1bc30 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x184>
   1bc25:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc29:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%rax)
					dbgprint("__current_task.events=" << __current_task.events);dbgprint("ev.events=" << ev.events);

					if ((__current_task.events & ev.events & EPOLLIN) || (hup && (__current_task.events & EPOLLIN)))
   1bc30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc34:	8b 50 28             	mov    0x28(%rax),%edx
   1bc37:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1bc3d:	21 d0                	and    %edx,%eax
   1bc3f:	83 e0 01             	and    $0x1,%eax
   1bc42:	84 c0                	test   %al,%al
   1bc44:	75 1c                	jne    1bc62 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x1b6>
   1bc46:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
   1bc4a:	0f 84 f8 01 00 00    	je     1be48 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x39c>
   1bc50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc54:	8b 40 28             	mov    0x28(%rax),%eax
   1bc57:	83 e0 01             	and    $0x1,%eax
   1bc5a:	84 c0                	test   %al,%al
   1bc5c:	0f 84 e6 01 00 00    	je     1be48 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x39c>
					{
						if (hup)
   1bc62:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
   1bc66:	74 10                	je     1bc78 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x1cc>
						{
							__current_task.r_errno = 104;
   1bc68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc6c:	c7 40 78 68 00 00 00 	movl   $0x68,0x78(%rax)
   1bc73:	e9 f0 00 00 00       	jmpq   1bd68 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x2bc>
						}
						else
						{
							if (__current_task.bits & 2)
   1bc78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc7c:	8b 00                	mov    (%rax),%eax
   1bc7e:	83 e0 02             	and    $0x2,%eax
   1bc81:	85 c0                	test   %eax,%eax
   1bc83:	0f 84 df 00 00 00    	je     1bd68 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x2bc>
							{
								int tmp = recv(s, __current_task.r_buf.Data,
										__current_task.r_buf.Length, 0);
   1bc89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc8d:	8b 40 4c             	mov    0x4c(%rax),%eax
   1bc90:	48 63 d0             	movslq %eax,%rdx
   1bc93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc97:	48 8b 70 40          	mov    0x40(%rax),%rsi
   1bc9b:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1bca1:	b9 00 00 00 00       	mov    $0x0,%ecx
   1bca6:	89 c7                	mov    %eax,%edi
   1bca8:	e8 43 9b ff ff       	callq  157f0 <recv@plt>
   1bcad:	89 45 c8             	mov    %eax,-0x38(%rbp)
								if (tmp < 0)
   1bcb0:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   1bcb4:	79 22                	jns    1bcd8 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x22c>
								{
									if (!__current_task.r_length) __current_task.r_errno
   1bcb6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bcba:	8b 40 70             	mov    0x70(%rax),%eax
   1bcbd:	85 c0                	test   %eax,%eax
   1bcbf:	0f 85 a3 00 00 00    	jne    1bd68 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x2bc>
											= errno;
   1bcc5:	e8 16 a7 ff ff       	callq  163e0 <__errno_location@plt>
   1bcca:	8b 10                	mov    (%rax),%edx
   1bccc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bcd0:	89 50 78             	mov    %edx,0x78(%rax)
   1bcd3:	e9 90 00 00 00       	jmpq   1bd68 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x2bc>
								}
								else if (tmp > 0)
   1bcd8:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   1bcdc:	0f 8e 86 00 00 00    	jle    1bd68 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x2bc>
								{
									__current_task.r_length += tmp;
   1bce2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bce6:	8b 40 70             	mov    0x70(%rax),%eax
   1bce9:	89 c2                	mov    %eax,%edx
   1bceb:	03 55 c8             	add    -0x38(%rbp),%edx
   1bcee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bcf2:	89 50 70             	mov    %edx,0x70(%rax)
									if (tmp < __current_task.r_buf.Length)
   1bcf5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bcf9:	8b 40 4c             	mov    0x4c(%rax),%eax
   1bcfc:	3b 45 c8             	cmp    -0x38(%rbp),%eax
   1bcff:	7e 67                	jle    1bd68 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x2bc>
									{
										__current_task.new_events |= EPOLLIN;
   1bd01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bd05:	8b 40 2c             	mov    0x2c(%rax),%eax
   1bd08:	89 c2                	mov    %eax,%edx
   1bd0a:	83 ca 01             	or     $0x1,%edx
   1bd0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bd11:	89 50 2c             	mov    %edx,0x2c(%rax)
										__current_task.r_buf
												= __current_task.r_buf.SubBuffer(
														tmp,
														__current_task.r_buf.Length
																- tmp);
   1bd14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bd18:	8b 40 4c             	mov    0x4c(%rax),%eax
   1bd1b:	89 c1                	mov    %eax,%ecx
   1bd1d:	2b 4d c8             	sub    -0x38(%rbp),%ecx
   1bd20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bd24:	48 8d 70 30          	lea    0x30(%rax),%rsi
   1bd28:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1bd2f:	8b 55 c8             	mov    -0x38(%rbp),%edx
   1bd32:	48 89 c7             	mov    %rax,%rdi
   1bd35:	e8 66 a2 ff ff       	callq  15fa0 <_ZNK6xaxaxa6Buffer9SubBufferEii@plt>
   1bd3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bd3e:	48 8d 50 30          	lea    0x30(%rax),%rdx
   1bd42:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1bd49:	48 89 c6             	mov    %rax,%rsi
   1bd4c:	48 89 d7             	mov    %rdx,%rdi
   1bd4f:	e8 6c 9a ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
   1bd54:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1bd5b:	48 89 c7             	mov    %rax,%rdi
   1bd5e:	e8 cd 97 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
										goto asdf;
   1bd63:	e9 d5 02 00 00       	jmpq   1c03d <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x591>
									}
								}
							}
						}dbgprint("calling cb_recv=" << __current_task.cb_recv.f);
						FUNCTION_CALL(__current_task.cb_recv,this,Socket(s));
   1bd68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bd6c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1bd70:	48 85 c0             	test   %rax,%rax
   1bd73:	0f 85 85 00 00 00    	jne    1bdfe <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x352>
   1bd79:	bf 18 00 00 00       	mov    $0x18,%edi
   1bd7e:	e8 ad a7 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1bd83:	48 89 c3             	mov    %rax,%rbx
   1bd86:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1bd8d:	48 89 c7             	mov    %rax,%rdi
   1bd90:	e8 5b ac ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1bd95:	48 8d 95 7f ff ff ff 	lea    -0x81(%rbp),%rdx
   1bd9c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1bda3:	48 8d 35 76 84 00 00 	lea    0x8476(%rip),%rsi        # 24220 <_ZStL6ignore+0x56>
   1bdaa:	48 89 c7             	mov    %rax,%rdi
   1bdad:	e8 2e a2 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1bdb2:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1bdb9:	48 89 c6             	mov    %rax,%rsi
   1bdbc:	48 89 df             	mov    %rbx,%rdi
   1bdbf:	e8 9c a2 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1bdc4:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1bdcb:	48 89 c7             	mov    %rax,%rdi
   1bdce:	e8 6d 9d ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1bdd3:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1bdda:	48 89 c7             	mov    %rax,%rdi
   1bddd:	e8 5e a7 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1bde2:	48 8b 05 af e2 20 00 	mov    0x20e2af(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1bde9:	48 89 c2             	mov    %rax,%rdx
   1bdec:	48 8b 05 45 e3 20 00 	mov    0x20e345(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1bdf3:	48 89 c6             	mov    %rax,%rsi
   1bdf6:	48 89 df             	mov    %rbx,%rdi
   1bdf9:	e8 12 a9 ff ff       	callq  16710 <__cxa_throw@plt>
   1bdfe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be02:	48 8b 58 08          	mov    0x8(%rax),%rbx
   1be06:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
   1be0c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1be10:	89 d6                	mov    %edx,%esi
   1be12:	48 89 c7             	mov    %rax,%rdi
   1be15:	e8 f6 a1 ff ff       	callq  16010 <_ZN6xaxaxa7Sockets6SocketC1Ei@plt>
   1be1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be1e:	48 8b 40 10          	mov    0x10(%rax),%rax
   1be22:	8b 55 80             	mov    -0x80(%rbp),%edx
   1be25:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
   1be2c:	48 89 ce             	mov    %rcx,%rsi
   1be2f:	48 89 c7             	mov    %rax,%rdi
   1be32:	ff d3                	callq  *%rbx
						if(__current_task_==NULL)continue;
   1be34:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1be3b:	48 8b 40 70          	mov    0x70(%rax),%rax
   1be3f:	48 85 c0             	test   %rax,%rax
   1be42:	0f 84 a1 02 00 00    	je     1c0e9 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x63d>
					}
					if ((__current_task.events & ev.events & EPOLLOUT) || (hup && (__current_task.events & EPOLLOUT)))
   1be48:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be4c:	8b 50 28             	mov    0x28(%rax),%edx
   1be4f:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1be55:	21 d0                	and    %edx,%eax
   1be57:	83 e0 04             	and    $0x4,%eax
   1be5a:	85 c0                	test   %eax,%eax
   1be5c:	75 1c                	jne    1be7a <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x3ce>
   1be5e:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
   1be62:	0f 84 d5 01 00 00    	je     1c03d <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x591>
   1be68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be6c:	8b 40 28             	mov    0x28(%rax),%eax
   1be6f:	83 e0 04             	and    $0x4,%eax
   1be72:	85 c0                	test   %eax,%eax
   1be74:	0f 84 c3 01 00 00    	je     1c03d <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x591>
					{
						if (hup)
   1be7a:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
   1be7e:	74 10                	je     1be90 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x3e4>
						{
							__current_task.w_errno = 104;
   1be80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be84:	c7 40 7c 68 00 00 00 	movl   $0x68,0x7c(%rax)
   1be8b:	e9 e3 00 00 00       	jmpq   1bf73 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x4c7>
						}
						else
						{
							if (__current_task.bits & 4)
   1be90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1be94:	8b 00                	mov    (%rax),%eax
   1be96:	83 e0 04             	and    $0x4,%eax
   1be99:	85 c0                	test   %eax,%eax
   1be9b:	0f 84 d2 00 00 00    	je     1bf73 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x4c7>
							{
								int tmp = send(s, __current_task.w_buf.Data,
										__current_task.w_buf.Length, 0);
   1bea1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bea5:	8b 40 6c             	mov    0x6c(%rax),%eax
   1bea8:	48 63 d0             	movslq %eax,%rdx
   1beab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1beaf:	48 8b 70 60          	mov    0x60(%rax),%rsi
   1beb3:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1beb9:	b9 00 00 00 00       	mov    $0x0,%ecx
   1bebe:	89 c7                	mov    %eax,%edi
   1bec0:	e8 8b a6 ff ff       	callq  16550 <send@plt>
   1bec5:	89 45 c4             	mov    %eax,-0x3c(%rbp)
								if (tmp < 0)
   1bec8:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   1becc:	79 22                	jns    1bef0 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x444>
								{
									if (!__current_task.w_length) __current_task.w_errno
   1bece:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bed2:	8b 40 74             	mov    0x74(%rax),%eax
   1bed5:	85 c0                	test   %eax,%eax
   1bed7:	0f 85 96 00 00 00    	jne    1bf73 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x4c7>
											= errno;
   1bedd:	e8 fe a4 ff ff       	callq  163e0 <__errno_location@plt>
   1bee2:	8b 10                	mov    (%rax),%edx
   1bee4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bee8:	89 50 7c             	mov    %edx,0x7c(%rax)
   1beeb:	e9 83 00 00 00       	jmpq   1bf73 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x4c7>
								}
								else if (tmp > 0)
   1bef0:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   1bef4:	7e 7d                	jle    1bf73 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x4c7>
								{
									__current_task.w_length += tmp;
   1bef6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1befa:	8b 40 74             	mov    0x74(%rax),%eax
   1befd:	89 c2                	mov    %eax,%edx
   1beff:	03 55 c4             	add    -0x3c(%rbp),%edx
   1bf02:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf06:	89 50 74             	mov    %edx,0x74(%rax)
									if (tmp < __current_task.w_buf.Length)
   1bf09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf0d:	8b 40 6c             	mov    0x6c(%rax),%eax
   1bf10:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
   1bf13:	7e 5e                	jle    1bf73 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x4c7>
									{
										__current_task.new_events |= EPOLLOUT;
   1bf15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf19:	8b 40 2c             	mov    0x2c(%rax),%eax
   1bf1c:	89 c2                	mov    %eax,%edx
   1bf1e:	83 ca 04             	or     $0x4,%edx
   1bf21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf25:	89 50 2c             	mov    %edx,0x2c(%rax)
										__current_task.w_buf
												= __current_task.w_buf.SubBuffer(
														tmp,
														__current_task.w_buf.Length
																- tmp);
   1bf28:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf2c:	8b 40 6c             	mov    0x6c(%rax),%eax
   1bf2f:	89 c1                	mov    %eax,%ecx
   1bf31:	2b 4d c4             	sub    -0x3c(%rbp),%ecx
   1bf34:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf38:	48 8d 70 50          	lea    0x50(%rax),%rsi
   1bf3c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1bf40:	8b 55 c4             	mov    -0x3c(%rbp),%edx
   1bf43:	48 89 c7             	mov    %rax,%rdi
   1bf46:	e8 55 a0 ff ff       	callq  15fa0 <_ZNK6xaxaxa6Buffer9SubBufferEii@plt>
   1bf4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf4f:	48 8d 50 50          	lea    0x50(%rax),%rdx
   1bf53:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1bf57:	48 89 c6             	mov    %rax,%rsi
   1bf5a:	48 89 d7             	mov    %rdx,%rdi
   1bf5d:	e8 5e 98 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
   1bf62:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1bf66:	48 89 c7             	mov    %rax,%rdi
   1bf69:	e8 c2 95 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
										goto asdf;
   1bf6e:	e9 ca 00 00 00       	jmpq   1c03d <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x591>
									}
								}
							}
						}dbgprint("calling cb_send=" << __current_task.cb_send.f);
						FUNCTION_CALL(__current_task.cb_send,this,Socket(s));
   1bf73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf77:	48 8b 40 18          	mov    0x18(%rax),%rax
   1bf7b:	48 85 c0             	test   %rax,%rax
   1bf7e:	75 73                	jne    1bff3 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x547>
   1bf80:	bf 18 00 00 00       	mov    $0x18,%edi
   1bf85:	e8 a6 a5 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1bf8a:	48 89 c3             	mov    %rax,%rbx
   1bf8d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1bf91:	48 89 c7             	mov    %rax,%rdi
   1bf94:	e8 57 aa ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1bf99:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   1bf9d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1bfa1:	48 8d 35 78 82 00 00 	lea    0x8278(%rip),%rsi        # 24220 <_ZStL6ignore+0x56>
   1bfa8:	48 89 c7             	mov    %rax,%rdi
   1bfab:	e8 30 a0 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1bfb0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1bfb4:	48 89 c6             	mov    %rax,%rsi
   1bfb7:	48 89 df             	mov    %rbx,%rdi
   1bfba:	e8 a1 a0 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1bfbf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1bfc3:	48 89 c7             	mov    %rax,%rdi
   1bfc6:	e8 75 9b ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1bfcb:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1bfcf:	48 89 c7             	mov    %rax,%rdi
   1bfd2:	e8 69 a5 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1bfd7:	48 8b 05 ba e0 20 00 	mov    0x20e0ba(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1bfde:	48 89 c2             	mov    %rax,%rdx
   1bfe1:	48 8b 05 50 e1 20 00 	mov    0x20e150(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1bfe8:	48 89 c6             	mov    %rax,%rsi
   1bfeb:	48 89 df             	mov    %rbx,%rdi
   1bfee:	e8 1d a7 ff ff       	callq  16710 <__cxa_throw@plt>
   1bff3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bff7:	48 8b 58 18          	mov    0x18(%rax),%rbx
   1bffb:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
   1c001:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1c005:	89 d6                	mov    %edx,%esi
   1c007:	48 89 c7             	mov    %rax,%rdi
   1c00a:	e8 01 a0 ff ff       	callq  16010 <_ZN6xaxaxa7Sockets6SocketC1Ei@plt>
   1c00f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c013:	48 8b 40 20          	mov    0x20(%rax),%rax
   1c017:	8b 55 c0             	mov    -0x40(%rbp),%edx
   1c01a:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
   1c021:	48 89 ce             	mov    %rcx,%rsi
   1c024:	48 89 c7             	mov    %rax,%rdi
   1c027:	ff d3                	callq  *%rbx
						if(__current_task_==NULL)continue;
   1c029:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1c030:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c034:	48 85 c0             	test   %rax,%rax
   1c037:	0f 84 af 00 00 00    	je     1c0ec <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x640>
					}
					asdf: dbgprint("i.new_events=" << __current_task.new_events);
					if (__current_task.new_events == 0)
   1c03d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c041:	8b 40 2c             	mov    0x2c(%rax),%eax
   1c044:	85 c0                	test   %eax,%eax
   1c046:	75 40                	jne    1c088 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x5dc>
					{
						epoll_ctl(this->epollfd, EPOLL_CTL_DEL, s, NULL);
   1c048:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
   1c04e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1c055:	8b 40 0c             	mov    0xc(%rax),%eax
   1c058:	b9 00 00 00 00       	mov    $0x0,%ecx
   1c05d:	be 02 00 00 00       	mov    $0x2,%esi
   1c062:	89 c7                	mov    %eax,%edi
   1c064:	e8 97 9f ff ff       	callq  16000 <epoll_ctl@plt>
						this->info.erase(s);
   1c069:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1c070:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1c074:	48 8d 85 3c ff ff ff 	lea    -0xc4(%rbp),%rax
   1c07b:	48 89 c6             	mov    %rax,%rsi
   1c07e:	48 89 d7             	mov    %rdx,%rdi
   1c081:	e8 2a a0 ff ff       	callq  160b0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_@plt>
						dbgprint("removing fd " << s);
						continue;
   1c086:	eb 65                	jmp    1c0ed <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x641>
					}
					else if (__current_task.new_events != __current_task.events)
   1c088:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c08c:	8b 50 2c             	mov    0x2c(%rax),%edx
   1c08f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c093:	8b 40 28             	mov    0x28(%rax),%eax
   1c096:	39 c2                	cmp    %eax,%edx
   1c098:	74 53                	je     1c0ed <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x641>
					{
						__current_task.events = __current_task.new_events;
   1c09a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c09e:	8b 50 2c             	mov    0x2c(%rax),%edx
   1c0a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c0a5:	89 50 28             	mov    %edx,0x28(%rax)
						epoll_event ev2;
						ev2.data.fd = s;
   1c0a8:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1c0ae:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
						ev2.events = __current_task.events;
   1c0b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c0b8:	8b 40 28             	mov    0x28(%rax),%eax
   1c0bb:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s, &ev2);
   1c0c1:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
   1c0c7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1c0ce:	8b 40 0c             	mov    0xc(%rax),%eax
   1c0d1:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
   1c0d8:	be 03 00 00 00       	mov    $0x3,%esi
   1c0dd:	89 c7                	mov    %eax,%edi
   1c0df:	e8 1c 9f ff ff       	callq  16000 <epoll_ctl@plt>
   1c0e4:	eb 07                	jmp    1c0ed <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x641>
				}
				for (int a = 0; a < tmp; a++)
				{
					epoll_event ev = events[a];
					SOCKET s = ev.data.fd;
					if(tmp_erased.count(s)>0)continue;
   1c0e6:	90                   	nop
   1c0e7:	eb 04                	jmp    1c0ed <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x641>
									}
								}
							}
						}dbgprint("calling cb_recv=" << __current_task.cb_recv.f);
						FUNCTION_CALL(__current_task.cb_recv,this,Socket(s));
						if(__current_task_==NULL)continue;
   1c0e9:	90                   	nop
   1c0ea:	eb 01                	jmp    1c0ed <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x641>
									}
								}
							}
						}dbgprint("calling cb_send=" << __current_task.cb_send.f);
						FUNCTION_CALL(__current_task.cb_send,this,Socket(s));
						if(__current_task_==NULL)continue;
   1c0ec:	90                   	nop
				if (tmp == -1)
				{
					if(errno == EINTR) continue;
					throw Exception(errno);
				}
				for (int a = 0; a < tmp; a++)
   1c0ed:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   1c0f1:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1c0f4:	3b 45 dc             	cmp    -0x24(%rbp),%eax
   1c0f7:	0f 9c c0             	setl   %al
   1c0fa:	84 c0                	test   %al,%al
   1c0fc:	0f 85 4b fa ff ff    	jne    1bb4d <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0xa1>
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s, &ev2);
						dbgprint("epoll events set to: " << ev2.events);
					}
					//this->info[s] = __current_task;
				}
				tmp_erased.clear();
   1c102:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1c109:	48 83 c0 40          	add    $0x40,%rax
   1c10d:	48 89 c7             	mov    %rax,%rdi
   1c110:	e8 8b a9 ff ff       	callq  16aa0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE5clearEv@plt>
				//__current_task.s = -1;
				__current_task_=NULL;
   1c115:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1c11c:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
   1c123:	00 
			close(this->epollfd);
		}
		void SocketManager::EventLoop()
		{
			epoll_event* events = new epoll_event[pollcount];
			while (1)
   1c124:	e9 a6 f9 ff ff       	jmpq   1bacf <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x23>
			{
				int tmp = epoll_wait(this->epollfd, events, pollcount, -1);
				//cout << tmp << endl;
				if (tmp == -1)
				{
					if(errno == EINTR) continue;
   1c129:	90                   	nop
			close(this->epollfd);
		}
		void SocketManager::EventLoop()
		{
			epoll_event* events = new epoll_event[pollcount];
			while (1)
   1c12a:	e9 a0 f9 ff ff       	jmpq   1bacf <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x23>
   1c12f:	49 89 c4             	mov    %rax,%r12
				int tmp = epoll_wait(this->epollfd, events, pollcount, -1);
				//cout << tmp << endl;
				if (tmp == -1)
				{
					if(errno == EINTR) continue;
					throw Exception(errno);
   1c132:	48 89 df             	mov    %rbx,%rdi
   1c135:	e8 76 a4 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c13a:	4c 89 e0             	mov    %r12,%rax
   1c13d:	48 89 c7             	mov    %rax,%rdi
   1c140:	e8 6b a9 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c145:	48 89 c3             	mov    %rax,%rbx
										__current_task.new_events |= EPOLLIN;
										__current_task.r_buf
												= __current_task.r_buf.SubBuffer(
														tmp,
														__current_task.r_buf.Length
																- tmp);
   1c148:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1c14f:	48 89 c7             	mov    %rax,%rdi
   1c152:	e8 d9 93 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1c157:	48 89 d8             	mov    %rbx,%rax
   1c15a:	48 89 c7             	mov    %rax,%rdi
   1c15d:	e8 4e a9 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c162:	49 89 c4             	mov    %rax,%r12
										goto asdf;
									}
								}
							}
						}dbgprint("calling cb_recv=" << __current_task.cb_recv.f);
						FUNCTION_CALL(__current_task.cb_recv,this,Socket(s));
   1c165:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1c16c:	48 89 c7             	mov    %rax,%rdi
   1c16f:	e8 cc 99 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c174:	eb 03                	jmp    1c179 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x6cd>
   1c176:	49 89 c4             	mov    %rax,%r12
   1c179:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1c180:	48 89 c7             	mov    %rax,%rdi
   1c183:	e8 b8 a3 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c188:	48 89 df             	mov    %rbx,%rdi
   1c18b:	e8 20 a4 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c190:	4c 89 e0             	mov    %r12,%rax
   1c193:	48 89 c7             	mov    %rax,%rdi
   1c196:	e8 15 a9 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c19b:	48 89 c3             	mov    %rax,%rbx
										__current_task.new_events |= EPOLLOUT;
										__current_task.w_buf
												= __current_task.w_buf.SubBuffer(
														tmp,
														__current_task.w_buf.Length
																- tmp);
   1c19e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1c1a2:	48 89 c7             	mov    %rax,%rdi
   1c1a5:	e8 86 93 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1c1aa:	48 89 d8             	mov    %rbx,%rax
   1c1ad:	48 89 c7             	mov    %rax,%rdi
   1c1b0:	e8 fb a8 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c1b5:	49 89 c4             	mov    %rax,%r12
										goto asdf;
									}
								}
							}
						}dbgprint("calling cb_send=" << __current_task.cb_send.f);
						FUNCTION_CALL(__current_task.cb_send,this,Socket(s));
   1c1b8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1c1bc:	48 89 c7             	mov    %rax,%rdi
   1c1bf:	e8 7c 99 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c1c4:	eb 03                	jmp    1c1c9 <_ZN6xaxaxa7Sockets13SocketManager9EventLoopEv+0x71d>
   1c1c6:	49 89 c4             	mov    %rax,%r12
   1c1c9:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1c1cd:	48 89 c7             	mov    %rax,%rdi
   1c1d0:	e8 6b a3 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c1d5:	48 89 df             	mov    %rbx,%rdi
   1c1d8:	e8 d3 a3 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c1dd:	4c 89 e0             	mov    %r12,%rax
   1c1e0:	48 89 c7             	mov    %rax,%rdi
   1c1e3:	e8 c8 a8 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001c1e8 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb>:
				__current_task_=NULL;
			}
		}
		void SocketManager::BeginRecv(Socket s, Buffer buf, Callback cb,
				bool fill)
		{
   1c1e8:	55                   	push   %rbp
   1c1e9:	48 89 e5             	mov    %rsp,%rbp
   1c1ec:	41 54                	push   %r12
   1c1ee:	53                   	push   %rbx
   1c1ef:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   1c1f3:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   1c1f7:	89 75 90             	mov    %esi,-0x70(%rbp)
   1c1fa:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   1c1fe:	48 89 c8             	mov    %rcx,%rax
   1c201:	4c 89 c1             	mov    %r8,%rcx
   1c204:	44 89 ca             	mov    %r9d,%edx
   1c207:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1c20e:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   1c212:	88 55 94             	mov    %dl,-0x6c(%rbp)
			if (__current_task_!=NULL && s._s == __current_task_->s)
   1c215:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c219:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c21d:	48 85 c0             	test   %rax,%rax
   1c220:	0f 84 2b 01 00 00    	je     1c351 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x169>
   1c226:	8b 55 90             	mov    -0x70(%rbp),%edx
   1c229:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c22d:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c231:	8b 40 04             	mov    0x4(%rax),%eax
   1c234:	39 c2                	cmp    %eax,%edx
   1c236:	0f 85 15 01 00 00    	jne    1c351 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x169>
			{
				taskInfo& __current_task=*__current_task_;
   1c23c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c240:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c244:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
				if (__current_task.new_events & EPOLLIN)
   1c248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c24c:	8b 40 2c             	mov    0x2c(%rax),%eax
   1c24f:	83 e0 01             	and    $0x1,%eax
   1c252:	84 c0                	test   %al,%al
   1c254:	74 75                	je     1c2cb <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0xe3>
				{
					throw Exception(s._s, "socket is already receiving");
   1c256:	bf 18 00 00 00       	mov    $0x18,%edi
   1c25b:	e8 d0 a2 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1c260:	48 89 c3             	mov    %rax,%rbx
   1c263:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1c267:	48 89 c7             	mov    %rax,%rdi
   1c26a:	e8 81 a7 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1c26f:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
   1c273:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1c277:	48 8d 35 c3 7f 00 00 	lea    0x7fc3(%rip),%rsi        # 24241 <_ZStL6ignore+0x77>
   1c27e:	48 89 c7             	mov    %rax,%rdi
   1c281:	e8 5a 9d ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1c286:	8b 45 90             	mov    -0x70(%rbp),%eax
   1c289:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1c28d:	89 c6                	mov    %eax,%esi
   1c28f:	48 89 df             	mov    %rbx,%rdi
   1c292:	e8 19 a1 ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   1c297:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1c29b:	48 89 c7             	mov    %rax,%rdi
   1c29e:	e8 9d 98 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c2a3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1c2a7:	48 89 c7             	mov    %rax,%rdi
   1c2aa:	e8 91 a2 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c2af:	48 8b 05 e2 dd 20 00 	mov    0x20dde2(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1c2b6:	48 89 c2             	mov    %rax,%rdx
   1c2b9:	48 8b 05 78 de 20 00 	mov    0x20de78(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1c2c0:	48 89 c6             	mov    %rax,%rsi
   1c2c3:	48 89 df             	mov    %rbx,%rdi
   1c2c6:	e8 45 a4 ff ff       	callq  16710 <__cxa_throw@plt>
				}
				__current_task.new_events |= EPOLLIN;
   1c2cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c2cf:	8b 40 2c             	mov    0x2c(%rax),%eax
   1c2d2:	89 c2                	mov    %eax,%edx
   1c2d4:	83 ca 01             	or     $0x1,%edx
   1c2d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c2db:	89 50 2c             	mov    %edx,0x2c(%rax)
				__current_task.cb_recv = cb;
   1c2de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c2e2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1c2e9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c2ed:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1c2f1:	48 89 50 10          	mov    %rdx,0x10(%rax)
				fill ? (__current_task.bits |= 2) : (__current_task.bits &= ~2);
   1c2f5:	80 7d 94 00          	cmpb   $0x0,-0x6c(%rbp)
   1c2f9:	74 13                	je     1c30e <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x126>
   1c2fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c2ff:	8b 00                	mov    (%rax),%eax
   1c301:	89 c2                	mov    %eax,%edx
   1c303:	83 ca 02             	or     $0x2,%edx
   1c306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c30a:	89 10                	mov    %edx,(%rax)
   1c30c:	eb 11                	jmp    1c31f <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x137>
   1c30e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c312:	8b 00                	mov    (%rax),%eax
   1c314:	89 c2                	mov    %eax,%edx
   1c316:	83 e2 fd             	and    $0xfffffffd,%edx
   1c319:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c31d:	89 10                	mov    %edx,(%rax)
				__current_task.r_buf = buf;
   1c31f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c323:	48 8d 50 30          	lea    0x30(%rax),%rdx
   1c327:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c32b:	48 89 c6             	mov    %rax,%rsi
   1c32e:	48 89 d7             	mov    %rdx,%rdi
   1c331:	e8 8a 94 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				__current_task.r_length = 0;
   1c336:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c33a:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%rax)
				__current_task.r_errno = 0;
   1c341:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c345:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)
				return;
   1c34c:	e9 ef 02 00 00       	jmpq   1c640 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x458>
			}
			taskInfo& i = this->info[s._s];
   1c351:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c355:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1c359:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1c35d:	48 89 c6             	mov    %rax,%rsi
   1c360:	48 89 d7             	mov    %rdx,%rdi
   1c363:	e8 48 9c ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1c368:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
			if (i.bits)
   1c36c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c370:	8b 00                	mov    (%rax),%eax
   1c372:	85 c0                	test   %eax,%eax
   1c374:	0f 84 41 01 00 00    	je     1c4bb <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x2d3>
			{
				if (i.new_events & EPOLLIN)
   1c37a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c37e:	8b 40 2c             	mov    0x2c(%rax),%eax
   1c381:	83 e0 01             	and    $0x1,%eax
   1c384:	84 c0                	test   %al,%al
   1c386:	74 75                	je     1c3fd <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x215>
				{
					throw Exception(s._s, "socket is already receiving");
   1c388:	bf 18 00 00 00       	mov    $0x18,%edi
   1c38d:	e8 9e a1 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1c392:	48 89 c3             	mov    %rax,%rbx
   1c395:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1c399:	48 89 c7             	mov    %rax,%rdi
   1c39c:	e8 4f a6 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1c3a1:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   1c3a5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1c3a9:	48 8d 35 91 7e 00 00 	lea    0x7e91(%rip),%rsi        # 24241 <_ZStL6ignore+0x77>
   1c3b0:	48 89 c7             	mov    %rax,%rdi
   1c3b3:	e8 28 9c ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1c3b8:	8b 45 90             	mov    -0x70(%rbp),%eax
   1c3bb:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1c3bf:	89 c6                	mov    %eax,%esi
   1c3c1:	48 89 df             	mov    %rbx,%rdi
   1c3c4:	e8 e7 9f ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   1c3c9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1c3cd:	48 89 c7             	mov    %rax,%rdi
   1c3d0:	e8 6b 97 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c3d5:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1c3d9:	48 89 c7             	mov    %rax,%rdi
   1c3dc:	e8 5f a1 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c3e1:	48 8b 05 b0 dc 20 00 	mov    0x20dcb0(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1c3e8:	48 89 c2             	mov    %rax,%rdx
   1c3eb:	48 8b 05 46 dd 20 00 	mov    0x20dd46(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1c3f2:	48 89 c6             	mov    %rax,%rsi
   1c3f5:	48 89 df             	mov    %rbx,%rdi
   1c3f8:	e8 13 a3 ff ff       	callq  16710 <__cxa_throw@plt>
				}
				i.events |= EPOLLIN;
   1c3fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c401:	8b 40 28             	mov    0x28(%rax),%eax
   1c404:	89 c2                	mov    %eax,%edx
   1c406:	83 ca 01             	or     $0x1,%edx
   1c409:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c40d:	89 50 28             	mov    %edx,0x28(%rax)
				i.new_events = i.events;
   1c410:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c414:	8b 50 28             	mov    0x28(%rax),%edx
   1c417:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c41b:	89 50 2c             	mov    %edx,0x2c(%rax)
				epoll_event ev;
				ev.data.fd = s._s;
   1c41e:	8b 45 90             	mov    -0x70(%rbp),%eax
   1c421:	89 45 b4             	mov    %eax,-0x4c(%rbp)
				ev.events = i.events;
   1c424:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c428:	8b 40 28             	mov    0x28(%rax),%eax
   1c42b:	89 45 b0             	mov    %eax,-0x50(%rbp)
				i.cb_recv = cb;
   1c42e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c432:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1c439:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c43d:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1c441:	48 89 50 10          	mov    %rdx,0x10(%rax)
				fill ? (i.bits |= 2) : (i.bits &= ~2);
   1c445:	80 7d 94 00          	cmpb   $0x0,-0x6c(%rbp)
   1c449:	74 13                	je     1c45e <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x276>
   1c44b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c44f:	8b 00                	mov    (%rax),%eax
   1c451:	89 c2                	mov    %eax,%edx
   1c453:	83 ca 02             	or     $0x2,%edx
   1c456:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c45a:	89 10                	mov    %edx,(%rax)
   1c45c:	eb 11                	jmp    1c46f <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x287>
   1c45e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c462:	8b 00                	mov    (%rax),%eax
   1c464:	89 c2                	mov    %eax,%edx
   1c466:	83 e2 fd             	and    $0xfffffffd,%edx
   1c469:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c46d:	89 10                	mov    %edx,(%rax)
				i.r_buf = buf;
   1c46f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c473:	48 8d 50 30          	lea    0x30(%rax),%rdx
   1c477:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c47b:	48 89 c6             	mov    %rax,%rsi
   1c47e:	48 89 d7             	mov    %rdx,%rdi
   1c481:	e8 3a 93 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.r_length = 0;
   1c486:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c48a:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%rax)
				i.r_errno = 0;
   1c491:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c495:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)
				epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._s, &ev);
   1c49c:	8b 55 90             	mov    -0x70(%rbp),%edx
   1c49f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c4a3:	8b 40 0c             	mov    0xc(%rax),%eax
   1c4a6:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1c4aa:	be 03 00 00 00       	mov    $0x3,%esi
   1c4af:	89 c7                	mov    %eax,%edi
   1c4b1:	e8 4a 9b ff ff       	callq  16000 <epoll_ctl@plt>
				__current_task.cb_recv = cb;
				fill ? (__current_task.bits |= 2) : (__current_task.bits &= ~2);
				__current_task.r_buf = buf;
				__current_task.r_length = 0;
				__current_task.r_errno = 0;
				return;
   1c4b6:	e9 85 01 00 00       	jmpq   1c640 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x458>
				i.r_errno = 0;
				epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._s, &ev);
			}
			else
			{
				i.bits = 1;
   1c4bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c4bf:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
				i.s = s._s;
   1c4c5:	8b 55 90             	mov    -0x70(%rbp),%edx
   1c4c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c4cc:	89 50 04             	mov    %edx,0x4(%rax)
				i.events = EPOLLIN;
   1c4cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c4d3:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
				i.new_events = EPOLLIN;
   1c4da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c4de:	c7 40 2c 01 00 00 00 	movl   $0x1,0x2c(%rax)
				i.cb_recv = cb;
   1c4e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c4e9:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1c4f0:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1c4f4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1c4f8:	48 89 50 10          	mov    %rdx,0x10(%rax)
				fill ? (i.bits |= 2) : (i.bits &= ~2);
   1c4fc:	80 7d 94 00          	cmpb   $0x0,-0x6c(%rbp)
   1c500:	74 13                	je     1c515 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x32d>
   1c502:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c506:	8b 00                	mov    (%rax),%eax
   1c508:	89 c2                	mov    %eax,%edx
   1c50a:	83 ca 02             	or     $0x2,%edx
   1c50d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c511:	89 10                	mov    %edx,(%rax)
   1c513:	eb 11                	jmp    1c526 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x33e>
   1c515:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c519:	8b 00                	mov    (%rax),%eax
   1c51b:	89 c2                	mov    %eax,%edx
   1c51d:	83 e2 fd             	and    $0xfffffffd,%edx
   1c520:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c524:	89 10                	mov    %edx,(%rax)
				i.r_buf = buf;
   1c526:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c52a:	48 8d 50 30          	lea    0x30(%rax),%rdx
   1c52e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c532:	48 89 c6             	mov    %rax,%rsi
   1c535:	48 89 d7             	mov    %rdx,%rdi
   1c538:	e8 83 92 ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.r_length = 0;
   1c53d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c541:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%rax)
				i.r_errno = 0;
   1c548:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c54c:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)
				//this->info[s._s] = i;
				epoll_event ev;
				ev.data.fd = s._s;
   1c553:	8b 45 90             	mov    -0x70(%rbp),%eax
   1c556:	89 45 a4             	mov    %eax,-0x5c(%rbp)
				ev.events = i.events;
   1c559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c55d:	8b 40 28             	mov    0x28(%rax),%eax
   1c560:	89 45 a0             	mov    %eax,-0x60(%rbp)
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._s, &ev)!=0)throw Exception(errno);
   1c563:	8b 55 90             	mov    -0x70(%rbp),%edx
   1c566:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c56a:	8b 40 0c             	mov    0xc(%rax),%eax
   1c56d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1c571:	be 01 00 00 00       	mov    $0x1,%esi
   1c576:	89 c7                	mov    %eax,%edi
   1c578:	e8 83 9a ff ff       	callq  16000 <epoll_ctl@plt>
   1c57d:	85 c0                	test   %eax,%eax
   1c57f:	0f 95 c0             	setne  %al
   1c582:	84 c0                	test   %al,%al
   1c584:	0f 84 b6 00 00 00    	je     1c640 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x458>
   1c58a:	bf 18 00 00 00       	mov    $0x18,%edi
   1c58f:	e8 9c 9f ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1c594:	48 89 c3             	mov    %rax,%rbx
   1c597:	e8 44 9e ff ff       	callq  163e0 <__errno_location@plt>
   1c59c:	8b 00                	mov    (%rax),%eax
   1c59e:	89 c6                	mov    %eax,%esi
   1c5a0:	48 89 df             	mov    %rbx,%rdi
   1c5a3:	e8 d8 90 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1c5a8:	48 8b 05 e9 da 20 00 	mov    0x20dae9(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1c5af:	48 89 c2             	mov    %rax,%rdx
   1c5b2:	48 8b 05 7f db 20 00 	mov    0x20db7f(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1c5b9:	48 89 c6             	mov    %rax,%rsi
   1c5bc:	48 89 df             	mov    %rbx,%rdi
   1c5bf:	e8 4c a1 ff ff       	callq  16710 <__cxa_throw@plt>
   1c5c4:	49 89 c4             	mov    %rax,%r12
			if (__current_task_!=NULL && s._s == __current_task_->s)
			{
				taskInfo& __current_task=*__current_task_;
				if (__current_task.new_events & EPOLLIN)
				{
					throw Exception(s._s, "socket is already receiving");
   1c5c7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1c5cb:	48 89 c7             	mov    %rax,%rdi
   1c5ce:	e8 6d 95 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c5d3:	eb 03                	jmp    1c5d8 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x3f0>
   1c5d5:	49 89 c4             	mov    %rax,%r12
   1c5d8:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1c5dc:	48 89 c7             	mov    %rax,%rdi
   1c5df:	e8 5c 9f ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c5e4:	48 89 df             	mov    %rbx,%rdi
   1c5e7:	e8 c4 9f ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c5ec:	4c 89 e0             	mov    %r12,%rax
   1c5ef:	48 89 c7             	mov    %rax,%rdi
   1c5f2:	e8 b9 a4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c5f7:	49 89 c4             	mov    %rax,%r12
			taskInfo& i = this->info[s._s];
			if (i.bits)
			{
				if (i.new_events & EPOLLIN)
				{
					throw Exception(s._s, "socket is already receiving");
   1c5fa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1c5fe:	48 89 c7             	mov    %rax,%rdi
   1c601:	e8 3a 95 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c606:	eb 03                	jmp    1c60b <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb+0x423>
   1c608:	49 89 c4             	mov    %rax,%r12
   1c60b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1c60f:	48 89 c7             	mov    %rax,%rdi
   1c612:	e8 29 9f ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c617:	48 89 df             	mov    %rbx,%rdi
   1c61a:	e8 91 9f ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c61f:	4c 89 e0             	mov    %r12,%rax
   1c622:	48 89 c7             	mov    %rax,%rdi
   1c625:	e8 86 a4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c62a:	49 89 c4             	mov    %rax,%r12
				i.r_errno = 0;
				//this->info[s._s] = i;
				epoll_event ev;
				ev.data.fd = s._s;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._s, &ev)!=0)throw Exception(errno);
   1c62d:	48 89 df             	mov    %rbx,%rdi
   1c630:	e8 7b 9f ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c635:	4c 89 e0             	mov    %r12,%rax
   1c638:	48 89 c7             	mov    %rax,%rdi
   1c63b:	e8 70 a4 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
				__current_task.cb_recv = cb;
				fill ? (__current_task.bits |= 2) : (__current_task.bits &= ~2);
				__current_task.r_buf = buf;
				__current_task.r_length = 0;
				__current_task.r_errno = 0;
				return;
   1c640:	90                   	nop
				ev.data.fd = s._s;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._s, &ev)!=0)throw Exception(errno);
			}
			//this->info[s._s] = i;
		}
   1c641:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   1c645:	5b                   	pop    %rbx
   1c646:	41 5c                	pop    %r12
   1c648:	5d                   	pop    %rbp
   1c649:	c3                   	retq   

000000000001c64a <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE>:
		int SocketManager::EndRecv(Socket s)
		{
   1c64a:	55                   	push   %rbp
   1c64b:	48 89 e5             	mov    %rsp,%rbp
   1c64e:	41 54                	push   %r12
   1c650:	53                   	push   %rbx
   1c651:	48 83 ec 20          	sub    $0x20,%rsp
   1c655:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1c659:	89 75 d0             	mov    %esi,-0x30(%rbp)
			taskInfo *i = ((__current_task_!=NULL && s._s == __current_task_->s) ? __current_task_
					: &this->info[s._s]);
   1c65c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c660:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c664:	48 85 c0             	test   %rax,%rax
   1c667:	74 1c                	je     1c685 <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE+0x3b>
   1c669:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1c66c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c670:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c674:	8b 40 04             	mov    0x4(%rax),%eax
   1c677:	39 c2                	cmp    %eax,%edx
   1c679:	75 0a                	jne    1c685 <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE+0x3b>
   1c67b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c67f:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c683:	eb 17                	jmp    1c69c <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE+0x52>
   1c685:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c689:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1c68d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1c691:	48 89 c6             	mov    %rax,%rsi
   1c694:	48 89 d7             	mov    %rdx,%rdi
   1c697:	e8 14 99 ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1c69c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
			//if(!i.initialized)throw Exception("");
			if (i->r_errno != 0) throw Exception(i->r_errno);
   1c6a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6a4:	8b 40 78             	mov    0x78(%rax),%eax
   1c6a7:	85 c0                	test   %eax,%eax
   1c6a9:	74 3a                	je     1c6e5 <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE+0x9b>
   1c6ab:	bf 18 00 00 00       	mov    $0x18,%edi
   1c6b0:	e8 7b 9e ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1c6b5:	48 89 c3             	mov    %rax,%rbx
   1c6b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6bc:	8b 40 78             	mov    0x78(%rax),%eax
   1c6bf:	89 c6                	mov    %eax,%esi
   1c6c1:	48 89 df             	mov    %rbx,%rdi
   1c6c4:	e8 b7 8f ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1c6c9:	48 8b 05 c8 d9 20 00 	mov    0x20d9c8(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1c6d0:	48 89 c2             	mov    %rax,%rdx
   1c6d3:	48 8b 05 5e da 20 00 	mov    0x20da5e(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1c6da:	48 89 c6             	mov    %rax,%rsi
   1c6dd:	48 89 df             	mov    %rbx,%rdi
   1c6e0:	e8 2b a0 ff ff       	callq  16710 <__cxa_throw@plt>
			if (i->bits & 2) return i->r_length;
   1c6e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6e9:	8b 00                	mov    (%rax),%eax
   1c6eb:	83 e0 02             	and    $0x2,%eax
   1c6ee:	85 c0                	test   %eax,%eax
   1c6f0:	74 09                	je     1c6fb <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE+0xb1>
   1c6f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6f6:	8b 40 70             	mov    0x70(%rax),%eax
   1c6f9:	eb 67                	jmp    1c762 <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE+0x118>
			else
			{
				int tmp = recv(s._s, i->r_buf.Data, i->r_buf.Length, 0);
   1c6fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6ff:	8b 40 4c             	mov    0x4c(%rax),%eax
   1c702:	48 63 d0             	movslq %eax,%rdx
   1c705:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c709:	48 8b 70 40          	mov    0x40(%rax),%rsi
   1c70d:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1c710:	b9 00 00 00 00       	mov    $0x0,%ecx
   1c715:	89 c7                	mov    %eax,%edi
   1c717:	e8 d4 90 ff ff       	callq  157f0 <recv@plt>
   1c71c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
				if (tmp < 0) throw Exception(errno);
   1c71f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   1c723:	79 3a                	jns    1c75f <_ZN6xaxaxa7Sockets13SocketManager7EndRecvENS0_6SocketE+0x115>
   1c725:	bf 18 00 00 00       	mov    $0x18,%edi
   1c72a:	e8 01 9e ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1c72f:	48 89 c3             	mov    %rax,%rbx
   1c732:	e8 a9 9c ff ff       	callq  163e0 <__errno_location@plt>
   1c737:	8b 00                	mov    (%rax),%eax
   1c739:	89 c6                	mov    %eax,%esi
   1c73b:	48 89 df             	mov    %rbx,%rdi
   1c73e:	e8 3d 8f ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1c743:	48 8b 05 4e d9 20 00 	mov    0x20d94e(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1c74a:	48 89 c2             	mov    %rax,%rdx
   1c74d:	48 8b 05 e4 d9 20 00 	mov    0x20d9e4(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1c754:	48 89 c6             	mov    %rax,%rsi
   1c757:	48 89 df             	mov    %rbx,%rdi
   1c75a:	e8 b1 9f ff ff       	callq  16710 <__cxa_throw@plt>
				else
					return tmp;
   1c75f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
			}
		}
   1c762:	48 83 c4 20          	add    $0x20,%rsp
   1c766:	5b                   	pop    %rbx
   1c767:	41 5c                	pop    %r12
   1c769:	5d                   	pop    %rbp
   1c76a:	c3                   	retq   
   1c76b:	49 89 c4             	mov    %rax,%r12
		int SocketManager::EndRecv(Socket s)
		{
			taskInfo *i = ((__current_task_!=NULL && s._s == __current_task_->s) ? __current_task_
					: &this->info[s._s]);
			//if(!i.initialized)throw Exception("");
			if (i->r_errno != 0) throw Exception(i->r_errno);
   1c76e:	48 89 df             	mov    %rbx,%rdi
   1c771:	e8 3a 9e ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c776:	4c 89 e0             	mov    %r12,%rax
   1c779:	48 89 c7             	mov    %rax,%rdi
   1c77c:	e8 2f a3 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c781:	49 89 c4             	mov    %rax,%r12
			if (i->bits & 2) return i->r_length;
			else
			{
				int tmp = recv(s._s, i->r_buf.Data, i->r_buf.Length, 0);
				if (tmp < 0) throw Exception(errno);
   1c784:	48 89 df             	mov    %rbx,%rdi
   1c787:	e8 24 9e ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1c78c:	4c 89 e0             	mov    %r12,%rax
   1c78f:	48 89 c7             	mov    %rax,%rdi
   1c792:	e8 19 a3 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1c797:	90                   	nop

000000000001c798 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb>:
			}
		}

		void SocketManager::BeginSend(Socket s, Buffer buf, Callback cb,
				bool fill)
		{
   1c798:	55                   	push   %rbp
   1c799:	48 89 e5             	mov    %rsp,%rbp
   1c79c:	41 54                	push   %r12
   1c79e:	53                   	push   %rbx
   1c79f:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   1c7a3:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   1c7a7:	89 75 90             	mov    %esi,-0x70(%rbp)
   1c7aa:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   1c7ae:	48 89 c8             	mov    %rcx,%rax
   1c7b1:	4c 89 c1             	mov    %r8,%rcx
   1c7b4:	44 89 ca             	mov    %r9d,%edx
   1c7b7:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1c7be:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   1c7c2:	88 55 94             	mov    %dl,-0x6c(%rbp)
			if (__current_task_!=NULL && s._s == __current_task_->s)
   1c7c5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c7c9:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c7cd:	48 85 c0             	test   %rax,%rax
   1c7d0:	0f 84 2b 01 00 00    	je     1c901 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x169>
   1c7d6:	8b 55 90             	mov    -0x70(%rbp),%edx
   1c7d9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c7dd:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c7e1:	8b 40 04             	mov    0x4(%rax),%eax
   1c7e4:	39 c2                	cmp    %eax,%edx
   1c7e6:	0f 85 15 01 00 00    	jne    1c901 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x169>
			{
				taskInfo& __current_task=*__current_task_;
   1c7ec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c7f0:	48 8b 40 70          	mov    0x70(%rax),%rax
   1c7f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
				if (__current_task.new_events & EPOLLOUT)
   1c7f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c7fc:	8b 40 2c             	mov    0x2c(%rax),%eax
   1c7ff:	83 e0 04             	and    $0x4,%eax
   1c802:	85 c0                	test   %eax,%eax
   1c804:	74 75                	je     1c87b <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0xe3>
				{
					throw Exception(s._s, "socket is already sending");
   1c806:	bf 18 00 00 00       	mov    $0x18,%edi
   1c80b:	e8 20 9d ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1c810:	48 89 c3             	mov    %rax,%rbx
   1c813:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1c817:	48 89 c7             	mov    %rax,%rdi
   1c81a:	e8 d1 a1 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1c81f:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
   1c823:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1c827:	48 8d 35 2f 7a 00 00 	lea    0x7a2f(%rip),%rsi        # 2425d <_ZStL6ignore+0x93>
   1c82e:	48 89 c7             	mov    %rax,%rdi
   1c831:	e8 aa 97 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1c836:	8b 45 90             	mov    -0x70(%rbp),%eax
   1c839:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1c83d:	89 c6                	mov    %eax,%esi
   1c83f:	48 89 df             	mov    %rbx,%rdi
   1c842:	e8 69 9b ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   1c847:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1c84b:	48 89 c7             	mov    %rax,%rdi
   1c84e:	e8 ed 92 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c853:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1c857:	48 89 c7             	mov    %rax,%rdi
   1c85a:	e8 e1 9c ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c85f:	48 8b 05 32 d8 20 00 	mov    0x20d832(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1c866:	48 89 c2             	mov    %rax,%rdx
   1c869:	48 8b 05 c8 d8 20 00 	mov    0x20d8c8(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1c870:	48 89 c6             	mov    %rax,%rsi
   1c873:	48 89 df             	mov    %rbx,%rdi
   1c876:	e8 95 9e ff ff       	callq  16710 <__cxa_throw@plt>
				}
				__current_task.new_events |= EPOLLOUT;
   1c87b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c87f:	8b 40 2c             	mov    0x2c(%rax),%eax
   1c882:	89 c2                	mov    %eax,%edx
   1c884:	83 ca 04             	or     $0x4,%edx
   1c887:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c88b:	89 50 2c             	mov    %edx,0x2c(%rax)
				__current_task.cb_send = cb;
   1c88e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c892:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1c899:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c89d:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1c8a1:	48 89 50 20          	mov    %rdx,0x20(%rax)
				fill ? (__current_task.bits |= 4) : (__current_task.bits &= ~4);
   1c8a5:	80 7d 94 00          	cmpb   $0x0,-0x6c(%rbp)
   1c8a9:	74 13                	je     1c8be <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x126>
   1c8ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8af:	8b 00                	mov    (%rax),%eax
   1c8b1:	89 c2                	mov    %eax,%edx
   1c8b3:	83 ca 04             	or     $0x4,%edx
   1c8b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8ba:	89 10                	mov    %edx,(%rax)
   1c8bc:	eb 11                	jmp    1c8cf <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x137>
   1c8be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8c2:	8b 00                	mov    (%rax),%eax
   1c8c4:	89 c2                	mov    %eax,%edx
   1c8c6:	83 e2 fb             	and    $0xfffffffb,%edx
   1c8c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8cd:	89 10                	mov    %edx,(%rax)
				__current_task.w_buf = buf;
   1c8cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8d3:	48 8d 50 50          	lea    0x50(%rax),%rdx
   1c8d7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1c8db:	48 89 c6             	mov    %rax,%rsi
   1c8de:	48 89 d7             	mov    %rdx,%rdi
   1c8e1:	e8 da 8e ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				__current_task.w_length = 0;
   1c8e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8ea:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%rax)
				__current_task.w_errno = 0;
   1c8f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8f5:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)
				return;
   1c8fc:	e9 ef 02 00 00       	jmpq   1cbf0 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x458>
			}
			taskInfo& i = this->info[s._s];
   1c901:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1c905:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1c909:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1c90d:	48 89 c6             	mov    %rax,%rsi
   1c910:	48 89 d7             	mov    %rdx,%rdi
   1c913:	e8 98 96 ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1c918:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
			if (i.bits)
   1c91c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c920:	8b 00                	mov    (%rax),%eax
   1c922:	85 c0                	test   %eax,%eax
   1c924:	0f 84 41 01 00 00    	je     1ca6b <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x2d3>
			{
				if (i.new_events & EPOLLOUT)
   1c92a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c92e:	8b 40 2c             	mov    0x2c(%rax),%eax
   1c931:	83 e0 04             	and    $0x4,%eax
   1c934:	85 c0                	test   %eax,%eax
   1c936:	74 75                	je     1c9ad <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x215>
				{
					throw Exception(s._s, "socket is already sending");
   1c938:	bf 18 00 00 00       	mov    $0x18,%edi
   1c93d:	e8 ee 9b ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1c942:	48 89 c3             	mov    %rax,%rbx
   1c945:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1c949:	48 89 c7             	mov    %rax,%rdi
   1c94c:	e8 9f a0 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1c951:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   1c955:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1c959:	48 8d 35 fd 78 00 00 	lea    0x78fd(%rip),%rsi        # 2425d <_ZStL6ignore+0x93>
   1c960:	48 89 c7             	mov    %rax,%rdi
   1c963:	e8 78 96 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1c968:	8b 45 90             	mov    -0x70(%rbp),%eax
   1c96b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1c96f:	89 c6                	mov    %eax,%esi
   1c971:	48 89 df             	mov    %rbx,%rdi
   1c974:	e8 37 9a ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   1c979:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1c97d:	48 89 c7             	mov    %rax,%rdi
   1c980:	e8 bb 91 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1c985:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1c989:	48 89 c7             	mov    %rax,%rdi
   1c98c:	e8 af 9b ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1c991:	48 8b 05 00 d7 20 00 	mov    0x20d700(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1c998:	48 89 c2             	mov    %rax,%rdx
   1c99b:	48 8b 05 96 d7 20 00 	mov    0x20d796(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1c9a2:	48 89 c6             	mov    %rax,%rsi
   1c9a5:	48 89 df             	mov    %rbx,%rdi
   1c9a8:	e8 63 9d ff ff       	callq  16710 <__cxa_throw@plt>
				}
				i.events |= EPOLLOUT;
   1c9ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9b1:	8b 40 28             	mov    0x28(%rax),%eax
   1c9b4:	89 c2                	mov    %eax,%edx
   1c9b6:	83 ca 04             	or     $0x4,%edx
   1c9b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9bd:	89 50 28             	mov    %edx,0x28(%rax)
				i.new_events = i.events;
   1c9c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9c4:	8b 50 28             	mov    0x28(%rax),%edx
   1c9c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9cb:	89 50 2c             	mov    %edx,0x2c(%rax)
				epoll_event ev;
				ev.data.fd = s._s;
   1c9ce:	8b 45 90             	mov    -0x70(%rbp),%eax
   1c9d1:	89 45 b4             	mov    %eax,-0x4c(%rbp)
				ev.events = i.events;
   1c9d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9d8:	8b 40 28             	mov    0x28(%rax),%eax
   1c9db:	89 45 b0             	mov    %eax,-0x50(%rbp)
				i.cb_send = cb;
   1c9de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9e2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1c9e9:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1c9ed:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1c9f1:	48 89 50 20          	mov    %rdx,0x20(%rax)
				fill ? (i.bits |= 4) : (i.bits &= ~4);
   1c9f5:	80 7d 94 00          	cmpb   $0x0,-0x6c(%rbp)
   1c9f9:	74 13                	je     1ca0e <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x276>
   1c9fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c9ff:	8b 00                	mov    (%rax),%eax
   1ca01:	89 c2                	mov    %eax,%edx
   1ca03:	83 ca 04             	or     $0x4,%edx
   1ca06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca0a:	89 10                	mov    %edx,(%rax)
   1ca0c:	eb 11                	jmp    1ca1f <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x287>
   1ca0e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca12:	8b 00                	mov    (%rax),%eax
   1ca14:	89 c2                	mov    %eax,%edx
   1ca16:	83 e2 fb             	and    $0xfffffffb,%edx
   1ca19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca1d:	89 10                	mov    %edx,(%rax)
				i.w_buf = buf;
   1ca1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca23:	48 8d 50 50          	lea    0x50(%rax),%rdx
   1ca27:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ca2b:	48 89 c6             	mov    %rax,%rsi
   1ca2e:	48 89 d7             	mov    %rdx,%rdi
   1ca31:	e8 8a 8d ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.w_length = 0;
   1ca36:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca3a:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%rax)
				i.w_errno = 0;
   1ca41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca45:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)
				epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._s, &ev);
   1ca4c:	8b 55 90             	mov    -0x70(%rbp),%edx
   1ca4f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1ca53:	8b 40 0c             	mov    0xc(%rax),%eax
   1ca56:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1ca5a:	be 03 00 00 00       	mov    $0x3,%esi
   1ca5f:	89 c7                	mov    %eax,%edi
   1ca61:	e8 9a 95 ff ff       	callq  16000 <epoll_ctl@plt>
				__current_task.cb_send = cb;
				fill ? (__current_task.bits |= 4) : (__current_task.bits &= ~4);
				__current_task.w_buf = buf;
				__current_task.w_length = 0;
				__current_task.w_errno = 0;
				return;
   1ca66:	e9 85 01 00 00       	jmpq   1cbf0 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x458>
				i.w_errno = 0;
				epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._s, &ev);
			}
			else
			{
				i.bits = 1;
   1ca6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca6f:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
				i.s = s._s;
   1ca75:	8b 55 90             	mov    -0x70(%rbp),%edx
   1ca78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca7c:	89 50 04             	mov    %edx,0x4(%rax)
				i.events = EPOLLOUT;
   1ca7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca83:	c7 40 28 04 00 00 00 	movl   $0x4,0x28(%rax)
				i.new_events = EPOLLOUT;
   1ca8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca8e:	c7 40 2c 04 00 00 00 	movl   $0x4,0x2c(%rax)
				i.cb_send = cb;
   1ca95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca99:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1caa0:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1caa4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1caa8:	48 89 50 20          	mov    %rdx,0x20(%rax)
				fill ? (i.bits |= 4) : (i.bits &= ~4);
   1caac:	80 7d 94 00          	cmpb   $0x0,-0x6c(%rbp)
   1cab0:	74 13                	je     1cac5 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x32d>
   1cab2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cab6:	8b 00                	mov    (%rax),%eax
   1cab8:	89 c2                	mov    %eax,%edx
   1caba:	83 ca 04             	or     $0x4,%edx
   1cabd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cac1:	89 10                	mov    %edx,(%rax)
   1cac3:	eb 11                	jmp    1cad6 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x33e>
   1cac5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cac9:	8b 00                	mov    (%rax),%eax
   1cacb:	89 c2                	mov    %eax,%edx
   1cacd:	83 e2 fb             	and    $0xfffffffb,%edx
   1cad0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cad4:	89 10                	mov    %edx,(%rax)
				i.w_buf = buf;
   1cad6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cada:	48 8d 50 50          	lea    0x50(%rax),%rdx
   1cade:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1cae2:	48 89 c6             	mov    %rax,%rsi
   1cae5:	48 89 d7             	mov    %rdx,%rdi
   1cae8:	e8 d3 8c ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
				i.w_length = 0;
   1caed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1caf1:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%rax)
				i.w_errno = 0;
   1caf8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cafc:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)
				//this->info[s._s] = i;
				epoll_event ev;
				ev.data.fd = s._s;
   1cb03:	8b 45 90             	mov    -0x70(%rbp),%eax
   1cb06:	89 45 a4             	mov    %eax,-0x5c(%rbp)
				ev.events = i.events;
   1cb09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cb0d:	8b 40 28             	mov    0x28(%rax),%eax
   1cb10:	89 45 a0             	mov    %eax,-0x60(%rbp)
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._s, &ev)!=0)throw Exception(errno);
   1cb13:	8b 55 90             	mov    -0x70(%rbp),%edx
   1cb16:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1cb1a:	8b 40 0c             	mov    0xc(%rax),%eax
   1cb1d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1cb21:	be 01 00 00 00       	mov    $0x1,%esi
   1cb26:	89 c7                	mov    %eax,%edi
   1cb28:	e8 d3 94 ff ff       	callq  16000 <epoll_ctl@plt>
   1cb2d:	85 c0                	test   %eax,%eax
   1cb2f:	0f 95 c0             	setne  %al
   1cb32:	84 c0                	test   %al,%al
   1cb34:	0f 84 b6 00 00 00    	je     1cbf0 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x458>
   1cb3a:	bf 18 00 00 00       	mov    $0x18,%edi
   1cb3f:	e8 ec 99 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1cb44:	48 89 c3             	mov    %rax,%rbx
   1cb47:	e8 94 98 ff ff       	callq  163e0 <__errno_location@plt>
   1cb4c:	8b 00                	mov    (%rax),%eax
   1cb4e:	89 c6                	mov    %eax,%esi
   1cb50:	48 89 df             	mov    %rbx,%rdi
   1cb53:	e8 28 8b ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1cb58:	48 8b 05 39 d5 20 00 	mov    0x20d539(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1cb5f:	48 89 c2             	mov    %rax,%rdx
   1cb62:	48 8b 05 cf d5 20 00 	mov    0x20d5cf(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1cb69:	48 89 c6             	mov    %rax,%rsi
   1cb6c:	48 89 df             	mov    %rbx,%rdi
   1cb6f:	e8 9c 9b ff ff       	callq  16710 <__cxa_throw@plt>
   1cb74:	49 89 c4             	mov    %rax,%r12
			if (__current_task_!=NULL && s._s == __current_task_->s)
			{
				taskInfo& __current_task=*__current_task_;
				if (__current_task.new_events & EPOLLOUT)
				{
					throw Exception(s._s, "socket is already sending");
   1cb77:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1cb7b:	48 89 c7             	mov    %rax,%rdi
   1cb7e:	e8 bd 8f ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1cb83:	eb 03                	jmp    1cb88 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x3f0>
   1cb85:	49 89 c4             	mov    %rax,%r12
   1cb88:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1cb8c:	48 89 c7             	mov    %rax,%rdi
   1cb8f:	e8 ac 99 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1cb94:	48 89 df             	mov    %rbx,%rdi
   1cb97:	e8 14 9a ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1cb9c:	4c 89 e0             	mov    %r12,%rax
   1cb9f:	48 89 c7             	mov    %rax,%rdi
   1cba2:	e8 09 9f ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1cba7:	49 89 c4             	mov    %rax,%r12
			taskInfo& i = this->info[s._s];
			if (i.bits)
			{
				if (i.new_events & EPOLLOUT)
				{
					throw Exception(s._s, "socket is already sending");
   1cbaa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cbae:	48 89 c7             	mov    %rax,%rdi
   1cbb1:	e8 8a 8f ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1cbb6:	eb 03                	jmp    1cbbb <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb+0x423>
   1cbb8:	49 89 c4             	mov    %rax,%r12
   1cbbb:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1cbbf:	48 89 c7             	mov    %rax,%rdi
   1cbc2:	e8 79 99 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1cbc7:	48 89 df             	mov    %rbx,%rdi
   1cbca:	e8 e1 99 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1cbcf:	4c 89 e0             	mov    %r12,%rax
   1cbd2:	48 89 c7             	mov    %rax,%rdi
   1cbd5:	e8 d6 9e ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1cbda:	49 89 c4             	mov    %rax,%r12
				i.w_errno = 0;
				//this->info[s._s] = i;
				epoll_event ev;
				ev.data.fd = s._s;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._s, &ev)!=0)throw Exception(errno);
   1cbdd:	48 89 df             	mov    %rbx,%rdi
   1cbe0:	e8 cb 99 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1cbe5:	4c 89 e0             	mov    %r12,%rax
   1cbe8:	48 89 c7             	mov    %rax,%rdi
   1cbeb:	e8 c0 9e ff ff       	callq  16ab0 <_Unwind_Resume@plt>
				__current_task.cb_send = cb;
				fill ? (__current_task.bits |= 4) : (__current_task.bits &= ~4);
				__current_task.w_buf = buf;
				__current_task.w_length = 0;
				__current_task.w_errno = 0;
				return;
   1cbf0:	90                   	nop
				ev.data.fd = s._s;
				ev.events = i.events;
				if(epoll_ctl(this->epollfd, EPOLL_CTL_ADD, s._s, &ev)!=0)throw Exception(errno);
			}
			//this->info[s._s] = i;
		}
   1cbf1:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   1cbf5:	5b                   	pop    %rbx
   1cbf6:	41 5c                	pop    %r12
   1cbf8:	5d                   	pop    %rbp
   1cbf9:	c3                   	retq   

000000000001cbfa <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE>:
		int SocketManager::EndSend(Socket s)
		{
   1cbfa:	55                   	push   %rbp
   1cbfb:	48 89 e5             	mov    %rsp,%rbp
   1cbfe:	41 54                	push   %r12
   1cc00:	53                   	push   %rbx
   1cc01:	48 83 ec 20          	sub    $0x20,%rsp
   1cc05:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1cc09:	89 75 d0             	mov    %esi,-0x30(%rbp)
			taskInfo *i = ((__current_task_!=NULL && s._s == __current_task_->s) ? __current_task_
								: &this->info[s._s]);
   1cc0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cc10:	48 8b 40 70          	mov    0x70(%rax),%rax
   1cc14:	48 85 c0             	test   %rax,%rax
   1cc17:	74 1c                	je     1cc35 <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE+0x3b>
   1cc19:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1cc1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cc20:	48 8b 40 70          	mov    0x70(%rax),%rax
   1cc24:	8b 40 04             	mov    0x4(%rax),%eax
   1cc27:	39 c2                	cmp    %eax,%edx
   1cc29:	75 0a                	jne    1cc35 <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE+0x3b>
   1cc2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cc2f:	48 8b 40 70          	mov    0x70(%rax),%rax
   1cc33:	eb 17                	jmp    1cc4c <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE+0x52>
   1cc35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cc39:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1cc3d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cc41:	48 89 c6             	mov    %rax,%rsi
   1cc44:	48 89 d7             	mov    %rdx,%rdi
   1cc47:	e8 64 93 ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1cc4c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
			if (i->w_errno != 0) throw Exception(i->w_errno);
   1cc50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cc54:	8b 40 7c             	mov    0x7c(%rax),%eax
   1cc57:	85 c0                	test   %eax,%eax
   1cc59:	74 3a                	je     1cc95 <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE+0x9b>
   1cc5b:	bf 18 00 00 00       	mov    $0x18,%edi
   1cc60:	e8 cb 98 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1cc65:	48 89 c3             	mov    %rax,%rbx
   1cc68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cc6c:	8b 40 7c             	mov    0x7c(%rax),%eax
   1cc6f:	89 c6                	mov    %eax,%esi
   1cc71:	48 89 df             	mov    %rbx,%rdi
   1cc74:	e8 07 8a ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1cc79:	48 8b 05 18 d4 20 00 	mov    0x20d418(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1cc80:	48 89 c2             	mov    %rax,%rdx
   1cc83:	48 8b 05 ae d4 20 00 	mov    0x20d4ae(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1cc8a:	48 89 c6             	mov    %rax,%rsi
   1cc8d:	48 89 df             	mov    %rbx,%rdi
   1cc90:	e8 7b 9a ff ff       	callq  16710 <__cxa_throw@plt>
			//if(!i.initialized)throw Exception("");
			if (i->bits & 4) return i->w_length;
   1cc95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cc99:	8b 00                	mov    (%rax),%eax
   1cc9b:	83 e0 04             	and    $0x4,%eax
   1cc9e:	85 c0                	test   %eax,%eax
   1cca0:	74 09                	je     1ccab <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE+0xb1>
   1cca2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cca6:	8b 40 74             	mov    0x74(%rax),%eax
   1cca9:	eb 67                	jmp    1cd12 <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE+0x118>
			else
			{
				int tmp = send(s._s, i->w_buf.Data, i->w_buf.Length, 0);
   1ccab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ccaf:	8b 40 6c             	mov    0x6c(%rax),%eax
   1ccb2:	48 63 d0             	movslq %eax,%rdx
   1ccb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ccb9:	48 8b 70 60          	mov    0x60(%rax),%rsi
   1ccbd:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1ccc0:	b9 00 00 00 00       	mov    $0x0,%ecx
   1ccc5:	89 c7                	mov    %eax,%edi
   1ccc7:	e8 84 98 ff ff       	callq  16550 <send@plt>
   1cccc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
				if (tmp < 0) throw Exception(errno);
   1cccf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   1ccd3:	79 3a                	jns    1cd0f <_ZN6xaxaxa7Sockets13SocketManager7EndSendENS0_6SocketE+0x115>
   1ccd5:	bf 18 00 00 00       	mov    $0x18,%edi
   1ccda:	e8 51 98 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1ccdf:	48 89 c3             	mov    %rax,%rbx
   1cce2:	e8 f9 96 ff ff       	callq  163e0 <__errno_location@plt>
   1cce7:	8b 00                	mov    (%rax),%eax
   1cce9:	89 c6                	mov    %eax,%esi
   1cceb:	48 89 df             	mov    %rbx,%rdi
   1ccee:	e8 8d 89 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1ccf3:	48 8b 05 9e d3 20 00 	mov    0x20d39e(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1ccfa:	48 89 c2             	mov    %rax,%rdx
   1ccfd:	48 8b 05 34 d4 20 00 	mov    0x20d434(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1cd04:	48 89 c6             	mov    %rax,%rsi
   1cd07:	48 89 df             	mov    %rbx,%rdi
   1cd0a:	e8 01 9a ff ff       	callq  16710 <__cxa_throw@plt>
				else
					return tmp;
   1cd0f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
			}
		}
   1cd12:	48 83 c4 20          	add    $0x20,%rsp
   1cd16:	5b                   	pop    %rbx
   1cd17:	41 5c                	pop    %r12
   1cd19:	5d                   	pop    %rbp
   1cd1a:	c3                   	retq   
   1cd1b:	49 89 c4             	mov    %rax,%r12
		}
		int SocketManager::EndSend(Socket s)
		{
			taskInfo *i = ((__current_task_!=NULL && s._s == __current_task_->s) ? __current_task_
								: &this->info[s._s]);
			if (i->w_errno != 0) throw Exception(i->w_errno);
   1cd1e:	48 89 df             	mov    %rbx,%rdi
   1cd21:	e8 8a 98 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1cd26:	4c 89 e0             	mov    %r12,%rax
   1cd29:	48 89 c7             	mov    %rax,%rdi
   1cd2c:	e8 7f 9d ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1cd31:	49 89 c4             	mov    %rax,%r12
			//if(!i.initialized)throw Exception("");
			if (i->bits & 4) return i->w_length;
			else
			{
				int tmp = send(s._s, i->w_buf.Data, i->w_buf.Length, 0);
				if (tmp < 0) throw Exception(errno);
   1cd34:	48 89 df             	mov    %rbx,%rdi
   1cd37:	e8 74 98 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1cd3c:	4c 89 e0             	mov    %r12,%rax
   1cd3f:	48 89 c7             	mov    %rax,%rdi
   1cd42:	e8 69 9d ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1cd47:	90                   	nop

000000000001cd48 <_ZN6xaxaxa7Sockets13SocketManager11BeginAcceptENS0_6SocketENS1_8CallbackE>:
				else
					return tmp;
			}
		}
		void SocketManager::BeginAccept(Socket s, Callback cb)
		{
   1cd48:	55                   	push   %rbp
   1cd49:	48 89 e5             	mov    %rsp,%rbp
   1cd4c:	53                   	push   %rbx
   1cd4d:	48 83 ec 48          	sub    $0x48,%rsp
   1cd51:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1cd55:	89 75 c0             	mov    %esi,-0x40(%rbp)
   1cd58:	48 89 c8             	mov    %rcx,%rax
   1cd5b:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
   1cd5f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
			BeginRecv(s, Buffer(), cb);
   1cd63:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cd67:	48 89 c7             	mov    %rax,%rdi
   1cd6a:	e8 b1 93 ff ff       	callq  16120 <_ZN6xaxaxa6BufferC1Ev@plt>
   1cd6f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1cd73:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1cd77:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1cd7b:	8b 75 c0             	mov    -0x40(%rbp),%esi
   1cd7e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1cd82:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   1cd88:	49 89 f8             	mov    %rdi,%r8
   1cd8b:	48 89 c7             	mov    %rax,%rdi
   1cd8e:	e8 fd 94 ff ff       	callq  16290 <_ZN6xaxaxa7Sockets13SocketManager9BeginRecvENS0_6SocketENS_6BufferENS1_8CallbackEb@plt>
   1cd93:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cd97:	48 89 c7             	mov    %rax,%rdi
   1cd9a:	e8 91 87 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
		}
   1cd9f:	48 83 c4 48          	add    $0x48,%rsp
   1cda3:	5b                   	pop    %rbx
   1cda4:	5d                   	pop    %rbp
   1cda5:	c3                   	retq   
   1cda6:	48 89 c3             	mov    %rax,%rbx
					return tmp;
			}
		}
		void SocketManager::BeginAccept(Socket s, Callback cb)
		{
			BeginRecv(s, Buffer(), cb);
   1cda9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cdad:	48 89 c7             	mov    %rax,%rdi
   1cdb0:	e8 7b 87 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1cdb5:	48 89 d8             	mov    %rbx,%rax
   1cdb8:	48 89 c7             	mov    %rax,%rdi
   1cdbb:	e8 f0 9c ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001cdc0 <_ZN6xaxaxa7Sockets13SocketManager9EndAcceptENS0_6SocketEi>:
		}
		Socket SocketManager::EndAccept(Socket s, int flags)
		{
   1cdc0:	55                   	push   %rbp
   1cdc1:	48 89 e5             	mov    %rsp,%rbp
   1cdc4:	48 83 ec 10          	sub    $0x10,%rsp
   1cdc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cdcc:	89 75 f0             	mov    %esi,-0x10(%rbp)
   1cdcf:	89 55 f4             	mov    %edx,-0xc(%rbp)
			return s.Accept(flags);
   1cdd2:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1cdd5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1cdd9:	89 d6                	mov    %edx,%esi
   1cddb:	48 89 c7             	mov    %rax,%rdi
   1cdde:	e8 4d 92 ff ff       	callq  16030 <_ZN6xaxaxa7Sockets6Socket6AcceptEi@plt>
		}
   1cde3:	c9                   	leaveq 
   1cde4:	c3                   	retq   
   1cde5:	90                   	nop

000000000001cde6 <_ZN6xaxaxa7Sockets13SocketManager12BeginConnectENS0_6SocketEPNS0_8EndPointENS1_8CallbackE>:
		void SocketManager::BeginConnect(Socket s, EndPoint* ep, Callback cb)
		{
   1cde6:	55                   	push   %rbp
   1cde7:	48 89 e5             	mov    %rsp,%rbp
   1cdea:	53                   	push   %rbx
   1cdeb:	48 83 ec 58          	sub    $0x58,%rsp
   1cdef:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1cdf3:	89 75 c0             	mov    %esi,-0x40(%rbp)
   1cdf6:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1cdfa:	48 89 c8             	mov    %rcx,%rax
   1cdfd:	4c 89 c2             	mov    %r8,%rdx
   1ce00:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1ce04:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
			s.SetFlags(s.GetFlags() | O_NONBLOCK);
   1ce08:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1ce0c:	48 89 c7             	mov    %rax,%rdi
   1ce0f:	e8 cc 89 ff ff       	callq  157e0 <_ZN6xaxaxa7Sockets6Socket8GetFlagsEv@plt>
   1ce14:	89 c2                	mov    %eax,%edx
   1ce16:	80 ce 08             	or     $0x8,%dh
   1ce19:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1ce1d:	89 d6                	mov    %edx,%esi
   1ce1f:	48 89 c7             	mov    %rax,%rdi
   1ce22:	e8 a9 93 ff ff       	callq  161d0 <_ZN6xaxaxa7Sockets6Socket8SetFlagsEi@plt>
			s.Connect(ep);
   1ce27:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1ce2b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1ce2f:	48 89 d6             	mov    %rdx,%rsi
   1ce32:	48 89 c7             	mov    %rax,%rdi
   1ce35:	e8 56 93 ff ff       	callq  16190 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE@plt>
			BeginSend(s, Buffer(), cb, false);
   1ce3a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ce3e:	48 89 c7             	mov    %rax,%rdi
   1ce41:	e8 da 92 ff ff       	callq  16120 <_ZN6xaxaxa6BufferC1Ev@plt>
   1ce46:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   1ce4a:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   1ce4e:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1ce52:	8b 75 c0             	mov    -0x40(%rbp),%esi
   1ce55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ce59:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   1ce5f:	49 89 f8             	mov    %rdi,%r8
   1ce62:	48 89 c7             	mov    %rax,%rdi
   1ce65:	e8 16 90 ff ff       	callq  15e80 <_ZN6xaxaxa7Sockets13SocketManager9BeginSendENS0_6SocketENS_6BufferENS1_8CallbackEb@plt>
   1ce6a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ce6e:	48 89 c7             	mov    %rax,%rdi
   1ce71:	e8 ba 86 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
		}
   1ce76:	48 83 c4 58          	add    $0x58,%rsp
   1ce7a:	5b                   	pop    %rbx
   1ce7b:	5d                   	pop    %rbp
   1ce7c:	c3                   	retq   
   1ce7d:	48 89 c3             	mov    %rax,%rbx
		}
		void SocketManager::BeginConnect(Socket s, EndPoint* ep, Callback cb)
		{
			s.SetFlags(s.GetFlags() | O_NONBLOCK);
			s.Connect(ep);
			BeginSend(s, Buffer(), cb, false);
   1ce80:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ce84:	48 89 c7             	mov    %rax,%rdi
   1ce87:	e8 a4 86 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1ce8c:	48 89 d8             	mov    %rbx,%rax
   1ce8f:	48 89 c7             	mov    %rax,%rdi
   1ce92:	e8 19 9c ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1ce97:	90                   	nop

000000000001ce98 <_ZN6xaxaxa7Sockets13SocketManager10EndConnectENS0_6SocketE>:
		}
		void SocketManager::EndConnect(Socket s)
		{
   1ce98:	55                   	push   %rbp
   1ce99:	48 89 e5             	mov    %rsp,%rbp
   1ce9c:	41 54                	push   %r12
   1ce9e:	53                   	push   %rbx
   1ce9f:	48 83 ec 20          	sub    $0x20,%rsp
   1cea3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1cea7:	89 75 d0             	mov    %esi,-0x30(%rbp)
			taskInfo *i = ((__current_task_!=NULL && s._s == __current_task_->s) ? __current_task_
								: &this->info[s._s]);
   1ceaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ceae:	48 8b 40 70          	mov    0x70(%rax),%rax
   1ceb2:	48 85 c0             	test   %rax,%rax
   1ceb5:	74 1c                	je     1ced3 <_ZN6xaxaxa7Sockets13SocketManager10EndConnectENS0_6SocketE+0x3b>
   1ceb7:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1ceba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cebe:	48 8b 40 70          	mov    0x70(%rax),%rax
   1cec2:	8b 40 04             	mov    0x4(%rax),%eax
   1cec5:	39 c2                	cmp    %eax,%edx
   1cec7:	75 0a                	jne    1ced3 <_ZN6xaxaxa7Sockets13SocketManager10EndConnectENS0_6SocketE+0x3b>
   1cec9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cecd:	48 8b 40 70          	mov    0x70(%rax),%rax
   1ced1:	eb 17                	jmp    1ceea <_ZN6xaxaxa7Sockets13SocketManager10EndConnectENS0_6SocketE+0x52>
   1ced3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ced7:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1cedb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cedf:	48 89 c6             	mov    %rax,%rsi
   1cee2:	48 89 d7             	mov    %rdx,%rdi
   1cee5:	e8 c6 90 ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1ceea:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
			if (i->w_errno != 0) throw Exception(i->w_errno);
   1ceee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cef2:	8b 40 7c             	mov    0x7c(%rax),%eax
   1cef5:	85 c0                	test   %eax,%eax
   1cef7:	74 50                	je     1cf49 <_ZN6xaxaxa7Sockets13SocketManager10EndConnectENS0_6SocketE+0xb1>
   1cef9:	bf 18 00 00 00       	mov    $0x18,%edi
   1cefe:	e8 2d 96 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1cf03:	48 89 c3             	mov    %rax,%rbx
   1cf06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cf0a:	8b 40 7c             	mov    0x7c(%rax),%eax
   1cf0d:	89 c6                	mov    %eax,%esi
   1cf0f:	48 89 df             	mov    %rbx,%rdi
   1cf12:	e8 69 87 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1cf17:	48 8b 05 7a d1 20 00 	mov    0x20d17a(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1cf1e:	48 89 c2             	mov    %rax,%rdx
   1cf21:	48 8b 05 10 d2 20 00 	mov    0x20d210(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1cf28:	48 89 c6             	mov    %rax,%rsi
   1cf2b:	48 89 df             	mov    %rbx,%rdi
   1cf2e:	e8 dd 97 ff ff       	callq  16710 <__cxa_throw@plt>
   1cf33:	49 89 c4             	mov    %rax,%r12
   1cf36:	48 89 df             	mov    %rbx,%rdi
   1cf39:	e8 72 96 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1cf3e:	4c 89 e0             	mov    %r12,%rax
   1cf41:	48 89 c7             	mov    %rax,%rdi
   1cf44:	e8 67 9b ff ff       	callq  16ab0 <_Unwind_Resume@plt>
		}
   1cf49:	90                   	nop
   1cf4a:	48 83 c4 20          	add    $0x20,%rsp
   1cf4e:	5b                   	pop    %rbx
   1cf4f:	41 5c                	pop    %r12
   1cf51:	5d                   	pop    %rbp
   1cf52:	c3                   	retq   
   1cf53:	90                   	nop

000000000001cf54 <_ZN6xaxaxa7Sockets13SocketManager6CancelENS0_6SocketE>:
		void SocketManager::Cancel(Socket s)
		{
   1cf54:	55                   	push   %rbp
   1cf55:	48 89 e5             	mov    %rsp,%rbp
   1cf58:	48 83 ec 10          	sub    $0x10,%rsp
   1cf5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cf60:	89 75 f0             	mov    %esi,-0x10(%rbp)
			dbgprint("removing fd " << s._s);
			epoll_ctl(this->epollfd, EPOLL_CTL_DEL, s._s, NULL);
   1cf63:	8b 55 f0             	mov    -0x10(%rbp),%edx
   1cf66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf6a:	8b 40 0c             	mov    0xc(%rax),%eax
   1cf6d:	b9 00 00 00 00       	mov    $0x0,%ecx
   1cf72:	be 02 00 00 00       	mov    $0x2,%esi
   1cf77:	89 c7                	mov    %eax,%edi
   1cf79:	e8 82 90 ff ff       	callq  16000 <epoll_ctl@plt>
			if (__current_task_!=NULL && s._s == __current_task_->s)
   1cf7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf82:	48 8b 40 70          	mov    0x70(%rax),%rax
   1cf86:	48 85 c0             	test   %rax,%rax
   1cf89:	74 1e                	je     1cfa9 <_ZN6xaxaxa7Sockets13SocketManager6CancelENS0_6SocketE+0x55>
   1cf8b:	8b 55 f0             	mov    -0x10(%rbp),%edx
   1cf8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf92:	48 8b 40 70          	mov    0x70(%rax),%rax
   1cf96:	8b 40 04             	mov    0x4(%rax),%eax
   1cf99:	39 c2                	cmp    %eax,%edx
   1cf9b:	75 0c                	jne    1cfa9 <_ZN6xaxaxa7Sockets13SocketManager6CancelENS0_6SocketE+0x55>
			{
				//__current_task_->events = 0;
				//__current_task_->new_events = 0;
				__current_task_=NULL;
   1cf9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfa1:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
   1cfa8:	00 
			}
			this->info.erase(s._s);
   1cfa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfad:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1cfb1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1cfb5:	48 89 c6             	mov    %rax,%rsi
   1cfb8:	48 89 d7             	mov    %rdx,%rdi
   1cfbb:	e8 f0 90 ff ff       	callq  160b0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_@plt>
			tmp_erased[s._s]=true;
   1cfc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfc4:	48 8d 50 40          	lea    0x40(%rax),%rdx
   1cfc8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1cfcc:	48 89 c6             	mov    %rax,%rsi
   1cfcf:	48 89 d7             	mov    %rdx,%rdi
   1cfd2:	e8 d9 8c ff ff       	callq  15cb0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_@plt>
   1cfd7:	c6 00 01             	movb   $0x1,(%rax)
		}
   1cfda:	c9                   	leaveq 
   1cfdb:	c3                   	retq   

000000000001cfdc <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE>:
		void SocketManager::CancelRead(Socket s)
		{
   1cfdc:	55                   	push   %rbp
   1cfdd:	48 89 e5             	mov    %rsp,%rbp
   1cfe0:	48 83 ec 30          	sub    $0x30,%rsp
   1cfe4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1cfe8:	89 75 d0             	mov    %esi,-0x30(%rbp)
			taskInfo& i = ((__current_task_!=NULL && s._s == __current_task_->s) ? *__current_task_
											: this->info[s._s]);
   1cfeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cfef:	48 8b 40 70          	mov    0x70(%rax),%rax
   1cff3:	48 85 c0             	test   %rax,%rax
   1cff6:	74 1c                	je     1d014 <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0x38>
   1cff8:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1cffb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cfff:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d003:	8b 40 04             	mov    0x4(%rax),%eax
   1d006:	39 c2                	cmp    %eax,%edx
   1d008:	75 0a                	jne    1d014 <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0x38>
   1d00a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d00e:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d012:	eb 17                	jmp    1d02b <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0x4f>
   1d014:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d018:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1d01c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1d020:	48 89 c6             	mov    %rax,%rsi
   1d023:	48 89 d7             	mov    %rdx,%rdi
   1d026:	e8 85 8f ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1d02b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
			if (i.bits)
   1d02f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d033:	8b 00                	mov    (%rax),%eax
   1d035:	85 c0                	test   %eax,%eax
   1d037:	0f 84 9d 00 00 00    	je     1d0da <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0xfe>
			{
				if (__current_task_!=NULL && s._s == __current_task_->s)
   1d03d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d041:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d045:	48 85 c0             	test   %rax,%rax
   1d048:	74 27                	je     1d071 <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0x95>
   1d04a:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1d04d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d051:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d055:	8b 40 04             	mov    0x4(%rax),%eax
   1d058:	39 c2                	cmp    %eax,%edx
   1d05a:	75 15                	jne    1d071 <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0x95>
				{
					i.new_events &= ~EPOLLIN;
   1d05c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d060:	8b 40 2c             	mov    0x2c(%rax),%eax
   1d063:	89 c2                	mov    %eax,%edx
   1d065:	83 e2 fe             	and    $0xfffffffe,%edx
   1d068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d06c:	89 50 2c             	mov    %edx,0x2c(%rax)
   1d06f:	eb 69                	jmp    1d0da <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0xfe>
				}
				else
				{
					i.events &= ~EPOLLIN;
   1d071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d075:	8b 40 28             	mov    0x28(%rax),%eax
   1d078:	89 c2                	mov    %eax,%edx
   1d07a:	83 e2 fe             	and    $0xfffffffe,%edx
   1d07d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d081:	89 50 28             	mov    %edx,0x28(%rax)
					if (i.events)
   1d084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d088:	8b 40 28             	mov    0x28(%rax),%eax
   1d08b:	85 c0                	test   %eax,%eax
   1d08d:	74 3a                	je     1d0c9 <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0xed>
					{
						i.new_events = i.events;
   1d08f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d093:	8b 50 28             	mov    0x28(%rax),%edx
   1d096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d09a:	89 50 2c             	mov    %edx,0x2c(%rax)
						epoll_event ev;
						ev.data.fd = s._s;
   1d09d:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1d0a0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
						ev.events = i.events;
   1d0a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d0a7:	8b 40 28             	mov    0x28(%rax),%eax
   1d0aa:	89 45 e0             	mov    %eax,-0x20(%rbp)
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._s, &ev);
   1d0ad:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1d0b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d0b4:	8b 40 0c             	mov    0xc(%rax),%eax
   1d0b7:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   1d0bb:	be 03 00 00 00       	mov    $0x3,%esi
   1d0c0:	89 c7                	mov    %eax,%edi
   1d0c2:	e8 39 8f ff ff       	callq  16000 <epoll_ctl@plt>
   1d0c7:	eb 11                	jmp    1d0da <_ZN6xaxaxa7Sockets13SocketManager10CancelReadENS0_6SocketE+0xfe>
					}
					else
					{
						Cancel(s);
   1d0c9:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1d0cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d0d0:	89 d6                	mov    %edx,%esi
   1d0d2:	48 89 c7             	mov    %rax,%rdi
   1d0d5:	e8 16 84 ff ff       	callq  154f0 <_ZN6xaxaxa7Sockets13SocketManager6CancelENS0_6SocketE@plt>
					}
				}
			}
			//s._s == __current_task.s ? __current_task = i : this->info[s._s] = i;
		}
   1d0da:	c9                   	leaveq 
   1d0db:	c3                   	retq   

000000000001d0dc <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE>:
		void SocketManager::CancelWrite(Socket s)
		{
   1d0dc:	55                   	push   %rbp
   1d0dd:	48 89 e5             	mov    %rsp,%rbp
   1d0e0:	48 83 ec 30          	sub    $0x30,%rsp
   1d0e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d0e8:	89 75 d0             	mov    %esi,-0x30(%rbp)
			taskInfo& i = ((__current_task_!=NULL && s._s == __current_task_->s) ? *__current_task_
							: this->info[s._s]);
   1d0eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d0ef:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d0f3:	48 85 c0             	test   %rax,%rax
   1d0f6:	74 1c                	je     1d114 <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0x38>
   1d0f8:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1d0fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d0ff:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d103:	8b 40 04             	mov    0x4(%rax),%eax
   1d106:	39 c2                	cmp    %eax,%edx
   1d108:	75 0a                	jne    1d114 <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0x38>
   1d10a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d10e:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d112:	eb 17                	jmp    1d12b <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0x4f>
   1d114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d118:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1d11c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1d120:	48 89 c6             	mov    %rax,%rsi
   1d123:	48 89 d7             	mov    %rdx,%rdi
   1d126:	e8 85 8e ff ff       	callq  15fb0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_@plt>
   1d12b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
			if (i.bits)
   1d12f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d133:	8b 00                	mov    (%rax),%eax
   1d135:	85 c0                	test   %eax,%eax
   1d137:	0f 84 9d 00 00 00    	je     1d1da <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0xfe>
			{
				if (__current_task_!=NULL && s._s == __current_task_->s)
   1d13d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d141:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d145:	48 85 c0             	test   %rax,%rax
   1d148:	74 27                	je     1d171 <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0x95>
   1d14a:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1d14d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d151:	48 8b 40 70          	mov    0x70(%rax),%rax
   1d155:	8b 40 04             	mov    0x4(%rax),%eax
   1d158:	39 c2                	cmp    %eax,%edx
   1d15a:	75 15                	jne    1d171 <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0x95>
				{
					i.new_events &= ~EPOLLOUT;
   1d15c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d160:	8b 40 2c             	mov    0x2c(%rax),%eax
   1d163:	89 c2                	mov    %eax,%edx
   1d165:	83 e2 fb             	and    $0xfffffffb,%edx
   1d168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d16c:	89 50 2c             	mov    %edx,0x2c(%rax)
   1d16f:	eb 69                	jmp    1d1da <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0xfe>
				}
				else
				{
					i.events &= ~EPOLLOUT;
   1d171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d175:	8b 40 28             	mov    0x28(%rax),%eax
   1d178:	89 c2                	mov    %eax,%edx
   1d17a:	83 e2 fb             	and    $0xfffffffb,%edx
   1d17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d181:	89 50 28             	mov    %edx,0x28(%rax)
					if (i.events)
   1d184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d188:	8b 40 28             	mov    0x28(%rax),%eax
   1d18b:	85 c0                	test   %eax,%eax
   1d18d:	74 3a                	je     1d1c9 <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0xed>
					{
						i.new_events = i.events;
   1d18f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d193:	8b 50 28             	mov    0x28(%rax),%edx
   1d196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d19a:	89 50 2c             	mov    %edx,0x2c(%rax)
						epoll_event ev;
						ev.data.fd = s._s;
   1d19d:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1d1a0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
						ev.events = i.events;
   1d1a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d1a7:	8b 40 28             	mov    0x28(%rax),%eax
   1d1aa:	89 45 e0             	mov    %eax,-0x20(%rbp)
						epoll_ctl(this->epollfd, EPOLL_CTL_MOD, s._s, &ev);
   1d1ad:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1d1b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d1b4:	8b 40 0c             	mov    0xc(%rax),%eax
   1d1b7:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   1d1bb:	be 03 00 00 00       	mov    $0x3,%esi
   1d1c0:	89 c7                	mov    %eax,%edi
   1d1c2:	e8 39 8e ff ff       	callq  16000 <epoll_ctl@plt>
   1d1c7:	eb 11                	jmp    1d1da <_ZN6xaxaxa7Sockets13SocketManager11CancelWriteENS0_6SocketE+0xfe>
					}
					else
					{
						Cancel(s);
   1d1c9:	8b 55 d0             	mov    -0x30(%rbp),%edx
   1d1cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d1d0:	89 d6                	mov    %edx,%esi
   1d1d2:	48 89 c7             	mov    %rax,%rdi
   1d1d5:	e8 16 83 ff ff       	callq  154f0 <_ZN6xaxaxa7Sockets13SocketManager6CancelENS0_6SocketE@plt>
					}
				}
			}
			//s._s == __current_task.s ? __current_task = i : this->info[s._s] = i;
		}
   1d1da:	c9                   	leaveq 
   1d1db:	c3                   	retq   

000000000001d1dc <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_>:
		void SOCKS5::socks_connect(Stream* s, EndPoint* ep, Callback cb, Callback sent_cb)
		{
   1d1dc:	55                   	push   %rbp
   1d1dd:	48 89 e5             	mov    %rsp,%rbp
   1d1e0:	41 55                	push   %r13
   1d1e2:	41 54                	push   %r12
   1d1e4:	53                   	push   %rbx
   1d1e5:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   1d1ec:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
   1d1f3:	48 89 b5 e0 fe ff ff 	mov    %rsi,-0x120(%rbp)
   1d1fa:	48 89 c8             	mov    %rcx,%rax
   1d1fd:	4c 89 c6             	mov    %r8,%rsi
   1d200:	4c 89 c9             	mov    %r9,%rcx
   1d203:	48 89 95 d0 fe ff ff 	mov    %rdx,-0x130(%rbp)
   1d20a:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   1d211:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
   1d218:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
			StringBuilder* sb=new StringBuilder(32);
   1d21f:	bf 20 00 00 00       	mov    $0x20,%edi
   1d224:	e8 67 98 ff ff       	callq  16a90 <_Znwm@plt>
   1d229:	48 89 c3             	mov    %rax,%rbx
   1d22c:	be 20 00 00 00       	mov    $0x20,%esi
   1d231:	48 89 df             	mov    %rbx,%rdi
   1d234:	e8 57 96 ff ff       	callq  16890 <_ZN6xaxaxa13StringBuilderC1Ei@plt>
   1d239:	48 89 5d d8          	mov    %rbx,-0x28(%rbp)
			char c[]="\x05\x01\x00\x05\x01\x00";
   1d23d:	8b 05 71 70 00 00    	mov    0x7071(%rip),%eax        # 242b4 <_ZStL6ignore+0xea>
   1d243:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1d249:	0f b7 05 68 70 00 00 	movzwl 0x7068(%rip),%eax        # 242b8 <_ZStL6ignore+0xee>
   1d250:	66 89 85 44 ff ff ff 	mov    %ax,-0xbc(%rbp)
   1d257:	0f b6 05 5c 70 00 00 	movzbl 0x705c(%rip),%eax        # 242ba <_ZStL6ignore+0xf0>
   1d25e:	88 85 46 ff ff ff    	mov    %al,-0xba(%rbp)
			sb->Append(Buffer((Byte*)c,6));
   1d264:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   1d26b:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1d272:	ba 06 00 00 00       	mov    $0x6,%edx
   1d277:	48 89 ce             	mov    %rcx,%rsi
   1d27a:	48 89 c7             	mov    %rax,%rdi
   1d27d:	e8 0e 88 ff ff       	callq  15a90 <_ZN6xaxaxa6BufferC1EPhi@plt>
   1d282:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   1d289:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d28d:	48 89 d6             	mov    %rdx,%rsi
   1d290:	48 89 c7             	mov    %rax,%rdi
   1d293:	e8 e8 86 ff ff       	callq  15980 <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE@plt>
   1d298:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1d29f:	48 89 c7             	mov    %rax,%rdi
   1d2a2:	e8 89 82 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			int port;
			tmp* tmp1=new tmp();
   1d2a7:	bf 70 00 00 00       	mov    $0x70,%edi
   1d2ac:	e8 df 97 ff ff       	callq  16a90 <_Znwm@plt>
   1d2b1:	48 89 c3             	mov    %rax,%rbx
   1d2b4:	48 89 de             	mov    %rbx,%rsi
   1d2b7:	b8 00 00 00 00       	mov    $0x0,%eax
   1d2bc:	ba 0e 00 00 00       	mov    $0xe,%edx
   1d2c1:	48 89 f7             	mov    %rsi,%rdi
   1d2c4:	48 89 d1             	mov    %rdx,%rcx
   1d2c7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1d2ca:	48 89 df             	mov    %rbx,%rdi
   1d2cd:	e8 8e 86 ff ff       	callq  15960 <_ZN6xaxaxa7Sockets6SOCKS53tmpC1Ev@plt>
   1d2d2:	48 89 5d d0          	mov    %rbx,-0x30(%rbp)
			//tmp1->state=state;
			tmp1->sb=sb;
   1d2d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d2da:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1d2de:	48 89 50 20          	mov    %rdx,0x20(%rax)
			tmp1->cb=cb;
   1d2e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d2e6:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
   1d2ed:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1d2f1:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1d2f8:	48 89 50 38          	mov    %rdx,0x38(%rax)
			tmp1->sent_cb=sent_cb;
   1d2fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d300:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
   1d307:	48 89 50 40          	mov    %rdx,0x40(%rax)
   1d30b:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   1d312:	48 89 50 48          	mov    %rdx,0x48(%rax)
			try
			{
				switch(ep->AddressFamily)
   1d316:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d31d:	8b 40 08             	mov    0x8(%rax),%eax
   1d320:	83 f8 02             	cmp    $0x2,%eax
   1d323:	74 0e                	je     1d333 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x157>
   1d325:	83 f8 0a             	cmp    $0xa,%eax
   1d328:	0f 84 a1 00 00 00    	je     1d3cf <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x1f3>
   1d32e:	e9 38 01 00 00       	jmpq   1d46b <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x28f>
				{
					case AF_INET:
					{
						sb->Append("\x01");
   1d333:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d337:	48 8d 35 39 6f 00 00 	lea    0x6f39(%rip),%rsi        # 24277 <_ZStL6ignore+0xad>
   1d33e:	48 89 c7             	mov    %rax,%rdi
   1d341:	e8 aa 8a ff ff       	callq  15df0 <_ZN6xaxaxa13StringBuilder6AppendEPc@plt>
						port=dynamic_cast<IPEndPoint*>(ep)->Port;
   1d346:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d34d:	48 85 c0             	test   %rax,%rax
   1d350:	75 07                	jne    1d359 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x17d>
   1d352:	b8 00 00 00 00       	mov    $0x0,%eax
   1d357:	eb 1b                	jmp    1d374 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x198>
   1d359:	b9 00 00 00 00       	mov    $0x0,%ecx
   1d35e:	48 8b 15 13 cd 20 00 	mov    0x20cd13(%rip),%rdx        # 22a078 <_DYNAMIC+0x1e0>
   1d365:	48 8b 35 5c cd 20 00 	mov    0x20cd5c(%rip),%rsi        # 22a0c8 <_DYNAMIC+0x230>
   1d36c:	48 89 c7             	mov    %rax,%rdi
   1d36f:	e8 9c 8d ff ff       	callq  16110 <__dynamic_cast@plt>
   1d374:	8b 40 10             	mov    0x10(%rax),%eax
   1d377:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
						tmp1->addrlen=4;
   1d37d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d381:	c7 40 28 04 00 00 00 	movl   $0x4,0x28(%rax)
						sockaddr_in addr;
						ep->GetSockAddr((sockaddr*)&addr);
   1d388:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d38f:	48 8b 00             	mov    (%rax),%rax
   1d392:	48 8b 08             	mov    (%rax),%rcx
   1d395:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   1d39c:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d3a3:	48 89 d6             	mov    %rdx,%rsi
   1d3a6:	48 89 c7             	mov    %rax,%rdi
   1d3a9:	ff d1                	callq  *%rcx
						sb->Append((char*)&(addr.sin_addr.s_addr),4);
   1d3ab:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   1d3b2:	48 8d 48 04          	lea    0x4(%rax),%rcx
   1d3b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d3ba:	ba 04 00 00 00       	mov    $0x4,%edx
   1d3bf:	48 89 ce             	mov    %rcx,%rsi
   1d3c2:	48 89 c7             	mov    %rax,%rdi
   1d3c5:	e8 d6 93 ff ff       	callq  167a0 <_ZN6xaxaxa13StringBuilder6AppendEPci@plt>
						break;
   1d3ca:	e9 21 01 00 00       	jmpq   1d4f0 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x314>
					}
					case AF_INET6:
					{
						sb->Append("\x04");
   1d3cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d3d3:	48 8d 35 9f 6e 00 00 	lea    0x6e9f(%rip),%rsi        # 24279 <_ZStL6ignore+0xaf>
   1d3da:	48 89 c7             	mov    %rax,%rdi
   1d3dd:	e8 0e 8a ff ff       	callq  15df0 <_ZN6xaxaxa13StringBuilder6AppendEPc@plt>
						port=dynamic_cast<IPv6EndPoint*>(ep)->Port;
   1d3e2:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d3e9:	48 85 c0             	test   %rax,%rax
   1d3ec:	75 07                	jne    1d3f5 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x219>
   1d3ee:	b8 00 00 00 00       	mov    $0x0,%eax
   1d3f3:	eb 1b                	jmp    1d410 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x234>
   1d3f5:	b9 00 00 00 00       	mov    $0x0,%ecx
   1d3fa:	48 8b 15 d7 cc 20 00 	mov    0x20ccd7(%rip),%rdx        # 22a0d8 <_DYNAMIC+0x240>
   1d401:	48 8b 35 c0 cc 20 00 	mov    0x20ccc0(%rip),%rsi        # 22a0c8 <_DYNAMIC+0x230>
   1d408:	48 89 c7             	mov    %rax,%rdi
   1d40b:	e8 00 8d ff ff       	callq  16110 <__dynamic_cast@plt>
   1d410:	8b 40 1c             	mov    0x1c(%rax),%eax
   1d413:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
						tmp1->addrlen=16;
   1d419:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d41d:	c7 40 28 10 00 00 00 	movl   $0x10,0x28(%rax)
						sockaddr_in6 addr;
						ep->GetSockAddr((sockaddr*)&addr);
   1d424:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d42b:	48 8b 00             	mov    (%rax),%rax
   1d42e:	48 8b 08             	mov    (%rax),%rcx
   1d431:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   1d438:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1d43f:	48 89 d6             	mov    %rdx,%rsi
   1d442:	48 89 c7             	mov    %rax,%rdi
   1d445:	ff d1                	callq  *%rcx
						sb->Append((char*)&(addr.sin6_addr.__in6_u.__u6_addr8),16);
   1d447:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   1d44e:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1d452:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d456:	ba 10 00 00 00       	mov    $0x10,%edx
   1d45b:	48 89 ce             	mov    %rcx,%rsi
   1d45e:	48 89 c7             	mov    %rax,%rdi
   1d461:	e8 3a 93 ff ff       	callq  167a0 <_ZN6xaxaxa13StringBuilder6AppendEPci@plt>
						break;
   1d466:	e9 85 00 00 00       	jmpq   1d4f0 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x314>
					}
					default:
						throw Exception("SOCKS does not support the requested address family");
   1d46b:	bf 18 00 00 00       	mov    $0x18,%edi
   1d470:	e8 bb 90 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1d475:	48 89 c3             	mov    %rax,%rbx
   1d478:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1d47f:	48 89 c7             	mov    %rax,%rdi
   1d482:	e8 69 95 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1d487:	48 8d 95 7f ff ff ff 	lea    -0x81(%rbp),%rdx
   1d48e:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1d495:	48 8d 35 e4 6d 00 00 	lea    0x6de4(%rip),%rsi        # 24280 <_ZStL6ignore+0xb6>
   1d49c:	48 89 c7             	mov    %rax,%rdi
   1d49f:	e8 3c 8b ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1d4a4:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1d4ab:	48 89 c6             	mov    %rax,%rsi
   1d4ae:	48 89 df             	mov    %rbx,%rdi
   1d4b1:	e8 aa 8b ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1d4b6:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1d4bd:	48 89 c7             	mov    %rax,%rdi
   1d4c0:	e8 7b 86 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1d4c5:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1d4cc:	48 89 c7             	mov    %rax,%rdi
   1d4cf:	e8 6c 90 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1d4d4:	48 8b 05 bd cb 20 00 	mov    0x20cbbd(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1d4db:	48 89 c2             	mov    %rax,%rdx
   1d4de:	48 8b 05 53 cc 20 00 	mov    0x20cc53(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1d4e5:	48 89 c6             	mov    %rax,%rsi
   1d4e8:	48 89 df             	mov    %rbx,%rdi
   1d4eb:	e8 20 92 ff ff       	callq  16710 <__cxa_throw@plt>
				}
				port=htons(port);
   1d4f0:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1d4f6:	0f b7 c0             	movzwl %ax,%eax
   1d4f9:	89 c7                	mov    %eax,%edi
   1d4fb:	e8 10 81 ff ff       	callq  15610 <htons@plt>
   1d500:	0f b7 c0             	movzwl %ax,%eax
   1d503:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
				sb->Append((char*)&port,2);
   1d509:	48 8d 8d 3c ff ff ff 	lea    -0xc4(%rbp),%rcx
   1d510:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d514:	ba 02 00 00 00       	mov    $0x2,%edx
   1d519:	48 89 ce             	mov    %rcx,%rsi
   1d51c:	48 89 c7             	mov    %rax,%rdi
   1d51f:	e8 7c 92 ff ff       	callq  167a0 <_ZN6xaxaxa13StringBuilder6AppendEPci@plt>

				STRING tmp=sb->ToString();
   1d524:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d528:	48 89 c7             	mov    %rax,%rdi
   1d52b:	e8 d0 91 ff ff       	callq  16700 <_ZN6xaxaxa13StringBuilder8ToStringEv@plt>
   1d530:	48 89 c1             	mov    %rax,%rcx
   1d533:	89 d0                	mov    %edx,%eax
   1d535:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
   1d53c:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
   1d542:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   1d549:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1d550:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
   1d557:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
				s->BeginWrite(Buffer(tmp.c,tmp.length),Stream::Callback(cb1,tmp1));
   1d55e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1d565:	48 8b 00             	mov    (%rax),%rax
   1d568:	48 83 c0 38          	add    $0x38,%rax
   1d56c:	48 8b 18             	mov    (%rax),%rbx
   1d56f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d573:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1d577:	48 8b 0d 9a cb 20 00 	mov    0x20cb9a(%rip),%rcx        # 22a118 <_DYNAMIC+0x280>
   1d57e:	48 89 ce             	mov    %rcx,%rsi
   1d581:	48 89 c7             	mov    %rax,%rdi
   1d584:	e8 87 90 ff ff       	callq  16610 <_ZN6xaxaxa6Stream8CallbackC1EPFvPvPS0_ES2_@plt>
   1d589:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
   1d58f:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   1d596:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1d59a:	48 89 ce             	mov    %rcx,%rsi
   1d59d:	48 89 c7             	mov    %rax,%rdi
   1d5a0:	e8 9b 94 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
   1d5a5:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1d5a9:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   1d5ad:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
   1d5b1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1d5b8:	48 89 c7             	mov    %rax,%rdi
   1d5bb:	ff d3                	callq  *%rbx
   1d5bd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1d5c1:	48 89 c7             	mov    %rax,%rdi
   1d5c4:	e8 67 7f ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				tmp1->ex=ex;
				FUNCTION_CALL(tmp1->cb,s,tmp1);
				delete tmp1->sb;
				delete tmp1;
			}
		}
   1d5c9:	e9 fe 01 00 00       	jmpq   1d7cc <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x5f0>
   1d5ce:	49 89 c4             	mov    %rax,%r12
			}
			//s._s == __current_task.s ? __current_task = i : this->info[s._s] = i;
		}
		void SOCKS5::socks_connect(Stream* s, EndPoint* ep, Callback cb, Callback sent_cb)
		{
			StringBuilder* sb=new StringBuilder(32);
   1d5d1:	48 89 df             	mov    %rbx,%rdi
   1d5d4:	e8 17 80 ff ff       	callq  155f0 <_ZdlPv@plt>
   1d5d9:	4c 89 e0             	mov    %r12,%rax
   1d5dc:	48 89 c7             	mov    %rax,%rdi
   1d5df:	e8 cc 94 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1d5e4:	48 89 c3             	mov    %rax,%rbx
			char c[]="\x05\x01\x00\x05\x01\x00";
			sb->Append(Buffer((Byte*)c,6));
   1d5e7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1d5ee:	48 89 c7             	mov    %rax,%rdi
   1d5f1:	e8 3a 7f ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1d5f6:	48 89 d8             	mov    %rbx,%rax
   1d5f9:	48 89 c7             	mov    %rax,%rdi
   1d5fc:	e8 af 94 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1d601:	49 89 c4             	mov    %rax,%r12
			int port;
			tmp* tmp1=new tmp();
   1d604:	48 89 df             	mov    %rbx,%rdi
   1d607:	e8 e4 7f ff ff       	callq  155f0 <_ZdlPv@plt>
   1d60c:	4c 89 e0             	mov    %r12,%rax
   1d60f:	48 89 c7             	mov    %rax,%rdi
   1d612:	e8 99 94 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1d617:	49 89 c5             	mov    %rax,%r13
   1d61a:	49 89 d4             	mov    %rdx,%r12
						ep->GetSockAddr((sockaddr*)&addr);
						sb->Append((char*)&(addr.sin6_addr.__in6_u.__u6_addr8),16);
						break;
					}
					default:
						throw Exception("SOCKS does not support the requested address family");
   1d61d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1d624:	48 89 c7             	mov    %rax,%rdi
   1d627:	e8 14 85 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1d62c:	eb 06                	jmp    1d634 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x458>
   1d62e:	49 89 c5             	mov    %rax,%r13
   1d631:	49 89 d4             	mov    %rdx,%r12
   1d634:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1d63b:	48 89 c7             	mov    %rax,%rdi
   1d63e:	e8 fd 8e ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1d643:	48 89 df             	mov    %rbx,%rdi
   1d646:	e8 65 8f ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1d64b:	4c 89 e8             	mov    %r13,%rax
   1d64e:	4c 89 e2             	mov    %r12,%rdx
   1d651:	eb 5a                	jmp    1d6ad <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x4d1>
   1d653:	49 89 c4             	mov    %rax,%r12
   1d656:	48 89 d3             	mov    %rdx,%rbx
				}
				port=htons(port);
				sb->Append((char*)&port,2);

				STRING tmp=sb->ToString();
				s->BeginWrite(Buffer(tmp.c,tmp.length),Stream::Callback(cb1,tmp1));
   1d659:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1d65d:	48 89 c7             	mov    %rax,%rdi
   1d660:	e8 cb 7e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1d665:	4c 89 e0             	mov    %r12,%rax
   1d668:	48 89 da             	mov    %rbx,%rdx
   1d66b:	eb 40                	jmp    1d6ad <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x4d1>
   1d66d:	49 89 c4             	mov    %rax,%r12
			}
			catch(Exception& ex)
			{
				tmp1->ex=ex;
				FUNCTION_CALL(tmp1->cb,s,tmp1);
   1d670:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1d674:	48 89 c7             	mov    %rax,%rdi
   1d677:	e8 c4 84 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1d67c:	eb 03                	jmp    1d681 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x4a5>
   1d67e:	49 89 c4             	mov    %rax,%r12
   1d681:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   1d685:	48 89 c7             	mov    %rax,%rdi
   1d688:	e8 b3 8e ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1d68d:	48 89 df             	mov    %rbx,%rdi
   1d690:	e8 1b 8f ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1d695:	4c 89 e3             	mov    %r12,%rbx
   1d698:	eb 03                	jmp    1d69d <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x4c1>
   1d69a:	48 89 c3             	mov    %rax,%rbx
				sb->Append((char*)&port,2);

				STRING tmp=sb->ToString();
				s->BeginWrite(Buffer(tmp.c,tmp.length),Stream::Callback(cb1,tmp1));
			}
			catch(Exception& ex)
   1d69d:	e8 7e 91 ff ff       	callq  16820 <__cxa_end_catch@plt>
   1d6a2:	48 89 d8             	mov    %rbx,%rax
   1d6a5:	48 89 c7             	mov    %rax,%rdi
   1d6a8:	e8 03 94 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1d6ad:	48 83 fa 01          	cmp    $0x1,%rdx
   1d6b1:	74 08                	je     1d6bb <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x4df>
   1d6b3:	48 89 c7             	mov    %rax,%rdi
   1d6b6:	e8 f5 93 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1d6bb:	48 89 c7             	mov    %rax,%rdi
   1d6be:	e8 5d 92 ff ff       	callq  16920 <__cxa_begin_catch@plt>
   1d6c3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
			{
				tmp1->ex=ex;
   1d6c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d6cb:	48 8d 50 58          	lea    0x58(%rax),%rdx
   1d6cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d6d3:	48 89 c6             	mov    %rax,%rsi
   1d6d6:	48 89 d7             	mov    %rdx,%rdi
   1d6d9:	e8 c2 8a ff ff       	callq  161a0 <_ZN6xaxaxa9ExceptionaSERKS0_@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
   1d6de:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d6e2:	48 8b 40 30          	mov    0x30(%rax),%rax
   1d6e6:	48 85 c0             	test   %rax,%rax
   1d6e9:	75 73                	jne    1d75e <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x582>
   1d6eb:	bf 18 00 00 00       	mov    $0x18,%edi
   1d6f0:	e8 3b 8e ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1d6f5:	48 89 c3             	mov    %rax,%rbx
   1d6f8:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   1d6fc:	48 89 c7             	mov    %rax,%rdi
   1d6ff:	e8 ec 92 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1d704:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
   1d708:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1d70c:	48 8d 35 0d 6b 00 00 	lea    0x6b0d(%rip),%rsi        # 24220 <_ZStL6ignore+0x56>
   1d713:	48 89 c7             	mov    %rax,%rdi
   1d716:	e8 c5 88 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1d71b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1d71f:	48 89 c6             	mov    %rax,%rsi
   1d722:	48 89 df             	mov    %rbx,%rdi
   1d725:	e8 36 89 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1d72a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1d72e:	48 89 c7             	mov    %rax,%rdi
   1d731:	e8 0a 84 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1d736:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   1d73a:	48 89 c7             	mov    %rax,%rdi
   1d73d:	e8 fe 8d ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1d742:	48 8b 05 4f c9 20 00 	mov    0x20c94f(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1d749:	48 89 c2             	mov    %rax,%rdx
   1d74c:	48 8b 05 e5 c9 20 00 	mov    0x20c9e5(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1d753:	48 89 c6             	mov    %rax,%rsi
   1d756:	48 89 df             	mov    %rbx,%rdi
   1d759:	e8 b2 8f ff ff       	callq  16710 <__cxa_throw@plt>
   1d75e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d762:	4c 8b 40 30          	mov    0x30(%rax),%r8
   1d766:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d76a:	48 8b 40 38          	mov    0x38(%rax),%rax
   1d76e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d772:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
   1d779:	48 89 ce             	mov    %rcx,%rsi
   1d77c:	48 89 c7             	mov    %rax,%rdi
   1d77f:	41 ff d0             	callq  *%r8
				delete tmp1->sb;
   1d782:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d786:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d78a:	48 85 c0             	test   %rax,%rax
   1d78d:	74 1f                	je     1d7ae <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x5d2>
   1d78f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d793:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d797:	48 8b 00             	mov    (%rax),%rax
   1d79a:	48 83 c0 08          	add    $0x8,%rax
   1d79e:	48 8b 10             	mov    (%rax),%rdx
   1d7a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d7a5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1d7a9:	48 89 c7             	mov    %rax,%rdi
   1d7ac:	ff d2                	callq  *%rdx
				delete tmp1;
   1d7ae:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
   1d7b2:	48 85 db             	test   %rbx,%rbx
   1d7b5:	74 10                	je     1d7c7 <_ZN6xaxaxa7Sockets6SOCKS513socks_connectEPNS_6StreamEPNS0_8EndPointENS1_8CallbackES6_+0x5eb>
   1d7b7:	48 89 df             	mov    %rbx,%rdi
   1d7ba:	e8 f1 90 ff ff       	callq  168b0 <_ZN6xaxaxa7Sockets6SOCKS53tmpD1Ev@plt>
   1d7bf:	48 89 df             	mov    %rbx,%rdi
   1d7c2:	e8 29 7e ff ff       	callq  155f0 <_ZdlPv@plt>
				sb->Append((char*)&port,2);

				STRING tmp=sb->ToString();
				s->BeginWrite(Buffer(tmp.c,tmp.length),Stream::Callback(cb1,tmp1));
			}
			catch(Exception& ex)
   1d7c7:	e8 54 90 ff ff       	callq  16820 <__cxa_end_catch@plt>
				tmp1->ex=ex;
				FUNCTION_CALL(tmp1->cb,s,tmp1);
				delete tmp1->sb;
				delete tmp1;
			}
		}
   1d7cc:	90                   	nop
   1d7cd:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   1d7d4:	5b                   	pop    %rbx
   1d7d5:	41 5c                	pop    %r12
   1d7d7:	41 5d                	pop    %r13
   1d7d9:	5d                   	pop    %rbp
   1d7da:	c3                   	retq   
   1d7db:	90                   	nop

000000000001d7dc <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE>:
		void SOCKS5::cb1(void* obj, Stream* s)
		{
   1d7dc:	55                   	push   %rbp
   1d7dd:	48 89 e5             	mov    %rsp,%rbp
   1d7e0:	41 55                	push   %r13
   1d7e2:	41 54                	push   %r12
   1d7e4:	53                   	push   %rbx
   1d7e5:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   1d7ec:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   1d7f3:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
			tmp* tmp1=(tmp*)obj;
   1d7fa:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1d801:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
			try
			{
				s->EndWrite();
   1d805:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d80c:	48 8b 00             	mov    (%rax),%rax
   1d80f:	48 83 c0 48          	add    $0x48,%rax
   1d813:	48 8b 10             	mov    (%rax),%rdx
   1d816:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d81d:	48 89 c7             	mov    %rax,%rdi
   1d820:	ff d2                	callq  *%rdx
				if(!FUNCTION_ISNULL(tmp1->sent_cb)) FUNCTION_CALL(tmp1->sent_cb,s,NULL);
   1d822:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d826:	48 8b 40 40          	mov    0x40(%rax),%rax
   1d82a:	48 85 c0             	test   %rax,%rax
   1d82d:	0f 84 bb 00 00 00    	je     1d8ee <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x112>
   1d833:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d837:	48 8b 40 40          	mov    0x40(%rax),%rax
   1d83b:	48 85 c0             	test   %rax,%rax
   1d83e:	0f 85 85 00 00 00    	jne    1d8c9 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0xed>
   1d844:	bf 18 00 00 00       	mov    $0x18,%edi
   1d849:	e8 e2 8c ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1d84e:	48 89 c3             	mov    %rax,%rbx
   1d851:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1d858:	48 89 c7             	mov    %rax,%rdi
   1d85b:	e8 90 91 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1d860:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   1d867:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1d86e:	48 8d 35 ab 69 00 00 	lea    0x69ab(%rip),%rsi        # 24220 <_ZStL6ignore+0x56>
   1d875:	48 89 c7             	mov    %rax,%rdi
   1d878:	e8 63 87 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1d87d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1d884:	48 89 c6             	mov    %rax,%rsi
   1d887:	48 89 df             	mov    %rbx,%rdi
   1d88a:	e8 d1 87 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1d88f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1d896:	48 89 c7             	mov    %rax,%rdi
   1d899:	e8 a2 82 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1d89e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1d8a5:	48 89 c7             	mov    %rax,%rdi
   1d8a8:	e8 93 8c ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1d8ad:	48 8b 05 e4 c7 20 00 	mov    0x20c7e4(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1d8b4:	48 89 c2             	mov    %rax,%rdx
   1d8b7:	48 8b 05 7a c8 20 00 	mov    0x20c87a(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1d8be:	48 89 c6             	mov    %rax,%rsi
   1d8c1:	48 89 df             	mov    %rbx,%rdi
   1d8c4:	e8 47 8e ff ff       	callq  16710 <__cxa_throw@plt>
   1d8c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d8cd:	4c 8b 40 40          	mov    0x40(%rax),%r8
   1d8d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d8d5:	48 8b 40 48          	mov    0x48(%rax),%rax
   1d8d9:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1d8e0:	ba 00 00 00 00       	mov    $0x0,%edx
   1d8e5:	48 89 ce             	mov    %rcx,%rsi
   1d8e8:	48 89 c7             	mov    %rax,%rdi
   1d8eb:	41 ff d0             	callq  *%r8
				tmp1->b=Buffer(8+tmp1->addrlen);
   1d8ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d8f2:	8b 40 28             	mov    0x28(%rax),%eax
   1d8f5:	8d 50 08             	lea    0x8(%rax),%edx
   1d8f8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1d8ff:	89 d6                	mov    %edx,%esi
   1d901:	48 89 c7             	mov    %rax,%rdi
   1d904:	e8 d7 7c ff ff       	callq  155e0 <_ZN6xaxaxa6BufferC1Ei@plt>
   1d909:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d90d:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   1d914:	48 89 d6             	mov    %rdx,%rsi
   1d917:	48 89 c7             	mov    %rax,%rdi
   1d91a:	e8 a1 7e ff ff       	callq  157c0 <_ZN6xaxaxa6BufferaSERKS0_@plt>
   1d91f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1d926:	48 89 c7             	mov    %rax,%rdi
   1d929:	e8 02 7c ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				tmp1->br=0;
   1d92e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d932:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%rax)
				dbgprint("========SOCKS request sent======");
				s->BeginRead(tmp1->b,Stream::Callback(cb2,tmp1));
   1d939:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d940:	48 8b 00             	mov    (%rax),%rax
   1d943:	48 83 c0 30          	add    $0x30,%rax
   1d947:	48 8b 18             	mov    (%rax),%rbx
   1d94a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1d94e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1d952:	48 8b 0d 2f c7 20 00 	mov    0x20c72f(%rip),%rcx        # 22a088 <_DYNAMIC+0x1f0>
   1d959:	48 89 ce             	mov    %rcx,%rsi
   1d95c:	48 89 c7             	mov    %rax,%rdi
   1d95f:	e8 ac 8c ff ff       	callq  16610 <_ZN6xaxaxa6Stream8CallbackC1EPFvPvPS0_ES2_@plt>
   1d964:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1d968:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1d96c:	48 89 d6             	mov    %rdx,%rsi
   1d96f:	48 89 c7             	mov    %rax,%rdi
   1d972:	e8 69 8b ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   1d977:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1d97b:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   1d97f:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
   1d983:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1d98a:	48 89 c7             	mov    %rax,%rdi
   1d98d:	ff d3                	callq  *%rbx
   1d98f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1d993:	48 89 c7             	mov    %rax,%rdi
   1d996:	e8 95 7b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
				delete tmp1->sb;
				//tmp1->b.Release();
				delete tmp1;
			}
		}
   1d99b:	e9 d2 01 00 00       	jmpq   1db72 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x396>
   1d9a0:	49 89 c5             	mov    %rax,%r13
   1d9a3:	49 89 d4             	mov    %rdx,%r12
		{
			tmp* tmp1=(tmp*)obj;
			try
			{
				s->EndWrite();
				if(!FUNCTION_ISNULL(tmp1->sent_cb)) FUNCTION_CALL(tmp1->sent_cb,s,NULL);
   1d9a6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1d9ad:	48 89 c7             	mov    %rax,%rdi
   1d9b0:	e8 8b 81 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1d9b5:	eb 06                	jmp    1d9bd <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x1e1>
   1d9b7:	49 89 c5             	mov    %rax,%r13
   1d9ba:	49 89 d4             	mov    %rdx,%r12
   1d9bd:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1d9c4:	48 89 c7             	mov    %rax,%rdi
   1d9c7:	e8 74 8b ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1d9cc:	48 89 df             	mov    %rbx,%rdi
   1d9cf:	e8 dc 8b ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1d9d4:	4c 89 e8             	mov    %r13,%rax
   1d9d7:	4c 89 e2             	mov    %r12,%rdx
   1d9da:	eb 77                	jmp    1da53 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x277>
   1d9dc:	49 89 c4             	mov    %rax,%r12
   1d9df:	48 89 d3             	mov    %rdx,%rbx
				tmp1->b=Buffer(8+tmp1->addrlen);
   1d9e2:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1d9e9:	48 89 c7             	mov    %rax,%rdi
   1d9ec:	e8 3f 7b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1d9f1:	4c 89 e0             	mov    %r12,%rax
   1d9f4:	48 89 da             	mov    %rbx,%rdx
   1d9f7:	eb 5a                	jmp    1da53 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x277>
   1d9f9:	49 89 c4             	mov    %rax,%r12
   1d9fc:	48 89 d3             	mov    %rdx,%rbx
				tmp1->br=0;
				dbgprint("========SOCKS request sent======");
				s->BeginRead(tmp1->b,Stream::Callback(cb2,tmp1));
   1d9ff:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1da03:	48 89 c7             	mov    %rax,%rdi
   1da06:	e8 25 7b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1da0b:	4c 89 e0             	mov    %r12,%rax
   1da0e:	48 89 da             	mov    %rbx,%rdx
   1da11:	eb 40                	jmp    1da53 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x277>
   1da13:	49 89 c4             	mov    %rax,%r12
			}
			catch(Exception& ex)
			{
				tmp1->ex=ex;
				FUNCTION_CALL(tmp1->cb,s,tmp1);
   1da16:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1da1a:	48 89 c7             	mov    %rax,%rdi
   1da1d:	e8 1e 81 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1da22:	eb 03                	jmp    1da27 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x24b>
   1da24:	49 89 c4             	mov    %rax,%r12
   1da27:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1da2b:	48 89 c7             	mov    %rax,%rdi
   1da2e:	e8 0d 8b ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1da33:	48 89 df             	mov    %rbx,%rdi
   1da36:	e8 75 8b ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1da3b:	4c 89 e3             	mov    %r12,%rbx
   1da3e:	eb 03                	jmp    1da43 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x267>
   1da40:	48 89 c3             	mov    %rax,%rbx
				tmp1->b=Buffer(8+tmp1->addrlen);
				tmp1->br=0;
				dbgprint("========SOCKS request sent======");
				s->BeginRead(tmp1->b,Stream::Callback(cb2,tmp1));
			}
			catch(Exception& ex)
   1da43:	e8 d8 8d ff ff       	callq  16820 <__cxa_end_catch@plt>
   1da48:	48 89 d8             	mov    %rbx,%rax
   1da4b:	48 89 c7             	mov    %rax,%rdi
   1da4e:	e8 5d 90 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1da53:	48 83 fa 01          	cmp    $0x1,%rdx
   1da57:	74 08                	je     1da61 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x285>
   1da59:	48 89 c7             	mov    %rax,%rdi
   1da5c:	e8 4f 90 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1da61:	48 89 c7             	mov    %rax,%rdi
   1da64:	e8 b7 8e ff ff       	callq  16920 <__cxa_begin_catch@plt>
   1da69:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			{
				tmp1->ex=ex;
   1da6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1da71:	48 8d 50 58          	lea    0x58(%rax),%rdx
   1da75:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1da79:	48 89 c6             	mov    %rax,%rsi
   1da7c:	48 89 d7             	mov    %rdx,%rdi
   1da7f:	e8 1c 87 ff ff       	callq  161a0 <_ZN6xaxaxa9ExceptionaSERKS0_@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
   1da84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1da88:	48 8b 40 30          	mov    0x30(%rax),%rax
   1da8c:	48 85 c0             	test   %rax,%rax
   1da8f:	75 73                	jne    1db04 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x328>
   1da91:	bf 18 00 00 00       	mov    $0x18,%edi
   1da96:	e8 95 8a ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1da9b:	48 89 c3             	mov    %rax,%rbx
   1da9e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1daa2:	48 89 c7             	mov    %rax,%rdi
   1daa5:	e8 46 8f ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1daaa:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
   1daae:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1dab2:	48 8d 35 67 67 00 00 	lea    0x6767(%rip),%rsi        # 24220 <_ZStL6ignore+0x56>
   1dab9:	48 89 c7             	mov    %rax,%rdi
   1dabc:	e8 1f 85 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1dac1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1dac5:	48 89 c6             	mov    %rax,%rsi
   1dac8:	48 89 df             	mov    %rbx,%rdi
   1dacb:	e8 90 85 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1dad0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1dad4:	48 89 c7             	mov    %rax,%rdi
   1dad7:	e8 64 80 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1dadc:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1dae0:	48 89 c7             	mov    %rax,%rdi
   1dae3:	e8 58 8a ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1dae8:	48 8b 05 a9 c5 20 00 	mov    0x20c5a9(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1daef:	48 89 c2             	mov    %rax,%rdx
   1daf2:	48 8b 05 3f c6 20 00 	mov    0x20c63f(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1daf9:	48 89 c6             	mov    %rax,%rsi
   1dafc:	48 89 df             	mov    %rbx,%rdi
   1daff:	e8 0c 8c ff ff       	callq  16710 <__cxa_throw@plt>
   1db04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1db08:	4c 8b 40 30          	mov    0x30(%rax),%r8
   1db0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1db10:	48 8b 40 38          	mov    0x38(%rax),%rax
   1db14:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1db18:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1db1f:	48 89 ce             	mov    %rcx,%rsi
   1db22:	48 89 c7             	mov    %rax,%rdi
   1db25:	41 ff d0             	callq  *%r8
				delete tmp1->sb;
   1db28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1db2c:	48 8b 40 20          	mov    0x20(%rax),%rax
   1db30:	48 85 c0             	test   %rax,%rax
   1db33:	74 1f                	je     1db54 <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x378>
   1db35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1db39:	48 8b 40 20          	mov    0x20(%rax),%rax
   1db3d:	48 8b 00             	mov    (%rax),%rax
   1db40:	48 83 c0 08          	add    $0x8,%rax
   1db44:	48 8b 10             	mov    (%rax),%rdx
   1db47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1db4b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1db4f:	48 89 c7             	mov    %rax,%rdi
   1db52:	ff d2                	callq  *%rdx
				//tmp1->b.Release();
				delete tmp1;
   1db54:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1db58:	48 85 db             	test   %rbx,%rbx
   1db5b:	74 10                	je     1db6d <_ZN6xaxaxa7Sockets6SOCKS53cb1EPvPNS_6StreamE+0x391>
   1db5d:	48 89 df             	mov    %rbx,%rdi
   1db60:	e8 4b 8d ff ff       	callq  168b0 <_ZN6xaxaxa7Sockets6SOCKS53tmpD1Ev@plt>
   1db65:	48 89 df             	mov    %rbx,%rdi
   1db68:	e8 83 7a ff ff       	callq  155f0 <_ZdlPv@plt>
				tmp1->b=Buffer(8+tmp1->addrlen);
				tmp1->br=0;
				dbgprint("========SOCKS request sent======");
				s->BeginRead(tmp1->b,Stream::Callback(cb2,tmp1));
			}
			catch(Exception& ex)
   1db6d:	e8 ae 8c ff ff       	callq  16820 <__cxa_end_catch@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
				delete tmp1->sb;
				//tmp1->b.Release();
				delete tmp1;
			}
		}
   1db72:	90                   	nop
   1db73:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   1db7a:	5b                   	pop    %rbx
   1db7b:	41 5c                	pop    %r12
   1db7d:	41 5d                	pop    %r13
   1db7f:	5d                   	pop    %rbp
   1db80:	c3                   	retq   
   1db81:	90                   	nop

000000000001db82 <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE>:
		void SOCKS5::cb2(void* obj, Stream* s)
		{
   1db82:	55                   	push   %rbp
   1db83:	48 89 e5             	mov    %rsp,%rbp
   1db86:	41 55                	push   %r13
   1db88:	41 54                	push   %r12
   1db8a:	53                   	push   %rbx
   1db8b:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   1db92:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   1db99:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
			tmp* tmp1=(tmp*)obj;
   1dba0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1dba7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
			try
			{
				int i=s->EndRead();
   1dbab:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dbb2:	48 8b 00             	mov    (%rax),%rax
   1dbb5:	48 83 c0 40          	add    $0x40,%rax
   1dbb9:	48 8b 10             	mov    (%rax),%rdx
   1dbbc:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dbc3:	48 89 c7             	mov    %rax,%rdi
   1dbc6:	ff d2                	callq  *%rdx
   1dbc8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
				if(i<=0)throw Exception("SOCKS error occured");
   1dbcb:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1dbcf:	0f 8f 85 00 00 00    	jg     1dc5a <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0xd8>
   1dbd5:	bf 18 00 00 00       	mov    $0x18,%edi
   1dbda:	e8 51 89 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1dbdf:	48 89 c3             	mov    %rax,%rbx
   1dbe2:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1dbe9:	48 89 c7             	mov    %rax,%rdi
   1dbec:	e8 ff 8d ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1dbf1:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   1dbf8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1dbff:	48 8d 35 b5 66 00 00 	lea    0x66b5(%rip),%rsi        # 242bb <_ZStL6ignore+0xf1>
   1dc06:	48 89 c7             	mov    %rax,%rdi
   1dc09:	e8 d2 83 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1dc0e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1dc15:	48 89 c6             	mov    %rax,%rsi
   1dc18:	48 89 df             	mov    %rbx,%rdi
   1dc1b:	e8 40 84 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1dc20:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1dc27:	48 89 c7             	mov    %rax,%rdi
   1dc2a:	e8 11 7f ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1dc2f:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1dc36:	48 89 c7             	mov    %rax,%rdi
   1dc39:	e8 02 89 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1dc3e:	48 8b 05 53 c4 20 00 	mov    0x20c453(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1dc45:	48 89 c2             	mov    %rax,%rdx
   1dc48:	48 8b 05 e9 c4 20 00 	mov    0x20c4e9(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1dc4f:	48 89 c6             	mov    %rax,%rsi
   1dc52:	48 89 df             	mov    %rbx,%rdi
   1dc55:	e8 b6 8a ff ff       	callq  16710 <__cxa_throw@plt>
				dbgprint("========SOCKS response read====== "<<i<<" bytes received");
				tmp1->br+=i;
   1dc5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc5e:	8b 40 50             	mov    0x50(%rax),%eax
   1dc61:	89 c2                	mov    %eax,%edx
   1dc63:	03 55 d4             	add    -0x2c(%rbp),%edx
   1dc66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc6a:	89 50 50             	mov    %edx,0x50(%rax)
				if(tmp1->br>=tmp1->b.Length)
   1dc6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc71:	8b 50 50             	mov    0x50(%rax),%edx
   1dc74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc78:	8b 40 1c             	mov    0x1c(%rax),%eax
   1dc7b:	39 c2                	cmp    %eax,%edx
   1dc7d:	0f 8c 08 01 00 00    	jl     1dd8b <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x209>
				{
					FUNCTION_CALL(tmp1->cb,s,tmp1);
   1dc83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc87:	48 8b 40 30          	mov    0x30(%rax),%rax
   1dc8b:	48 85 c0             	test   %rax,%rax
   1dc8e:	0f 85 85 00 00 00    	jne    1dd19 <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x197>
   1dc94:	bf 18 00 00 00       	mov    $0x18,%edi
   1dc99:	e8 92 88 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1dc9e:	48 89 c3             	mov    %rax,%rbx
   1dca1:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1dca8:	48 89 c7             	mov    %rax,%rdi
   1dcab:	e8 40 8d ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1dcb0:	48 8d 95 7f ff ff ff 	lea    -0x81(%rbp),%rdx
   1dcb7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1dcbe:	48 8d 35 5b 65 00 00 	lea    0x655b(%rip),%rsi        # 24220 <_ZStL6ignore+0x56>
   1dcc5:	48 89 c7             	mov    %rax,%rdi
   1dcc8:	e8 13 83 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1dccd:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1dcd4:	48 89 c6             	mov    %rax,%rsi
   1dcd7:	48 89 df             	mov    %rbx,%rdi
   1dcda:	e8 81 83 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1dcdf:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1dce6:	48 89 c7             	mov    %rax,%rdi
   1dce9:	e8 52 7e ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1dcee:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1dcf5:	48 89 c7             	mov    %rax,%rdi
   1dcf8:	e8 43 88 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1dcfd:	48 8b 05 94 c3 20 00 	mov    0x20c394(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1dd04:	48 89 c2             	mov    %rax,%rdx
   1dd07:	48 8b 05 2a c4 20 00 	mov    0x20c42a(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1dd0e:	48 89 c6             	mov    %rax,%rsi
   1dd11:	48 89 df             	mov    %rbx,%rdi
   1dd14:	e8 f7 89 ff ff       	callq  16710 <__cxa_throw@plt>
   1dd19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd1d:	4c 8b 40 30          	mov    0x30(%rax),%r8
   1dd21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd25:	48 8b 40 38          	mov    0x38(%rax),%rax
   1dd29:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1dd2d:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1dd34:	48 89 ce             	mov    %rcx,%rsi
   1dd37:	48 89 c7             	mov    %rax,%rdi
   1dd3a:	41 ff d0             	callq  *%r8
					delete tmp1->sb;
   1dd3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd41:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dd45:	48 85 c0             	test   %rax,%rax
   1dd48:	74 1f                	je     1dd69 <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x1e7>
   1dd4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd4e:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dd52:	48 8b 00             	mov    (%rax),%rax
   1dd55:	48 83 c0 08          	add    $0x8,%rax
   1dd59:	48 8b 10             	mov    (%rax),%rdx
   1dd5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd60:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dd64:	48 89 c7             	mov    %rax,%rdi
   1dd67:	ff d2                	callq  *%rdx
					//tmp1->b.Release();
					delete tmp1;
   1dd69:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1dd6d:	48 85 db             	test   %rbx,%rbx
   1dd70:	0f 84 86 02 00 00    	je     1dffc <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x47a>
   1dd76:	48 89 df             	mov    %rbx,%rdi
   1dd79:	e8 32 8b ff ff       	callq  168b0 <_ZN6xaxaxa7Sockets6SOCKS53tmpD1Ev@plt>
   1dd7e:	48 89 df             	mov    %rbx,%rdi
   1dd81:	e8 6a 78 ff ff       	callq  155f0 <_ZdlPv@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
				delete tmp1->sb;
				//tmp1->b.Release();
				delete tmp1;
			}
		}
   1dd86:	e9 71 02 00 00       	jmpq   1dffc <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x47a>
					delete tmp1;
				}
				else
				{
					//tmp1->b=tmp1->b.SubBuffer(tmp1->br,tmp1->b.length-tmp1->br,false);
					s->BeginRead(tmp1->b.SubBuffer(tmp1->br,tmp1->b.Length-tmp1->br),Stream::Callback(cb2,tmp1));
   1dd8b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1dd92:	48 8b 00             	mov    (%rax),%rax
   1dd95:	48 83 c0 30          	add    $0x30,%rax
   1dd99:	48 8b 18             	mov    (%rax),%rbx
   1dd9c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1dda0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1dda4:	48 8b 0d dd c2 20 00 	mov    0x20c2dd(%rip),%rcx        # 22a088 <_DYNAMIC+0x1f0>
   1ddab:	48 89 ce             	mov    %rcx,%rsi
   1ddae:	48 89 c7             	mov    %rax,%rdi
   1ddb1:	e8 5a 88 ff ff       	callq  16610 <_ZN6xaxaxa6Stream8CallbackC1EPFvPvPS0_ES2_@plt>
   1ddb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddba:	8b 50 1c             	mov    0x1c(%rax),%edx
   1ddbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddc1:	8b 40 50             	mov    0x50(%rax),%eax
   1ddc4:	89 d1                	mov    %edx,%ecx
   1ddc6:	29 c1                	sub    %eax,%ecx
   1ddc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddcc:	8b 50 50             	mov    0x50(%rax),%edx
   1ddcf:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1ddd3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1ddd7:	48 89 c7             	mov    %rax,%rdi
   1ddda:	e8 c1 81 ff ff       	callq  15fa0 <_ZNK6xaxaxa6Buffer9SubBufferEii@plt>
   1dddf:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1dde3:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   1dde7:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
   1ddeb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1ddf2:	48 89 c7             	mov    %rax,%rdi
   1ddf5:	ff d3                	callq  *%rbx
   1ddf7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1ddfb:	48 89 c7             	mov    %rax,%rdi
   1ddfe:	e8 2d 77 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
				delete tmp1->sb;
				//tmp1->b.Release();
				delete tmp1;
			}
		}
   1de03:	e9 f4 01 00 00       	jmpq   1dffc <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x47a>
   1de08:	49 89 c5             	mov    %rax,%r13
   1de0b:	49 89 d4             	mov    %rdx,%r12
		{
			tmp* tmp1=(tmp*)obj;
			try
			{
				int i=s->EndRead();
				if(i<=0)throw Exception("SOCKS error occured");
   1de0e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1de15:	48 89 c7             	mov    %rax,%rdi
   1de18:	e8 23 7d ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1de1d:	eb 06                	jmp    1de25 <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x2a3>
   1de1f:	49 89 c5             	mov    %rax,%r13
   1de22:	49 89 d4             	mov    %rdx,%r12
   1de25:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1de2c:	48 89 c7             	mov    %rax,%rdi
   1de2f:	e8 0c 87 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1de34:	48 89 df             	mov    %rbx,%rdi
   1de37:	e8 74 87 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1de3c:	4c 89 e8             	mov    %r13,%rax
   1de3f:	4c 89 e2             	mov    %r12,%rdx
   1de42:	e9 96 00 00 00       	jmpq   1dedd <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x35b>
   1de47:	49 89 c5             	mov    %rax,%r13
   1de4a:	49 89 d4             	mov    %rdx,%r12
				dbgprint("========SOCKS response read====== "<<i<<" bytes received");
				tmp1->br+=i;
				if(tmp1->br>=tmp1->b.Length)
				{
					FUNCTION_CALL(tmp1->cb,s,tmp1);
   1de4d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1de54:	48 89 c7             	mov    %rax,%rdi
   1de57:	e8 e4 7c ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1de5c:	eb 06                	jmp    1de64 <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x2e2>
   1de5e:	49 89 c5             	mov    %rax,%r13
   1de61:	49 89 d4             	mov    %rdx,%r12
   1de64:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
   1de6b:	48 89 c7             	mov    %rax,%rdi
   1de6e:	e8 cd 86 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1de73:	48 89 df             	mov    %rbx,%rdi
   1de76:	e8 35 87 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1de7b:	4c 89 e8             	mov    %r13,%rax
   1de7e:	4c 89 e2             	mov    %r12,%rdx
   1de81:	eb 5a                	jmp    1dedd <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x35b>
   1de83:	49 89 c4             	mov    %rax,%r12
   1de86:	48 89 d3             	mov    %rdx,%rbx
					delete tmp1;
				}
				else
				{
					//tmp1->b=tmp1->b.SubBuffer(tmp1->br,tmp1->b.length-tmp1->br,false);
					s->BeginRead(tmp1->b.SubBuffer(tmp1->br,tmp1->b.Length-tmp1->br),Stream::Callback(cb2,tmp1));
   1de89:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1de8d:	48 89 c7             	mov    %rax,%rdi
   1de90:	e8 9b 76 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1de95:	4c 89 e0             	mov    %r12,%rax
   1de98:	48 89 da             	mov    %rbx,%rdx
   1de9b:	eb 40                	jmp    1dedd <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x35b>
   1de9d:	49 89 c4             	mov    %rax,%r12
				}
			}
			catch(Exception& ex)
			{
				tmp1->ex=ex;
				FUNCTION_CALL(tmp1->cb,s,tmp1);
   1dea0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1dea4:	48 89 c7             	mov    %rax,%rdi
   1dea7:	e8 94 7c ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1deac:	eb 03                	jmp    1deb1 <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x32f>
   1deae:	49 89 c4             	mov    %rax,%r12
   1deb1:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   1deb5:	48 89 c7             	mov    %rax,%rdi
   1deb8:	e8 83 86 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1debd:	48 89 df             	mov    %rbx,%rdi
   1dec0:	e8 eb 86 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1dec5:	4c 89 e3             	mov    %r12,%rbx
   1dec8:	eb 03                	jmp    1decd <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x34b>
   1deca:	48 89 c3             	mov    %rax,%rbx
				{
					//tmp1->b=tmp1->b.SubBuffer(tmp1->br,tmp1->b.length-tmp1->br,false);
					s->BeginRead(tmp1->b.SubBuffer(tmp1->br,tmp1->b.Length-tmp1->br),Stream::Callback(cb2,tmp1));
				}
			}
			catch(Exception& ex)
   1decd:	e8 4e 89 ff ff       	callq  16820 <__cxa_end_catch@plt>
   1ded2:	48 89 d8             	mov    %rbx,%rax
   1ded5:	48 89 c7             	mov    %rax,%rdi
   1ded8:	e8 d3 8b ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1dedd:	48 83 fa 01          	cmp    $0x1,%rdx
   1dee1:	74 08                	je     1deeb <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x369>
   1dee3:	48 89 c7             	mov    %rax,%rdi
   1dee6:	e8 c5 8b ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1deeb:	48 89 c7             	mov    %rax,%rdi
   1deee:	e8 2d 8a ff ff       	callq  16920 <__cxa_begin_catch@plt>
   1def3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
			{
				tmp1->ex=ex;
   1def7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1defb:	48 8d 50 58          	lea    0x58(%rax),%rdx
   1deff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1df03:	48 89 c6             	mov    %rax,%rsi
   1df06:	48 89 d7             	mov    %rdx,%rdi
   1df09:	e8 92 82 ff ff       	callq  161a0 <_ZN6xaxaxa9ExceptionaSERKS0_@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
   1df0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1df12:	48 8b 40 30          	mov    0x30(%rax),%rax
   1df16:	48 85 c0             	test   %rax,%rax
   1df19:	75 73                	jne    1df8e <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x40c>
   1df1b:	bf 18 00 00 00       	mov    $0x18,%edi
   1df20:	e8 0b 86 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1df25:	48 89 c3             	mov    %rax,%rbx
   1df28:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   1df2c:	48 89 c7             	mov    %rax,%rdi
   1df2f:	e8 bc 8a ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1df34:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
   1df38:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1df3c:	48 8d 35 dd 62 00 00 	lea    0x62dd(%rip),%rsi        # 24220 <_ZStL6ignore+0x56>
   1df43:	48 89 c7             	mov    %rax,%rdi
   1df46:	e8 95 80 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1df4b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1df4f:	48 89 c6             	mov    %rax,%rsi
   1df52:	48 89 df             	mov    %rbx,%rdi
   1df55:	e8 06 81 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   1df5a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1df5e:	48 89 c7             	mov    %rax,%rdi
   1df61:	e8 da 7b ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1df66:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   1df6a:	48 89 c7             	mov    %rax,%rdi
   1df6d:	e8 ce 85 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1df72:	48 8b 05 1f c1 20 00 	mov    0x20c11f(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1df79:	48 89 c2             	mov    %rax,%rdx
   1df7c:	48 8b 05 b5 c1 20 00 	mov    0x20c1b5(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1df83:	48 89 c6             	mov    %rax,%rsi
   1df86:	48 89 df             	mov    %rbx,%rdi
   1df89:	e8 82 87 ff ff       	callq  16710 <__cxa_throw@plt>
   1df8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1df92:	4c 8b 40 30          	mov    0x30(%rax),%r8
   1df96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1df9a:	48 8b 40 38          	mov    0x38(%rax),%rax
   1df9e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1dfa2:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1dfa9:	48 89 ce             	mov    %rcx,%rsi
   1dfac:	48 89 c7             	mov    %rax,%rdi
   1dfaf:	41 ff d0             	callq  *%r8
				delete tmp1->sb;
   1dfb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dfb6:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dfba:	48 85 c0             	test   %rax,%rax
   1dfbd:	74 1f                	je     1dfde <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x45c>
   1dfbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dfc3:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dfc7:	48 8b 00             	mov    (%rax),%rax
   1dfca:	48 83 c0 08          	add    $0x8,%rax
   1dfce:	48 8b 10             	mov    (%rax),%rdx
   1dfd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dfd5:	48 8b 40 20          	mov    0x20(%rax),%rax
   1dfd9:	48 89 c7             	mov    %rax,%rdi
   1dfdc:	ff d2                	callq  *%rdx
				//tmp1->b.Release();
				delete tmp1;
   1dfde:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1dfe2:	48 85 db             	test   %rbx,%rbx
   1dfe5:	74 10                	je     1dff7 <_ZN6xaxaxa7Sockets6SOCKS53cb2EPvPNS_6StreamE+0x475>
   1dfe7:	48 89 df             	mov    %rbx,%rdi
   1dfea:	e8 c1 88 ff ff       	callq  168b0 <_ZN6xaxaxa7Sockets6SOCKS53tmpD1Ev@plt>
   1dfef:	48 89 df             	mov    %rbx,%rdi
   1dff2:	e8 f9 75 ff ff       	callq  155f0 <_ZdlPv@plt>
				{
					//tmp1->b=tmp1->b.SubBuffer(tmp1->br,tmp1->b.length-tmp1->br,false);
					s->BeginRead(tmp1->b.SubBuffer(tmp1->br,tmp1->b.Length-tmp1->br),Stream::Callback(cb2,tmp1));
				}
			}
			catch(Exception& ex)
   1dff7:	e8 24 88 ff ff       	callq  16820 <__cxa_end_catch@plt>
				FUNCTION_CALL(tmp1->cb,s,tmp1);
				delete tmp1->sb;
				//tmp1->b.Release();
				delete tmp1;
			}
		}
   1dffc:	90                   	nop
   1dffd:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   1e004:	5b                   	pop    %rbx
   1e005:	41 5c                	pop    %r12
   1e007:	41 5d                	pop    %r13
   1e009:	5d                   	pop    %rbp
   1e00a:	c3                   	retq   
   1e00b:	90                   	nop

000000000001e00c <_ZN6xaxaxa7Sockets6SOCKS516socks_endconnectEPv>:
		void SOCKS5::socks_endconnect(void* v)
		{
   1e00c:	55                   	push   %rbp
   1e00d:	48 89 e5             	mov    %rsp,%rbp
   1e010:	41 54                	push   %r12
   1e012:	53                   	push   %rbx
   1e013:	48 83 ec 20          	sub    $0x20,%rsp
   1e017:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
			tmp* tmp1=(tmp*)v;
   1e01b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e01f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
			if(tmp1->ex.Code!=0)throw tmp1->ex;
   1e023:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e027:	8b 40 64             	mov    0x64(%rax),%eax
   1e02a:	85 c0                	test   %eax,%eax
   1e02c:	74 52                	je     1e080 <_ZN6xaxaxa7Sockets6SOCKS516socks_endconnectEPv+0x74>
   1e02e:	bf 18 00 00 00       	mov    $0x18,%edi
   1e033:	e8 f8 84 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1e038:	48 89 c3             	mov    %rax,%rbx
   1e03b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e03f:	48 83 c0 58          	add    $0x58,%rax
   1e043:	48 89 c6             	mov    %rax,%rsi
   1e046:	48 89 df             	mov    %rbx,%rdi
   1e049:	e8 72 72 ff ff       	callq  152c0 <_ZN6xaxaxa9ExceptionC1ERKS0_@plt>
   1e04e:	48 8b 05 43 c0 20 00 	mov    0x20c043(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1e055:	48 89 c2             	mov    %rax,%rdx
   1e058:	48 8b 05 d9 c0 20 00 	mov    0x20c0d9(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1e05f:	48 89 c6             	mov    %rax,%rsi
   1e062:	48 89 df             	mov    %rbx,%rdi
   1e065:	e8 a6 86 ff ff       	callq  16710 <__cxa_throw@plt>
   1e06a:	49 89 c4             	mov    %rax,%r12
   1e06d:	48 89 df             	mov    %rbx,%rdi
   1e070:	e8 3b 85 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1e075:	4c 89 e0             	mov    %r12,%rax
   1e078:	48 89 c7             	mov    %rax,%rdi
   1e07b:	e8 30 8a ff ff       	callq  16ab0 <_Unwind_Resume@plt>
		}
   1e080:	90                   	nop
   1e081:	48 83 c4 20          	add    $0x20,%rsp
   1e085:	5b                   	pop    %rbx
   1e086:	41 5c                	pop    %r12
   1e088:	5d                   	pop    %rbp
   1e089:	c3                   	retq   

000000000001e08a <_Z41__static_initialization_and_destruction_0ii>:
	}
}
   1e08a:	55                   	push   %rbp
   1e08b:	48 89 e5             	mov    %rsp,%rbp
   1e08e:	48 83 ec 10          	sub    $0x10,%rsp
   1e092:	89 7d fc             	mov    %edi,-0x4(%rbp)
   1e095:	89 75 f8             	mov    %esi,-0x8(%rbp)
   1e098:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   1e09c:	0f 85 a2 00 00 00    	jne    1e144 <_Z41__static_initialization_and_destruction_0ii+0xba>
   1e0a2:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   1e0a9:	0f 85 95 00 00 00    	jne    1e144 <_Z41__static_initialization_and_destruction_0ii+0xba>
   1e0af:	48 8d 3d 42 ce 20 00 	lea    0x20ce42(%rip),%rdi        # 22aef8 <_ZStL8__ioinit>
   1e0b6:	e8 95 76 ff ff       	callq  15750 <_ZNSt8ios_base4InitC1Ev@plt>
   1e0bb:	48 8b 05 fe bf 20 00 	mov    0x20bffe(%rip),%rax        # 22a0c0 <_DYNAMIC+0x228>
   1e0c2:	48 8b 15 27 c0 20 00 	mov    0x20c027(%rip),%rdx        # 22a0f0 <_DYNAMIC+0x258>
   1e0c9:	48 8d 35 28 ce 20 00 	lea    0x20ce28(%rip),%rsi        # 22aef8 <_ZStL8__ioinit>
   1e0d0:	48 89 c7             	mov    %rax,%rdi
   1e0d3:	e8 98 78 ff ff       	callq  15970 <__cxa_atexit@plt>
static boost::arg<8> _8;
static boost::arg<9> _9;

#else

boost::arg<1> _1;
   1e0d8:	48 8d 3d 1a ce 20 00 	lea    0x20ce1a(%rip),%rdi        # 22aef9 <_ZN12_GLOBAL__N_12_1E>
   1e0df:	e8 3c 82 ff ff       	callq  16320 <_ZN5boost3argILi1EEC1Ev@plt>
boost::arg<2> _2;
   1e0e4:	48 8d 3d 0f ce 20 00 	lea    0x20ce0f(%rip),%rdi        # 22aefa <_ZN12_GLOBAL__N_12_2E>
   1e0eb:	e8 b0 7b ff ff       	callq  15ca0 <_ZN5boost3argILi2EEC1Ev@plt>
boost::arg<3> _3;
   1e0f0:	48 8d 3d 04 ce 20 00 	lea    0x20ce04(%rip),%rdi        # 22aefb <_ZN12_GLOBAL__N_12_3E>
   1e0f7:	e8 e4 7d ff ff       	callq  15ee0 <_ZN5boost3argILi3EEC1Ev@plt>
boost::arg<4> _4;
   1e0fc:	48 8d 3d f9 cd 20 00 	lea    0x20cdf9(%rip),%rdi        # 22aefc <_ZN12_GLOBAL__N_12_4E>
   1e103:	e8 a8 78 ff ff       	callq  159b0 <_ZN5boost3argILi4EEC1Ev@plt>
boost::arg<5> _5;
   1e108:	48 8d 3d ee cd 20 00 	lea    0x20cdee(%rip),%rdi        # 22aefd <_ZN12_GLOBAL__N_12_5E>
   1e10f:	e8 ac 80 ff ff       	callq  161c0 <_ZN5boost3argILi5EEC1Ev@plt>
boost::arg<6> _6;
   1e114:	48 8d 3d e3 cd 20 00 	lea    0x20cde3(%rip),%rdi        # 22aefe <_ZN12_GLOBAL__N_12_6E>
   1e11b:	e8 b0 71 ff ff       	callq  152d0 <_ZN5boost3argILi6EEC1Ev@plt>
boost::arg<7> _7;
   1e120:	48 8d 3d d8 cd 20 00 	lea    0x20cdd8(%rip),%rdi        # 22aeff <_ZN12_GLOBAL__N_12_7E>
   1e127:	e8 74 75 ff ff       	callq  156a0 <_ZN5boost3argILi7EEC1Ev@plt>
boost::arg<8> _8;
   1e12c:	48 8d 3d cd cd 20 00 	lea    0x20cdcd(%rip),%rdi        # 22af00 <_ZN12_GLOBAL__N_12_8E>
   1e133:	e8 f8 72 ff ff       	callq  15430 <_ZN5boost3argILi8EEC1Ev@plt>
boost::arg<9> _9;
   1e138:	48 8d 3d c2 cd 20 00 	lea    0x20cdc2(%rip),%rdi        # 22af01 <_ZN12_GLOBAL__N_12_9E>
   1e13f:	e8 9c 72 ff ff       	callq  153e0 <_ZN5boost3argILi9EEC1Ev@plt>
   1e144:	c9                   	leaveq 
   1e145:	c3                   	retq   

000000000001e146 <_GLOBAL__sub_I_asyncsock.cpp>:
   1e146:	55                   	push   %rbp
   1e147:	48 89 e5             	mov    %rsp,%rbp
   1e14a:	be ff ff 00 00       	mov    $0xffff,%esi
   1e14f:	bf 01 00 00 00       	mov    $0x1,%edi
   1e154:	e8 31 ff ff ff       	callq  1e08a <_Z41__static_initialization_and_destruction_0ii>
   1e159:	5d                   	pop    %rbp
   1e15a:	c3                   	retq   
   1e15b:	90                   	nop

000000000001e15c <_ZN6xaxaxa9ExceptionC1Ev>:
		}
		inline Exception(int code, std::string message)
		{
			init(code, message);
		}
		inline Exception()
   1e15c:	55                   	push   %rbp
   1e15d:	48 89 e5             	mov    %rsp,%rbp
   1e160:	53                   	push   %rbx
   1e161:	48 83 ec 18          	sub    $0x18,%rsp
   1e165:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
		{
   1e169:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e16d:	48 89 c7             	mov    %rax,%rdi
   1e170:	e8 db 7e ff ff       	callq  16050 <_ZN6xaxaxa6ObjectC2Ev@plt>
   1e175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e179:	48 8b 15 60 bf 20 00 	mov    0x20bf60(%rip),%rdx        # 22a0e0 <_DYNAMIC+0x248>
   1e180:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1e184:	48 89 10             	mov    %rdx,(%rax)
   1e187:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e18b:	48 83 c0 10          	add    $0x10,%rax
   1e18f:	48 89 c7             	mov    %rax,%rdi
   1e192:	e8 b9 70 ff ff       	callq  15250 <_ZNSsC1Ev@plt>
			Code = 0;
   1e197:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e19b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
		}
   1e1a2:	48 83 c4 18          	add    $0x18,%rsp
   1e1a6:	5b                   	pop    %rbx
   1e1a7:	5d                   	pop    %rbp
   1e1a8:	c3                   	retq   
   1e1a9:	48 89 c3             	mov    %rax,%rbx
		inline Exception(int code, std::string message)
		{
			init(code, message);
		}
		inline Exception()
		{
   1e1ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e1b0:	48 89 c7             	mov    %rax,%rdi
   1e1b3:	e8 28 80 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   1e1b8:	48 89 d8             	mov    %rbx,%rax
   1e1bb:	48 89 c7             	mov    %rax,%rdi
   1e1be:	e8 ed 88 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1e1c3:	90                   	nop

000000000001e1c4 <_ZN6xaxaxa6BufferC1EPvi>:
		{
			Data = NULL;
			IsRaw = true;
			Length = 0;
		}
		Buffer(void* buf, int length)
   1e1c4:	55                   	push   %rbp
   1e1c5:	48 89 e5             	mov    %rsp,%rbp
   1e1c8:	48 83 ec 20          	sub    $0x20,%rsp
   1e1cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e1d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e1d4:	89 55 ec             	mov    %edx,-0x14(%rbp)
		{
   1e1d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e1db:	be 00 00 00 00       	mov    $0x0,%esi
   1e1e0:	48 89 c7             	mov    %rax,%rdi
   1e1e3:	e8 28 75 ff ff       	callq  15710 <_ZN5boost12shared_arrayIhEC1EPh@plt>
			this->Data = (Byte*) buf;
   1e1e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e1ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e1f0:	48 89 50 10          	mov    %rdx,0x10(%rax)
			this->Length = length;
   1e1f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e1f8:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1e1fb:	89 50 1c             	mov    %edx,0x1c(%rax)
			this->IsRaw = true;
   1e1fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e202:	c6 40 18 01          	movb   $0x1,0x18(%rax)
		}
   1e206:	c9                   	leaveq 
   1e207:	c3                   	retq   

000000000001e208 <_ZN6xaxaxa6BufferC1Ei>:
			this->Data = buf;
			this->Length = length;
			this->IsRaw = false;
			this->pbuf = orig;
		}
		Buffer(int length)
   1e208:	55                   	push   %rbp
   1e209:	48 89 e5             	mov    %rsp,%rbp
   1e20c:	53                   	push   %rbx
   1e20d:	48 83 ec 28          	sub    $0x28,%rsp
   1e211:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e215:	89 75 d4             	mov    %esi,-0x2c(%rbp)
		{
   1e218:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e21c:	be 00 00 00 00       	mov    $0x0,%esi
   1e221:	48 89 c7             	mov    %rax,%rdi
   1e224:	e8 e7 74 ff ff       	callq  15710 <_ZN5boost12shared_arrayIhEC1EPh@plt>
			this->Length = length;
   1e229:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e22d:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   1e230:	89 50 1c             	mov    %edx,0x1c(%rax)
			if (length <= 0)
   1e233:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   1e237:	7f 19                	jg     1e252 <_ZN6xaxaxa6BufferC1Ei+0x4a>
			{
				this->Data = NULL;
   1e239:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e23d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1e244:	00 
				this->IsRaw = true;
   1e245:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e249:	c6 40 18 01          	movb   $0x1,0x18(%rax)
				return;
   1e24d:	e9 83 00 00 00       	jmpq   1e2d5 <_ZN6xaxaxa6BufferC1Ei+0xcd>
			}
			this->Data = new Byte[length];
   1e252:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1e255:	48 98                	cltq   
   1e257:	48 89 c7             	mov    %rax,%rdi
   1e25a:	e8 51 73 ff ff       	callq  155b0 <_Znam@plt>
   1e25f:	48 89 c2             	mov    %rax,%rdx
   1e262:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e266:	48 89 50 10          	mov    %rdx,0x10(%rax)
			this->pbuf = boost::shared_array<Byte>(this->Data);
   1e26a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e26e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1e272:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e276:	48 89 d6             	mov    %rdx,%rsi
   1e279:	48 89 c7             	mov    %rax,%rdi
   1e27c:	e8 8f 74 ff ff       	callq  15710 <_ZN5boost12shared_arrayIhEC1EPh@plt>
   1e281:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e285:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1e289:	48 89 d6             	mov    %rdx,%rsi
   1e28c:	48 89 c7             	mov    %rax,%rdi
   1e28f:	e8 dc 7b ff ff       	callq  15e70 <_ZN5boost12shared_arrayIhEaSERKS1_@plt>
   1e294:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e298:	48 89 c7             	mov    %rax,%rdi
   1e29b:	e8 20 83 ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
			this->IsRaw = false;
   1e2a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e2a4:	c6 40 18 00          	movb   $0x0,0x18(%rax)
   1e2a8:	eb 2b                	jmp    1e2d5 <_ZN6xaxaxa6BufferC1Ei+0xcd>
   1e2aa:	48 89 c3             	mov    %rax,%rbx
				this->Data = NULL;
				this->IsRaw = true;
				return;
			}
			this->Data = new Byte[length];
			this->pbuf = boost::shared_array<Byte>(this->Data);
   1e2ad:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e2b1:	48 89 c7             	mov    %rax,%rdi
   1e2b4:	e8 07 83 ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
   1e2b9:	eb 03                	jmp    1e2be <_ZN6xaxaxa6BufferC1Ei+0xb6>
   1e2bb:	48 89 c3             	mov    %rax,%rbx
			this->Length = length;
			this->IsRaw = false;
			this->pbuf = orig;
		}
		Buffer(int length)
		{
   1e2be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e2c2:	48 89 c7             	mov    %rax,%rdi
   1e2c5:	e8 f6 82 ff ff       	callq  165c0 <_ZN5boost12shared_arrayIhED1Ev@plt>
   1e2ca:	48 89 d8             	mov    %rbx,%rax
   1e2cd:	48 89 c7             	mov    %rax,%rdi
   1e2d0:	e8 db 87 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
				return;
			}
			this->Data = new Byte[length];
			this->pbuf = boost::shared_array<Byte>(this->Data);
			this->IsRaw = false;
		}
   1e2d5:	48 83 c4 28          	add    $0x28,%rsp
   1e2d9:	5b                   	pop    %rbx
   1e2da:	5d                   	pop    %rbp
   1e2db:	c3                   	retq   

000000000001e2dc <_ZN6xaxaxa6Stream8CallbackC1EPFvPvPS0_ES2_>:
		virtual void Write(Buffer buf)=0;
		virtual void Flush()=0;
		virtual void Close()=0;

		//typedef boost::function<void (void*,Stream*)> Callback;
		FUNCTION_DECLARE(Callback,void,Stream*);
   1e2dc:	55                   	push   %rbp
   1e2dd:	48 89 e5             	mov    %rsp,%rbp
   1e2e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e2e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e2e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1e2ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e2f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e2f4:	48 89 10             	mov    %rdx,(%rax)
   1e2f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e2fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e2ff:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1e303:	5d                   	pop    %rbp
   1e304:	c3                   	retq   
   1e305:	90                   	nop

000000000001e306 <_ZN6xaxaxa7Sockets9IPAddressC1Ev>:
#define CreateSocket(domain,type,protocol) socket(domain,type,protocol);

		struct IPAddress
		{
			in_addr a;
			inline IPAddress(){}
   1e306:	55                   	push   %rbp
   1e307:	48 89 e5             	mov    %rsp,%rbp
   1e30a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e30e:	5d                   	pop    %rbp
   1e30f:	c3                   	retq   

000000000001e310 <_ZN6xaxaxa7Sockets9IPAddressC1ER7in_addr>:
			inline IPAddress(const char* addr/*NOT hostname*/)
			{
				inet_pton(AF_INET, addr, &a.s_addr);
			}
			inline IPAddress(in_addr& a)
   1e310:	55                   	push   %rbp
   1e311:	48 89 e5             	mov    %rsp,%rbp
   1e314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e318:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			{
				this->a=a;
   1e31c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e320:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e324:	8b 12                	mov    (%rdx),%edx
   1e326:	89 10                	mov    %edx,(%rax)
			}
   1e328:	5d                   	pop    %rbp
   1e329:	c3                   	retq   

000000000001e32a <_ZN6xaxaxa7Sockets11IPv6AddressC1Ev>:
		};
		struct IPv6Address
		{
			in6_addr a;
			inline IPv6Address(){}
   1e32a:	55                   	push   %rbp
   1e32b:	48 89 e5             	mov    %rsp,%rbp
   1e32e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e332:	5d                   	pop    %rbp
   1e333:	c3                   	retq   

000000000001e334 <_ZN6xaxaxa7Sockets11IPv6AddressC1ER8in6_addr>:
			inline IPv6Address(const char* addr)
			{
				inet_pton(AF_INET6, addr, &a.__in6_u);
			}
			inline IPv6Address(in6_addr& a)
   1e334:	55                   	push   %rbp
   1e335:	48 89 e5             	mov    %rsp,%rbp
   1e338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e33c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			{
				this->a=a;
   1e340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e344:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e348:	48 8b 0a             	mov    (%rdx),%rcx
   1e34b:	48 89 08             	mov    %rcx,(%rax)
   1e34e:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   1e352:	48 89 50 08          	mov    %rdx,0x8(%rax)
			}
   1e356:	5d                   	pop    %rbp
   1e357:	c3                   	retq   

000000000001e358 <_ZN6xaxaxa7Sockets8EndPointC1Ev>:
		};
		class EndPoint
   1e358:	55                   	push   %rbp
   1e359:	48 89 e5             	mov    %rsp,%rbp
   1e35c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e364:	48 8b 15 a5 bd 20 00 	mov    0x20bda5(%rip),%rdx        # 22a110 <_DYNAMIC+0x278>
   1e36b:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1e36f:	48 89 10             	mov    %rdx,(%rax)
   1e372:	5d                   	pop    %rbp
   1e373:	c3                   	retq   

000000000001e374 <_ZN6xaxaxa7Sockets10IPEndPointC1ER11sockaddr_in>:
			{
				this->AddressFamily=AF_INET;
				this->Address=address;
				this->Port=port;
			}
			IPEndPoint(sockaddr_in& addr)
   1e374:	55                   	push   %rbp
   1e375:	48 89 e5             	mov    %rsp,%rbp
   1e378:	48 83 ec 20          	sub    $0x20,%rsp
   1e37c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e380:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
			{
   1e384:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e388:	48 89 c7             	mov    %rax,%rdi
   1e38b:	e8 70 84 ff ff       	callq  16800 <_ZN6xaxaxa7Sockets8EndPointC2Ev@plt>
   1e390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e394:	48 8b 15 c5 bd 20 00 	mov    0x20bdc5(%rip),%rdx        # 22a160 <_DYNAMIC+0x2c8>
   1e39b:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1e39f:	48 89 10             	mov    %rdx,(%rax)
   1e3a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e3a6:	48 83 c0 0c          	add    $0xc,%rax
   1e3aa:	48 89 c7             	mov    %rax,%rdi
   1e3ad:	e8 fe 82 ff ff       	callq  166b0 <_ZN6xaxaxa7Sockets9IPAddressC1Ev@plt>
				this->AddressFamily=AF_INET;
   1e3b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e3b6:	c7 40 08 02 00 00 00 	movl   $0x2,0x8(%rax)
				this->Address=IPAddress(addr.sin_addr);
   1e3bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e3c1:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1e3c5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1e3c9:	48 89 d6             	mov    %rdx,%rsi
   1e3cc:	48 89 c7             	mov    %rax,%rdi
   1e3cf:	e8 5c 7a ff ff       	callq  15e30 <_ZN6xaxaxa7Sockets9IPAddressC1ER7in_addr@plt>
   1e3d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e3d8:	8b 55 f0             	mov    -0x10(%rbp),%edx
   1e3db:	89 50 0c             	mov    %edx,0xc(%rax)
				this->Port=ntohs(addr.sin_port);
   1e3de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e3e2:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   1e3e6:	0f b7 c0             	movzwl %ax,%eax
   1e3e9:	89 c7                	mov    %eax,%edi
   1e3eb:	e8 50 7a ff ff       	callq  15e40 <ntohs@plt>
   1e3f0:	0f b7 d0             	movzwl %ax,%edx
   1e3f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e3f7:	89 50 10             	mov    %edx,0x10(%rax)
			}
   1e3fa:	c9                   	leaveq 
   1e3fb:	c3                   	retq   

000000000001e3fc <_ZN6xaxaxa7Sockets10IPEndPoint11GetSockAddrEP8sockaddr>:
			virtual void GetSockAddr(sockaddr* addr)
   1e3fc:	55                   	push   %rbp
   1e3fd:	48 89 e5             	mov    %rsp,%rbp
   1e400:	48 83 ec 20          	sub    $0x20,%rsp
   1e404:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e408:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
			{
				sockaddr_in* addr_in=(sockaddr_in*)addr;
   1e40c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e410:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
				addr_in->sin_family=AF_INET;
   1e414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e418:	66 c7 00 02 00       	movw   $0x2,(%rax)
				addr_in->sin_port=htons(Port);
   1e41d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e421:	8b 40 10             	mov    0x10(%rax),%eax
   1e424:	0f b7 c0             	movzwl %ax,%eax
   1e427:	89 c7                	mov    %eax,%edi
   1e429:	e8 e2 71 ff ff       	callq  15610 <htons@plt>
   1e42e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1e432:	66 89 42 02          	mov    %ax,0x2(%rdx)
				addr_in->sin_addr=Address.a;
   1e436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e43a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e43e:	8b 52 0c             	mov    0xc(%rdx),%edx
   1e441:	89 50 04             	mov    %edx,0x4(%rax)
			}
   1e444:	c9                   	leaveq 
   1e445:	c3                   	retq   

000000000001e446 <_ZN6xaxaxa7Sockets10IPEndPoint15GetSockAddrSizeEv>:
			virtual int GetSockAddrSize()
   1e446:	55                   	push   %rbp
   1e447:	48 89 e5             	mov    %rsp,%rbp
   1e44a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
			{
				return sizeof(sockaddr_in);
   1e44e:	b8 10 00 00 00       	mov    $0x10,%eax
			}
   1e453:	5d                   	pop    %rbp
   1e454:	c3                   	retq   
   1e455:	90                   	nop

000000000001e456 <_ZN6xaxaxa7Sockets12IPv6EndPointC1ER12sockaddr_in6>:
			{
				this->AddressFamily=AF_INET6;
				this->Address=address;
				this->Port=port;
			}
			IPv6EndPoint(sockaddr_in6& addr)
   1e456:	55                   	push   %rbp
   1e457:	48 89 e5             	mov    %rsp,%rbp
   1e45a:	48 83 ec 20          	sub    $0x20,%rsp
   1e45e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e462:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
			{
   1e466:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e46a:	48 89 c7             	mov    %rax,%rdi
   1e46d:	e8 8e 83 ff ff       	callq  16800 <_ZN6xaxaxa7Sockets8EndPointC2Ev@plt>
   1e472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e476:	48 8b 15 eb bc 20 00 	mov    0x20bceb(%rip),%rdx        # 22a168 <_DYNAMIC+0x2d0>
   1e47d:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1e481:	48 89 10             	mov    %rdx,(%rax)
   1e484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e488:	48 83 c0 0c          	add    $0xc,%rax
   1e48c:	48 89 c7             	mov    %rax,%rdi
   1e48f:	e8 ac 82 ff ff       	callq  16740 <_ZN6xaxaxa7Sockets11IPv6AddressC1Ev@plt>
				this->AddressFamily=AF_INET6;
   1e494:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e498:	c7 40 08 0a 00 00 00 	movl   $0xa,0x8(%rax)
				this->Address=IPv6Address(addr.sin6_addr);
   1e49f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e4a3:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1e4a7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1e4ab:	48 89 d6             	mov    %rdx,%rsi
   1e4ae:	48 89 c7             	mov    %rax,%rdi
   1e4b1:	e8 7a 78 ff ff       	callq  15d30 <_ZN6xaxaxa7Sockets11IPv6AddressC1ER8in6_addr@plt>
   1e4b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e4ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e4be:	48 89 50 0c          	mov    %rdx,0xc(%rax)
   1e4c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1e4c6:	48 89 50 14          	mov    %rdx,0x14(%rax)
				this->Port=ntohs(addr.sin6_port);
   1e4ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e4ce:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   1e4d2:	0f b7 c0             	movzwl %ax,%eax
   1e4d5:	89 c7                	mov    %eax,%edi
   1e4d7:	e8 64 79 ff ff       	callq  15e40 <ntohs@plt>
   1e4dc:	0f b7 d0             	movzwl %ax,%edx
   1e4df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e4e3:	89 50 1c             	mov    %edx,0x1c(%rax)
			}
   1e4e6:	c9                   	leaveq 
   1e4e7:	c3                   	retq   

000000000001e4e8 <_ZN6xaxaxa7Sockets12IPv6EndPoint11GetSockAddrEP8sockaddr>:
			virtual void GetSockAddr(sockaddr* addr)
   1e4e8:	55                   	push   %rbp
   1e4e9:	48 89 e5             	mov    %rsp,%rbp
   1e4ec:	48 83 ec 20          	sub    $0x20,%rsp
   1e4f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e4f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
			{
				sockaddr_in6* addr_in=(sockaddr_in6*)addr;
   1e4f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e4fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
				addr_in->sin6_family=AF_INET6;
   1e500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e504:	66 c7 00 0a 00       	movw   $0xa,(%rax)
				addr_in->sin6_port=htons(Port);
   1e509:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e50d:	8b 40 1c             	mov    0x1c(%rax),%eax
   1e510:	0f b7 c0             	movzwl %ax,%eax
   1e513:	89 c7                	mov    %eax,%edi
   1e515:	e8 f6 70 ff ff       	callq  15610 <htons@plt>
   1e51a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1e51e:	66 89 42 02          	mov    %ax,0x2(%rdx)
				addr_in->sin6_addr=Address.a;
   1e522:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e526:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e52a:	48 8b 4a 0c          	mov    0xc(%rdx),%rcx
   1e52e:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1e532:	48 8b 52 14          	mov    0x14(%rdx),%rdx
   1e536:	48 89 50 10          	mov    %rdx,0x10(%rax)
			}
   1e53a:	c9                   	leaveq 
   1e53b:	c3                   	retq   

000000000001e53c <_ZN6xaxaxa7Sockets12IPv6EndPoint15GetSockAddrSizeEv>:
			virtual int GetSockAddrSize()
   1e53c:	55                   	push   %rbp
   1e53d:	48 89 e5             	mov    %rsp,%rbp
   1e540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
			{
				return sizeof(sockaddr_in);
   1e544:	b8 10 00 00 00       	mov    $0x10,%eax
			}
   1e549:	5d                   	pop    %rbp
   1e54a:	c3                   	retq   
   1e54b:	90                   	nop

000000000001e54c <_ZN6xaxaxa7Sockets6SocketC1Ei>:
				//int set = 1;
				//setsockopt(_s, SOL_SOCKET, SO_NOSIGPIPE, (void *)&set, sizeof(int));
				dbgprint("socket " << _s << " created");
				//this->autoClose=autoClose;
			}
			inline Socket(SOCKET s)
   1e54c:	55                   	push   %rbp
   1e54d:	48 89 e5             	mov    %rsp,%rbp
   1e550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e554:	89 75 f4             	mov    %esi,-0xc(%rbp)
			{
				_s=s;
   1e557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e55b:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1e55e:	89 10                	mov    %edx,(%rax)
				//int set = 1;
				//setsockopt(_s, SOL_SOCKET, SO_NOSIGPIPE, (void *)&set, sizeof(int));
				//this->autoClose=autoClose;
			}
   1e560:	5d                   	pop    %rbp
   1e561:	c3                   	retq   

000000000001e562 <_ZN6xaxaxa7Sockets6Socket6AcceptEi>:
					if(errno==4)goto retry;
					throw Exception(errno);
				}
				else return tmp;
			}
			inline Socket Accept(Int flags=0)
   1e562:	55                   	push   %rbp
   1e563:	48 89 e5             	mov    %rsp,%rbp
   1e566:	41 54                	push   %r12
   1e568:	53                   	push   %rbx
   1e569:	48 83 ec 20          	sub    $0x20,%rsp
   1e56d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e571:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   1e574:	eb 01                	jmp    1e577 <_ZN6xaxaxa7Sockets6Socket6AcceptEi+0x15>
			{
			retry:
				SOCKET s=accept4(_s,NULL,NULL,flags);
				if(s==-1)
				{
					if(errno==4)goto retry;
   1e576:	90                   	nop
				else return tmp;
			}
			inline Socket Accept(Int flags=0)
			{
			retry:
				SOCKET s=accept4(_s,NULL,NULL,flags);
   1e577:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e57b:	8b 00                	mov    (%rax),%eax
   1e57d:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   1e580:	89 d1                	mov    %edx,%ecx
   1e582:	ba 00 00 00 00       	mov    $0x0,%edx
   1e587:	be 00 00 00 00       	mov    $0x0,%esi
   1e58c:	89 c7                	mov    %eax,%edi
   1e58e:	e8 5d 7e ff ff       	callq  163f0 <accept4@plt>
   1e593:	89 45 ec             	mov    %eax,-0x14(%rbp)
				if(s==-1)
   1e596:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   1e59a:	75 46                	jne    1e5e2 <_ZN6xaxaxa7Sockets6Socket6AcceptEi+0x80>
				{
					if(errno==4)goto retry;
   1e59c:	e8 3f 7e ff ff       	callq  163e0 <__errno_location@plt>
   1e5a1:	8b 00                	mov    (%rax),%eax
   1e5a3:	83 f8 04             	cmp    $0x4,%eax
   1e5a6:	74 ce                	je     1e576 <_ZN6xaxaxa7Sockets6Socket6AcceptEi+0x14>
					throw Exception(errno);
   1e5a8:	bf 18 00 00 00       	mov    $0x18,%edi
   1e5ad:	e8 7e 7f ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1e5b2:	48 89 c3             	mov    %rax,%rbx
   1e5b5:	e8 26 7e ff ff       	callq  163e0 <__errno_location@plt>
   1e5ba:	8b 00                	mov    (%rax),%eax
   1e5bc:	89 c6                	mov    %eax,%esi
   1e5be:	48 89 df             	mov    %rbx,%rdi
   1e5c1:	e8 ba 70 ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1e5c6:	48 8b 05 cb ba 20 00 	mov    0x20bacb(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1e5cd:	48 89 c2             	mov    %rax,%rdx
   1e5d0:	48 8b 05 61 bb 20 00 	mov    0x20bb61(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1e5d7:	48 89 c6             	mov    %rax,%rsi
   1e5da:	48 89 df             	mov    %rbx,%rdi
   1e5dd:	e8 2e 81 ff ff       	callq  16710 <__cxa_throw@plt>
				}
				return Socket(s);
   1e5e2:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1e5e5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e5e9:	89 d6                	mov    %edx,%esi
   1e5eb:	48 89 c7             	mov    %rax,%rdi
   1e5ee:	e8 1d 7a ff ff       	callq  16010 <_ZN6xaxaxa7Sockets6SocketC1Ei@plt>
   1e5f3:	8b 45 e0             	mov    -0x20(%rbp),%eax
			}
   1e5f6:	48 83 c4 20          	add    $0x20,%rsp
   1e5fa:	5b                   	pop    %rbx
   1e5fb:	41 5c                	pop    %r12
   1e5fd:	5d                   	pop    %rbp
   1e5fe:	c3                   	retq   
   1e5ff:	49 89 c4             	mov    %rax,%r12
			retry:
				SOCKET s=accept4(_s,NULL,NULL,flags);
				if(s==-1)
				{
					if(errno==4)goto retry;
					throw Exception(errno);
   1e602:	48 89 df             	mov    %rbx,%rdi
   1e605:	e8 a6 7f ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1e60a:	4c 89 e0             	mov    %r12,%rax
   1e60d:	48 89 c7             	mov    %rax,%rdi
   1e610:	e8 9b 84 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1e615:	90                   	nop

000000000001e616 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE>:
				Int size=ep->GetSockAddrSize();
				uint8_t tmp[size];
				ep->GetSockAddr((sockaddr*)tmp);
				if(::bind(_s,(sockaddr*)tmp,size)!=0)throw Exception(errno);
			}
			inline void Connect(EndPoint *ep)
   1e616:	55                   	push   %rbp
   1e617:	48 89 e5             	mov    %rsp,%rbp
   1e61a:	41 55                	push   %r13
   1e61c:	41 54                	push   %r12
   1e61e:	53                   	push   %rbx
   1e61f:	48 83 ec 48          	sub    $0x48,%rsp
   1e623:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1e627:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1e62b:	48 89 e0             	mov    %rsp,%rax
   1e62e:	49 89 c4             	mov    %rax,%r12
			{
				int size=ep->GetSockAddrSize();
   1e631:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1e635:	48 8b 00             	mov    (%rax),%rax
   1e638:	48 83 c0 08          	add    $0x8,%rax
   1e63c:	48 8b 10             	mov    (%rax),%rdx
   1e63f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1e643:	48 89 c7             	mov    %rax,%rdi
   1e646:	ff d2                	callq  *%rdx
   1e648:	89 45 dc             	mov    %eax,-0x24(%rbp)
				uint8_t asdf[size];
   1e64b:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1e64e:	48 98                	cltq   
   1e650:	48 83 e8 01          	sub    $0x1,%rax
   1e654:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1e658:	48 83 c0 01          	add    $0x1,%rax
   1e65c:	48 8d 50 0f          	lea    0xf(%rax),%rdx
   1e660:	b8 10 00 00 00       	mov    $0x10,%eax
   1e665:	48 83 e8 01          	sub    $0x1,%rax
   1e669:	48 01 d0             	add    %rdx,%rax
   1e66c:	48 c7 45 a8 10 00 00 	movq   $0x10,-0x58(%rbp)
   1e673:	00 
   1e674:	ba 00 00 00 00       	mov    $0x0,%edx
   1e679:	48 f7 75 a8          	divq   -0x58(%rbp)
   1e67d:	48 6b c0 10          	imul   $0x10,%rax,%rax
   1e681:	48 29 c4             	sub    %rax,%rsp
   1e684:	48 89 e0             	mov    %rsp,%rax
   1e687:	48 83 c0 0f          	add    $0xf,%rax
   1e68b:	48 c1 e8 04          	shr    $0x4,%rax
   1e68f:	48 c1 e0 04          	shl    $0x4,%rax
   1e693:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
				ep->GetSockAddr((sockaddr*)asdf);
   1e697:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1e69b:	48 8b 00             	mov    (%rax),%rax
   1e69e:	48 8b 08             	mov    (%rax),%rcx
   1e6a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1e6a5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1e6a9:	48 89 d6             	mov    %rdx,%rsi
   1e6ac:	48 89 c7             	mov    %rax,%rdi
   1e6af:	ff d1                	callq  *%rcx
   1e6b1:	eb 01                	jmp    1e6b4 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE+0x9e>
			retry:
				int tmp=connect(_s,(sockaddr*)asdf,size);
				if(tmp!=0 && errno!=115)
				{
					if(errno==4)goto retry;
   1e6b3:	90                   	nop
			{
				int size=ep->GetSockAddrSize();
				uint8_t asdf[size];
				ep->GetSockAddr((sockaddr*)asdf);
			retry:
				int tmp=connect(_s,(sockaddr*)asdf,size);
   1e6b4:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1e6b7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   1e6bb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e6bf:	8b 00                	mov    (%rax),%eax
   1e6c1:	48 89 ce             	mov    %rcx,%rsi
   1e6c4:	89 c7                	mov    %eax,%edi
   1e6c6:	e8 a5 7a ff ff       	callq  16170 <connect@plt>
   1e6cb:	89 45 c4             	mov    %eax,-0x3c(%rbp)
				if(tmp!=0 && errno!=115)
   1e6ce:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
   1e6d2:	74 52                	je     1e726 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE+0x110>
   1e6d4:	e8 07 7d ff ff       	callq  163e0 <__errno_location@plt>
   1e6d9:	8b 00                	mov    (%rax),%eax
   1e6db:	83 f8 73             	cmp    $0x73,%eax
   1e6de:	74 46                	je     1e726 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE+0x110>
				{
					if(errno==4)goto retry;
   1e6e0:	e8 fb 7c ff ff       	callq  163e0 <__errno_location@plt>
   1e6e5:	8b 00                	mov    (%rax),%eax
   1e6e7:	83 f8 04             	cmp    $0x4,%eax
   1e6ea:	74 c7                	je     1e6b3 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE+0x9d>
					throw Exception(errno);
   1e6ec:	bf 18 00 00 00       	mov    $0x18,%edi
   1e6f1:	e8 3a 7e ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1e6f6:	48 89 c3             	mov    %rax,%rbx
   1e6f9:	e8 e2 7c ff ff       	callq  163e0 <__errno_location@plt>
   1e6fe:	8b 00                	mov    (%rax),%eax
   1e700:	89 c6                	mov    %eax,%esi
   1e702:	48 89 df             	mov    %rbx,%rdi
   1e705:	e8 76 6f ff ff       	callq  15680 <_ZN6xaxaxa9ExceptionC1Ei@plt>
   1e70a:	48 8b 05 87 b9 20 00 	mov    0x20b987(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1e711:	48 89 c2             	mov    %rax,%rdx
   1e714:	48 8b 05 1d ba 20 00 	mov    0x20ba1d(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1e71b:	48 89 c6             	mov    %rax,%rsi
   1e71e:	48 89 df             	mov    %rbx,%rdi
   1e721:	e8 ea 7f ff ff       	callq  16710 <__cxa_throw@plt>
   1e726:	4c 89 e4             	mov    %r12,%rsp
				}
			}
   1e729:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
   1e72d:	5b                   	pop    %rbx
   1e72e:	41 5c                	pop    %r12
   1e730:	41 5d                	pop    %r13
   1e732:	5d                   	pop    %rbp
   1e733:	c3                   	retq   
   1e734:	49 89 c5             	mov    %rax,%r13
			retry:
				int tmp=connect(_s,(sockaddr*)asdf,size);
				if(tmp!=0 && errno!=115)
				{
					if(errno==4)goto retry;
					throw Exception(errno);
   1e737:	48 89 df             	mov    %rbx,%rdi
   1e73a:	e8 71 7e ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1e73f:	4c 89 e8             	mov    %r13,%rax
   1e742:	eb 00                	jmp    1e744 <_ZN6xaxaxa7Sockets6Socket7ConnectEPNS0_8EndPointE+0x12e>
   1e744:	4c 89 e4             	mov    %r12,%rsp
   1e747:	48 89 c7             	mov    %rax,%rdi
   1e74a:	e8 61 83 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1e74f:	90                   	nop

000000000001e750 <_ZN6xaxaxa7Sockets6Socket8GetFlagsEv>:
			}
			inline void Listen(int backlog)
			{
				if(listen(_s,backlog)!=0)throw Exception(errno);
			}
			inline int GetFlags()
   1e750:	55                   	push   %rbp
   1e751:	48 89 e5             	mov    %rsp,%rbp
   1e754:	48 83 ec 10          	sub    $0x10,%rsp
   1e758:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
			{
				return fcntl(_s,F_GETFL,0);
   1e75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e760:	8b 00                	mov    (%rax),%eax
   1e762:	ba 00 00 00 00       	mov    $0x0,%edx
   1e767:	be 03 00 00 00       	mov    $0x3,%esi
   1e76c:	89 c7                	mov    %eax,%edi
   1e76e:	b8 00 00 00 00       	mov    $0x0,%eax
   1e773:	e8 98 83 ff ff       	callq  16b10 <fcntl@plt>
			}
   1e778:	c9                   	leaveq 
   1e779:	c3                   	retq   

000000000001e77a <_ZN6xaxaxa7Sockets6Socket8SetFlagsEi>:
			inline void SetFlags(int f)
   1e77a:	55                   	push   %rbp
   1e77b:	48 89 e5             	mov    %rsp,%rbp
   1e77e:	41 54                	push   %r12
   1e780:	53                   	push   %rbx
   1e781:	48 83 ec 20          	sub    $0x20,%rsp
   1e785:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e789:	89 75 d4             	mov    %esi,-0x2c(%rbp)
			{
				if(fcntl(_s,F_SETFL,f)<0)throw Exception(errno,"could not set socket flags");
   1e78c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e790:	8b 00                	mov    (%rax),%eax
   1e792:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   1e795:	be 04 00 00 00       	mov    $0x4,%esi
   1e79a:	89 c7                	mov    %eax,%edi
   1e79c:	b8 00 00 00 00       	mov    $0x0,%eax
   1e7a1:	e8 6a 83 ff ff       	callq  16b10 <fcntl@plt>
   1e7a6:	c1 e8 1f             	shr    $0x1f,%eax
   1e7a9:	84 c0                	test   %al,%al
   1e7ab:	0f 84 ac 00 00 00    	je     1e85d <_ZN6xaxaxa7Sockets6Socket8SetFlagsEi+0xe3>
   1e7b1:	bf 18 00 00 00       	mov    $0x18,%edi
   1e7b6:	e8 75 7d ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   1e7bb:	48 89 c3             	mov    %rax,%rbx
   1e7be:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e7c2:	48 89 c7             	mov    %rax,%rdi
   1e7c5:	e8 26 82 ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   1e7ca:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1e7ce:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e7d2:	48 8d 35 1f 5a 00 00 	lea    0x5a1f(%rip),%rsi        # 241f8 <_ZStL6ignore+0x2e>
   1e7d9:	48 89 c7             	mov    %rax,%rdi
   1e7dc:	e8 ff 77 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   1e7e1:	e8 fa 7b ff ff       	callq  163e0 <__errno_location@plt>
   1e7e6:	8b 00                	mov    (%rax),%eax
   1e7e8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1e7ec:	89 c6                	mov    %eax,%esi
   1e7ee:	48 89 df             	mov    %rbx,%rdi
   1e7f1:	e8 ba 7b ff ff       	callq  163b0 <_ZN6xaxaxa9ExceptionC1EiSs@plt>
   1e7f6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e7fa:	48 89 c7             	mov    %rax,%rdi
   1e7fd:	e8 3e 73 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1e802:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e806:	48 89 c7             	mov    %rax,%rdi
   1e809:	e8 32 7d ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1e80e:	48 8b 05 83 b8 20 00 	mov    0x20b883(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   1e815:	48 89 c2             	mov    %rax,%rdx
   1e818:	48 8b 05 19 b9 20 00 	mov    0x20b919(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   1e81f:	48 89 c6             	mov    %rax,%rsi
   1e822:	48 89 df             	mov    %rbx,%rdi
   1e825:	e8 e6 7e ff ff       	callq  16710 <__cxa_throw@plt>
   1e82a:	49 89 c4             	mov    %rax,%r12
   1e82d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e831:	48 89 c7             	mov    %rax,%rdi
   1e834:	e8 07 73 ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   1e839:	eb 03                	jmp    1e83e <_ZN6xaxaxa7Sockets6Socket8SetFlagsEi+0xc4>
   1e83b:	49 89 c4             	mov    %rax,%r12
   1e83e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e842:	48 89 c7             	mov    %rax,%rdi
   1e845:	e8 f6 7c ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   1e84a:	48 89 df             	mov    %rbx,%rdi
   1e84d:	e8 5e 7d ff ff       	callq  165b0 <__cxa_free_exception@plt>
   1e852:	4c 89 e0             	mov    %r12,%rax
   1e855:	48 89 c7             	mov    %rax,%rdi
   1e858:	e8 53 82 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
			}
   1e85d:	90                   	nop
   1e85e:	48 83 c4 20          	add    $0x20,%rsp
   1e862:	5b                   	pop    %rbx
   1e863:	41 5c                	pop    %r12
   1e865:	5d                   	pop    %rbp
   1e866:	c3                   	retq   
   1e867:	90                   	nop

000000000001e868 <_ZN6xaxaxa7Sockets13SocketManager8CallbackC1Ev>:
				if(__def_sockmanager==NULL)
					__def_sockmanager=new SocketManager();
				return __def_sockmanager;
			}
			//typedef boost::function<void (SocketManager*, Socket)> Callback;
			FUNCTION_DECLARE(Callback,void,SocketManager*,Socket);
   1e868:	55                   	push   %rbp
   1e869:	48 89 e5             	mov    %rsp,%rbp
   1e86c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e874:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1e87b:	5d                   	pop    %rbp
   1e87c:	c3                   	retq   
   1e87d:	90                   	nop

000000000001e87e <_ZN6xaxaxa7Sockets13SocketManager8taskInfoC1Ev>:
				__uint32_t events;
				__uint32_t new_events;
				Buffer r_buf,w_buf;
				int r_length,w_length;
				int r_errno,w_errno;
				inline taskInfo()
   1e87e:	55                   	push   %rbp
   1e87f:	48 89 e5             	mov    %rsp,%rbp
   1e882:	53                   	push   %rbx
   1e883:	48 83 ec 18          	sub    $0x18,%rsp
   1e887:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
				{
   1e88b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e88f:	48 83 c0 08          	add    $0x8,%rax
   1e893:	48 89 c7             	mov    %rax,%rdi
   1e896:	e8 25 74 ff ff       	callq  15cc0 <_ZN6xaxaxa7Sockets13SocketManager8CallbackC1Ev@plt>
   1e89b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e89f:	48 83 c0 18          	add    $0x18,%rax
   1e8a3:	48 89 c7             	mov    %rax,%rdi
   1e8a6:	e8 15 74 ff ff       	callq  15cc0 <_ZN6xaxaxa7Sockets13SocketManager8CallbackC1Ev@plt>
   1e8ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e8af:	48 83 c0 30          	add    $0x30,%rax
   1e8b3:	48 89 c7             	mov    %rax,%rdi
   1e8b6:	e8 65 78 ff ff       	callq  16120 <_ZN6xaxaxa6BufferC1Ev@plt>
   1e8bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e8bf:	48 83 c0 50          	add    $0x50,%rax
   1e8c3:	48 89 c7             	mov    %rax,%rdi
   1e8c6:	e8 55 78 ff ff       	callq  16120 <_ZN6xaxaxa6BufferC1Ev@plt>
					bits=0;
   1e8cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e8cf:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
				}
   1e8d5:	48 83 c4 18          	add    $0x18,%rsp
   1e8d9:	5b                   	pop    %rbx
   1e8da:	5d                   	pop    %rbp
   1e8db:	c3                   	retq   
   1e8dc:	48 89 c3             	mov    %rax,%rbx
				__uint32_t new_events;
				Buffer r_buf,w_buf;
				int r_length,w_length;
				int r_errno,w_errno;
				inline taskInfo()
				{
   1e8df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e8e3:	48 83 c0 30          	add    $0x30,%rax
   1e8e7:	48 89 c7             	mov    %rax,%rdi
   1e8ea:	e8 41 6c ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1e8ef:	48 89 d8             	mov    %rbx,%rax
   1e8f2:	48 89 c7             	mov    %rax,%rdi
   1e8f5:	e8 b6 81 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001e8fa <_ZN6xaxaxa7Sockets6SOCKS58CallbackC1Ev>:
		};
		class SOCKS5
		{
		public:
			//typedef boost::function<void (Stream*, void*)> Callback;
			FUNCTION_DECLARE(Callback,void,Stream*,void*);
   1e8fa:	55                   	push   %rbp
   1e8fb:	48 89 e5             	mov    %rsp,%rbp
   1e8fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e906:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1e90d:	5d                   	pop    %rbp
   1e90e:	c3                   	retq   
   1e90f:	90                   	nop

000000000001e910 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEED1Ev>:
   *  multimap; the distinction is made entirely in how the tree functions are
   *  called (*_unique versus *_equal, same as the standard).
  */
  template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
            typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
    class map
   1e910:	55                   	push   %rbp
   1e911:	48 89 e5             	mov    %rsp,%rbp
   1e914:	48 83 ec 10          	sub    $0x10,%rsp
   1e918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e91c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e920:	48 89 c7             	mov    %rax,%rdi
   1e923:	e8 a8 7b ff ff       	callq  164d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EED1Ev@plt>
   1e928:	c9                   	leaveq 
   1e929:	c3                   	retq   

000000000001e92a <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEED1Ev>:
   1e92a:	55                   	push   %rbp
   1e92b:	48 89 e5             	mov    %rsp,%rbp
   1e92e:	48 83 ec 10          	sub    $0x10,%rsp
   1e932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e93a:	48 89 c7             	mov    %rax,%rdi
   1e93d:	e8 4e 72 ff ff       	callq  15b90 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EED1Ev@plt>
   1e942:	c9                   	leaveq 
   1e943:	c3                   	retq   

000000000001e944 <_ZN6xaxaxa7Sockets6SOCKS53tmpC1Ev>:
			struct tmp
   1e944:	55                   	push   %rbp
   1e945:	48 89 e5             	mov    %rsp,%rbp
   1e948:	53                   	push   %rbx
   1e949:	48 83 ec 18          	sub    $0x18,%rsp
   1e94d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e955:	48 89 c7             	mov    %rax,%rdi
   1e958:	e8 c3 77 ff ff       	callq  16120 <_ZN6xaxaxa6BufferC1Ev@plt>
   1e95d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e961:	48 83 c0 30          	add    $0x30,%rax
   1e965:	48 89 c7             	mov    %rax,%rdi
   1e968:	e8 d3 68 ff ff       	callq  15240 <_ZN6xaxaxa7Sockets6SOCKS58CallbackC1Ev@plt>
   1e96d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e971:	48 83 c0 40          	add    $0x40,%rax
   1e975:	48 89 c7             	mov    %rax,%rdi
   1e978:	e8 c3 68 ff ff       	callq  15240 <_ZN6xaxaxa7Sockets6SOCKS58CallbackC1Ev@plt>
   1e97d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e981:	48 83 c0 58          	add    $0x58,%rax
   1e985:	48 89 c7             	mov    %rax,%rdi
   1e988:	e8 63 68 ff ff       	callq  151f0 <_ZN6xaxaxa9ExceptionC1Ev@plt>
   1e98d:	eb 1a                	jmp    1e9a9 <_ZN6xaxaxa7Sockets6SOCKS53tmpC1Ev+0x65>
   1e98f:	48 89 c3             	mov    %rax,%rbx
   1e992:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e996:	48 89 c7             	mov    %rax,%rdi
   1e999:	e8 92 6b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1e99e:	48 89 d8             	mov    %rbx,%rax
   1e9a1:	48 89 c7             	mov    %rax,%rdi
   1e9a4:	e8 07 81 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1e9a9:	48 83 c4 18          	add    $0x18,%rsp
   1e9ad:	5b                   	pop    %rbx
   1e9ae:	5d                   	pop    %rbp
   1e9af:	c3                   	retq   

000000000001e9b0 <_ZN6xaxaxa6ObjectaSERKS0_>:
//typedef void* Function;

	void __objs_inc();
	void __objs_dec();
	int __objs_get();
	class Object
   1e9b0:	55                   	push   %rbp
   1e9b1:	48 89 e5             	mov    %rsp,%rbp
   1e9b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e9b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e9bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e9c0:	8b 50 08             	mov    0x8(%rax),%edx
   1e9c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e9c7:	89 50 08             	mov    %edx,0x8(%rax)
   1e9ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e9ce:	5d                   	pop    %rbp
   1e9cf:	c3                   	retq   

000000000001e9d0 <_ZN6xaxaxa9ExceptionaSERKS0_>:
				delete this;
				//cout << o;
			}
		}
	};
	class Exception: public Object
   1e9d0:	55                   	push   %rbp
   1e9d1:	48 89 e5             	mov    %rsp,%rbp
   1e9d4:	48 83 ec 10          	sub    $0x10,%rsp
   1e9d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e9dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e9e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e9e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e9e8:	48 89 d6             	mov    %rdx,%rsi
   1e9eb:	48 89 c7             	mov    %rax,%rdi
   1e9ee:	e8 cd 7d ff ff       	callq  167c0 <_ZN6xaxaxa6ObjectaSERKS0_@plt>
   1e9f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e9f7:	8b 50 0c             	mov    0xc(%rax),%edx
   1e9fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e9fe:	89 50 0c             	mov    %edx,0xc(%rax)
   1ea01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ea05:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1ea09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea0d:	48 83 c0 10          	add    $0x10,%rax
   1ea11:	48 89 d6             	mov    %rdx,%rsi
   1ea14:	48 89 c7             	mov    %rax,%rdi
   1ea17:	e8 d4 80 ff ff       	callq  16af0 <_ZNSsaSERKSs@plt>
   1ea1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea20:	c9                   	leaveq 
   1ea21:	c3                   	retq   

000000000001ea22 <_ZN6xaxaxa7Sockets6SOCKS53tmpD1Ev>:
   1ea22:	55                   	push   %rbp
   1ea23:	48 89 e5             	mov    %rsp,%rbp
   1ea26:	53                   	push   %rbx
   1ea27:	48 83 ec 18          	sub    $0x18,%rsp
   1ea2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ea2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ea33:	48 83 c0 58          	add    $0x58,%rax
   1ea37:	48 89 c7             	mov    %rax,%rdi
   1ea3a:	e8 d1 69 ff ff       	callq  15410 <_ZN6xaxaxa9ExceptionD1Ev@plt>
   1ea3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ea43:	48 89 c7             	mov    %rax,%rdi
   1ea46:	e8 e5 6a ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1ea4b:	48 83 c4 18          	add    $0x18,%rsp
   1ea4f:	5b                   	pop    %rbx
   1ea50:	5d                   	pop    %rbp
   1ea51:	c3                   	retq   
   1ea52:	48 89 c3             	mov    %rax,%rbx
   1ea55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ea59:	48 89 c7             	mov    %rax,%rdi
   1ea5c:	e8 cf 6a ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1ea61:	48 89 d8             	mov    %rbx,%rax
   1ea64:	48 89 c7             	mov    %rax,%rdi
   1ea67:	e8 44 80 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001ea6c <_ZN6xaxaxa6ObjectC1ERKS0_>:
//typedef void* Function;

	void __objs_inc();
	void __objs_dec();
	int __objs_get();
	class Object
   1ea6c:	55                   	push   %rbp
   1ea6d:	48 89 e5             	mov    %rsp,%rbp
   1ea70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ea74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ea78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea7c:	48 8b 15 ed b6 20 00 	mov    0x20b6ed(%rip),%rdx        # 22a170 <_DYNAMIC+0x2d8>
   1ea83:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1ea87:	48 89 10             	mov    %rdx,(%rax)
   1ea8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ea8e:	8b 50 08             	mov    0x8(%rax),%edx
   1ea91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea95:	89 50 08             	mov    %edx,0x8(%rax)
   1ea98:	5d                   	pop    %rbp
   1ea99:	c3                   	retq   

000000000001ea9a <_ZN6xaxaxa9ExceptionC1ERKS0_>:
				delete this;
				//cout << o;
			}
		}
	};
	class Exception: public Object
   1ea9a:	55                   	push   %rbp
   1ea9b:	48 89 e5             	mov    %rsp,%rbp
   1ea9e:	53                   	push   %rbx
   1ea9f:	48 83 ec 18          	sub    $0x18,%rsp
   1eaa3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1eaa7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1eaab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1eaaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eab3:	48 89 d6             	mov    %rdx,%rsi
   1eab6:	48 89 c7             	mov    %rax,%rdi
   1eab9:	e8 d2 6b ff ff       	callq  15690 <_ZN6xaxaxa6ObjectC2ERKS0_@plt>
   1eabe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eac2:	48 8b 15 17 b6 20 00 	mov    0x20b617(%rip),%rdx        # 22a0e0 <_DYNAMIC+0x248>
   1eac9:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   1eacd:	48 89 10             	mov    %rdx,(%rax)
   1ead0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ead4:	8b 50 0c             	mov    0xc(%rax),%edx
   1ead7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eadb:	89 50 0c             	mov    %edx,0xc(%rax)
   1eade:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1eae2:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1eae6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eaea:	48 83 c0 10          	add    $0x10,%rax
   1eaee:	48 89 d6             	mov    %rdx,%rsi
   1eaf1:	48 89 c7             	mov    %rax,%rdi
   1eaf4:	e8 47 6e ff ff       	callq  15940 <_ZNSsC1ERKSs@plt>
   1eaf9:	eb 1a                	jmp    1eb15 <_ZN6xaxaxa9ExceptionC1ERKS0_+0x7b>
   1eafb:	48 89 c3             	mov    %rax,%rbx
   1eafe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eb02:	48 89 c7             	mov    %rax,%rdi
   1eb05:	e8 d6 76 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   1eb0a:	48 89 d8             	mov    %rbx,%rax
   1eb0d:	48 89 c7             	mov    %rax,%rdi
   1eb10:	e8 9b 7f ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1eb15:	48 83 c4 18          	add    $0x18,%rsp
   1eb19:	5b                   	pop    %rbx
   1eb1a:	5d                   	pop    %rbp
   1eb1b:	c3                   	retq   

000000000001eb1c <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEC1Ev>:
      // (get_allocator() is normally listed in this section, but seems to have
      // been accidentally omitted in the printed standard)
      /**
       *  @brief  Default constructor creates no elements.
       */
      map()
   1eb1c:	55                   	push   %rbp
   1eb1d:	48 89 e5             	mov    %rsp,%rbp
   1eb20:	48 83 ec 10          	sub    $0x10,%rsp
   1eb24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_t() { }
   1eb28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eb2c:	48 89 c7             	mov    %rax,%rdi
   1eb2f:	e8 cc 77 ff ff       	callq  16300 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EEC1Ev@plt>
   1eb34:	c9                   	leaveq 
   1eb35:	c3                   	retq   

000000000001eb36 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev>:
      }

    protected:
      template<typename _Key_compare, 
	       bool _Is_pod_comparator = __is_pod(_Key_compare)>
        struct _Rb_tree_impl : public _Node_allocator
   1eb36:	55                   	push   %rbp
   1eb37:	48 89 e5             	mov    %rsp,%rbp
   1eb3a:	48 83 ec 10          	sub    $0x10,%rsp
   1eb3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1eb42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eb46:	48 89 c7             	mov    %rax,%rdi
   1eb49:	e8 32 78 ff ff       	callq  16380 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEED2Ev@plt>
   1eb4e:	c9                   	leaveq 
   1eb4f:	c3                   	retq   

000000000001eb50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EED1Ev>:

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      _Rb_tree(_Rb_tree&& __x);
#endif

      ~_Rb_tree()
   1eb50:	55                   	push   %rbp
   1eb51:	48 89 e5             	mov    %rsp,%rbp
   1eb54:	53                   	push   %rbx
   1eb55:	48 83 ec 18          	sub    $0x18,%rsp
   1eb59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { _M_erase(_M_begin()); }
   1eb5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eb61:	48 89 c7             	mov    %rax,%rdi
   1eb64:	e8 97 80 ff ff       	callq  16c00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   1eb69:	48 89 c2             	mov    %rax,%rdx
   1eb6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eb70:	48 89 d6             	mov    %rdx,%rsi
   1eb73:	48 89 c7             	mov    %rax,%rdi
   1eb76:	e8 25 6a ff ff       	callq  155a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>
   1eb7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eb7f:	48 89 c7             	mov    %rax,%rdi
   1eb82:	e8 d9 6a ff ff       	callq  15660 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev@plt>
   1eb87:	48 83 c4 18          	add    $0x18,%rsp
   1eb8b:	5b                   	pop    %rbx
   1eb8c:	5d                   	pop    %rbp
   1eb8d:	c3                   	retq   
   1eb8e:	48 89 c3             	mov    %rax,%rbx
   1eb91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eb95:	48 89 c7             	mov    %rax,%rdi
   1eb98:	e8 c3 6a ff ff       	callq  15660 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev@plt>
   1eb9d:	48 89 d8             	mov    %rbx,%rax
   1eba0:	48 89 c7             	mov    %rax,%rdi
   1eba3:	e8 08 7f ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001eba8 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEC1Ev>:
      // (get_allocator() is normally listed in this section, but seems to have
      // been accidentally omitted in the printed standard)
      /**
       *  @brief  Default constructor creates no elements.
       */
      map()
   1eba8:	55                   	push   %rbp
   1eba9:	48 89 e5             	mov    %rsp,%rbp
   1ebac:	48 83 ec 10          	sub    $0x10,%rsp
   1ebb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_t() { }
   1ebb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ebb8:	48 89 c7             	mov    %rax,%rdi
   1ebbb:	e8 f0 7f ff ff       	callq  16bb0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EEC1Ev@plt>
   1ebc0:	c9                   	leaveq 
   1ebc1:	c3                   	retq   

000000000001ebc2 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EED1Ev>:
      }

    protected:
      template<typename _Key_compare, 
	       bool _Is_pod_comparator = __is_pod(_Key_compare)>
        struct _Rb_tree_impl : public _Node_allocator
   1ebc2:	55                   	push   %rbp
   1ebc3:	48 89 e5             	mov    %rsp,%rbp
   1ebc6:	48 83 ec 10          	sub    $0x10,%rsp
   1ebca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ebce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ebd2:	48 89 c7             	mov    %rax,%rdi
   1ebd5:	e8 26 6c ff ff       	callq  15800 <_ZNSaISt13_Rb_tree_nodeISt4pairIKibEEED2Ev@plt>
   1ebda:	c9                   	leaveq 
   1ebdb:	c3                   	retq   

000000000001ebdc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EED1Ev>:

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      _Rb_tree(_Rb_tree&& __x);
#endif

      ~_Rb_tree()
   1ebdc:	55                   	push   %rbp
   1ebdd:	48 89 e5             	mov    %rsp,%rbp
   1ebe0:	53                   	push   %rbx
   1ebe1:	48 83 ec 18          	sub    $0x18,%rsp
   1ebe5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { _M_erase(_M_begin()); }
   1ebe9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ebed:	48 89 c7             	mov    %rax,%rdi
   1ebf0:	e8 db 6c ff ff       	callq  158d0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv@plt>
   1ebf5:	48 89 c2             	mov    %rax,%rdx
   1ebf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ebfc:	48 89 d6             	mov    %rdx,%rsi
   1ebff:	48 89 c7             	mov    %rax,%rdi
   1ec02:	e8 29 70 ff ff       	callq  15c30 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E@plt>
   1ec07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ec0b:	48 89 c7             	mov    %rax,%rdi
   1ec0e:	e8 4d 70 ff ff       	callq  15c60 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EED1Ev@plt>
   1ec13:	48 83 c4 18          	add    $0x18,%rsp
   1ec17:	5b                   	pop    %rbx
   1ec18:	5d                   	pop    %rbp
   1ec19:	c3                   	retq   
   1ec1a:	48 89 c3             	mov    %rax,%rbx
   1ec1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ec21:	48 89 c7             	mov    %rax,%rdi
   1ec24:	e8 37 70 ff ff       	callq  15c60 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EED1Ev@plt>
   1ec29:	48 89 d8             	mov    %rbx,%rax
   1ec2c:	48 89 c7             	mov    %rax,%rdi
   1ec2f:	e8 7c 7e ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001ec34 <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE5countERS3_>:
       *
       *  This function only makes sense for multimaps; for map the result will
       *  either be 0 (not present) or 1 (present).
       */
      size_type
      count(const key_type& __x) const
   1ec34:	55                   	push   %rbp
   1ec35:	48 89 e5             	mov    %rsp,%rbp
   1ec38:	48 83 ec 30          	sub    $0x30,%rsp
   1ec3c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ec40:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      { return _M_t.find(__x) == _M_t.end() ? 0 : 1; }
   1ec44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ec48:	48 89 c7             	mov    %rax,%rdi
   1ec4b:	e8 60 71 ff ff       	callq  15db0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv@plt>
   1ec50:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ec54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ec58:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1ec5c:	48 89 d6             	mov    %rdx,%rsi
   1ec5f:	48 89 c7             	mov    %rax,%rdi
   1ec62:	e8 99 65 ff ff       	callq  15200 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4findERS1_@plt>
   1ec67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1ec6b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1ec6f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1ec73:	48 89 d6             	mov    %rdx,%rsi
   1ec76:	48 89 c7             	mov    %rax,%rdi
   1ec79:	e8 a2 6a ff ff       	callq  15720 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKibEEeqERKS3_@plt>
   1ec7e:	84 c0                	test   %al,%al
   1ec80:	74 07                	je     1ec89 <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE5countERS3_+0x55>
   1ec82:	b8 00 00 00 00       	mov    $0x0,%eax
   1ec87:	eb 05                	jmp    1ec8e <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE5countERS3_+0x5a>
   1ec89:	b8 01 00 00 00       	mov    $0x1,%eax
   1ec8e:	c9                   	leaveq 
   1ec8f:	c3                   	retq   

000000000001ec90 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoD1Ev>:
			/*enum taskType
			{
				read,write,accept
			};*/

			struct taskInfo
   1ec90:	55                   	push   %rbp
   1ec91:	48 89 e5             	mov    %rsp,%rbp
   1ec94:	53                   	push   %rbx
   1ec95:	48 83 ec 18          	sub    $0x18,%rsp
   1ec99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ec9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eca1:	48 83 c0 50          	add    $0x50,%rax
   1eca5:	48 89 c7             	mov    %rax,%rdi
   1eca8:	e8 83 68 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1ecad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ecb1:	48 83 c0 30          	add    $0x30,%rax
   1ecb5:	48 89 c7             	mov    %rax,%rdi
   1ecb8:	e8 73 68 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1ecbd:	48 83 c4 18          	add    $0x18,%rsp
   1ecc1:	5b                   	pop    %rbx
   1ecc2:	5d                   	pop    %rbp
   1ecc3:	c3                   	retq   
   1ecc4:	48 89 c3             	mov    %rax,%rbx
   1ecc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eccb:	48 83 c0 30          	add    $0x30,%rax
   1eccf:	48 89 c7             	mov    %rax,%rdi
   1ecd2:	e8 59 68 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1ecd7:	48 89 d8             	mov    %rbx,%rax
   1ecda:	48 89 c7             	mov    %rax,%rdi
   1ecdd:	e8 ce 7d ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001ece2 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEED1Ev>:
    struct _Index_tuple;
#endif

  /// Struct holding two objects of arbitrary type.
  template<class _T1, class _T2>
    struct pair
   1ece2:	55                   	push   %rbp
   1ece3:	48 89 e5             	mov    %rsp,%rbp
   1ece6:	48 83 ec 10          	sub    $0x10,%rsp
   1ecea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ecee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ecf2:	48 83 c0 08          	add    $0x8,%rax
   1ecf6:	48 89 c7             	mov    %rax,%rdi
   1ecf9:	e8 f2 79 ff ff       	callq  166f0 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoD1Ev@plt>
   1ecfe:	c9                   	leaveq 
   1ecff:	c3                   	retq   

000000000001ed00 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_>:
       *  is created using default values, which is then returned.
       *
       *  Lookup requires logarithmic time.
       */
      mapped_type&
      operator[](const key_type& __k)
   1ed00:	55                   	push   %rbp
   1ed01:	48 89 e5             	mov    %rsp,%rbp
   1ed04:	53                   	push   %rbx
   1ed05:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   1ed0c:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   1ed13:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   1ed1a:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
   1ed21:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1ed28:	48 89 d6             	mov    %rdx,%rsi
   1ed2b:	48 89 c7             	mov    %rax,%rdi
   1ed2e:	e8 dd 6f ff ff       	callq  15d10 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE11lower_boundERS7_@plt>
   1ed33:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   1ed3a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1ed41:	48 89 c7             	mov    %rax,%rdi
   1ed44:	e8 97 7c ff ff       	callq  169e0 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE3endEv@plt>
   1ed49:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
   1ed50:	48 8d 95 c0 fe ff ff 	lea    -0x140(%rbp),%rdx
   1ed57:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   1ed5e:	48 89 d6             	mov    %rdx,%rsi
   1ed61:	48 89 c7             	mov    %rax,%rdi
   1ed64:	e8 f7 7a ff ff       	callq  16860 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_@plt>
   1ed69:	84 c0                	test   %al,%al
   1ed6b:	75 41                	jne    1edae <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0xae>
   1ed6d:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   1ed74:	48 89 c7             	mov    %rax,%rdi
   1ed77:	e8 94 6d ff ff       	callq  15b10 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEdeEv@plt>
   1ed7c:	48 89 c3             	mov    %rax,%rbx
   1ed7f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1ed86:	48 89 c7             	mov    %rax,%rdi
   1ed89:	e8 c2 66 ff ff       	callq  15450 <_ZNKSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE8key_compEv@plt>
   1ed8e:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
   1ed95:	48 8d 85 cf fe ff ff 	lea    -0x131(%rbp),%rax
   1ed9c:	48 89 da             	mov    %rbx,%rdx
   1ed9f:	48 89 ce             	mov    %rcx,%rsi
   1eda2:	48 89 c7             	mov    %rax,%rdi
   1eda5:	e8 d6 6f ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1edaa:	84 c0                	test   %al,%al
   1edac:	74 07                	je     1edb5 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0xb5>
   1edae:	b8 01 00 00 00       	mov    $0x1,%eax
   1edb3:	eb 05                	jmp    1edba <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0xba>
   1edb5:	b8 00 00 00 00       	mov    $0x0,%eax
   1edba:	84 c0                	test   %al,%al
   1edbc:	0f 84 87 00 00 00    	je     1ee49 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0x149>
          __i = insert(__i, value_type(__k, mapped_type()));
   1edc2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1edc9:	48 89 c7             	mov    %rax,%rdi
   1edcc:	e8 8f 6a ff ff       	callq  15860 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoC1Ev@plt>
   1edd1:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
   1edd8:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
   1eddf:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   1ede6:	48 89 ce             	mov    %rcx,%rsi
   1ede9:	48 89 c7             	mov    %rax,%rdi
   1edec:	e8 af 65 ff ff       	callq  153a0 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEC1IS4_vEERS0_OT_@plt>
   1edf1:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   1edf8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1edfc:	48 89 d6             	mov    %rdx,%rsi
   1edff:	48 89 c7             	mov    %rax,%rdi
   1ee02:	e8 49 7b ff ff       	callq  16950 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   1ee07:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
   1ee0e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1ee12:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1ee19:	48 89 ce             	mov    %rcx,%rsi
   1ee1c:	48 89 c7             	mov    %rax,%rdi
   1ee1f:	e8 2c 74 ff ff       	callq  16250 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE6insertIS8_vEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EOT_@plt>
   1ee24:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   1ee2b:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   1ee32:	48 89 c7             	mov    %rax,%rdi
   1ee35:	e8 06 71 ff ff       	callq  15f40 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEED1Ev@plt>
   1ee3a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1ee41:	48 89 c7             	mov    %rax,%rdi
   1ee44:	e8 a7 78 ff ff       	callq  166f0 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoD1Ev@plt>
	return (*__i).second;
   1ee49:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   1ee50:	48 89 c7             	mov    %rax,%rdi
   1ee53:	e8 b8 6c ff ff       	callq  15b10 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEdeEv@plt>
   1ee58:	48 83 c0 08          	add    $0x8,%rax
      }
   1ee5c:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   1ee63:	5b                   	pop    %rbx
   1ee64:	5d                   	pop    %rbp
   1ee65:	c3                   	retq   
   1ee66:	48 89 c3             	mov    %rax,%rbx
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
          __i = insert(__i, value_type(__k, mapped_type()));
   1ee69:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   1ee70:	48 89 c7             	mov    %rax,%rdi
   1ee73:	e8 c8 70 ff ff       	callq  15f40 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEED1Ev@plt>
   1ee78:	eb 03                	jmp    1ee7d <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEEixERS7_+0x17d>
   1ee7a:	48 89 c3             	mov    %rax,%rbx
   1ee7d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1ee84:	48 89 c7             	mov    %rax,%rdi
   1ee87:	e8 64 78 ff ff       	callq  166f0 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoD1Ev@plt>
   1ee8c:	48 89 d8             	mov    %rbx,%rax
   1ee8f:	48 89 c7             	mov    %rax,%rdi
   1ee92:	e8 19 7c ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   1ee97:	90                   	nop

000000000001ee98 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE5eraseERS7_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
   1ee98:	55                   	push   %rbp
   1ee99:	48 89 e5             	mov    %rsp,%rbp
   1ee9c:	48 83 ec 10          	sub    $0x10,%rsp
   1eea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1eea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.erase(__x); }
   1eea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eeac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1eeb0:	48 89 d6             	mov    %rdx,%rsi
   1eeb3:	48 89 c7             	mov    %rax,%rdi
   1eeb6:	e8 f5 64 ff ff       	callq  153b0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseERS1_@plt>
   1eebb:	c9                   	leaveq 
   1eebc:	c3                   	retq   
   1eebd:	90                   	nop

000000000001eebe <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE5clearEv>:
       *  erases the elements, and that if the elements themselves are
       *  pointers, the pointed-to memory is not touched in any way.
       *  Managing the pointer is the user's responsibility.
       */
      void
      clear()
   1eebe:	55                   	push   %rbp
   1eebf:	48 89 e5             	mov    %rsp,%rbp
   1eec2:	48 83 ec 10          	sub    $0x10,%rsp
   1eec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_t.clear(); }
   1eeca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eece:	48 89 c7             	mov    %rax,%rdi
   1eed1:	e8 da 6f ff ff       	callq  15eb0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE5clearEv@plt>
   1eed6:	c9                   	leaveq 
   1eed7:	c3                   	retq   

000000000001eed8 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_>:
       *  is created using default values, which is then returned.
       *
       *  Lookup requires logarithmic time.
       */
      mapped_type&
      operator[](const key_type& __k)
   1eed8:	55                   	push   %rbp
   1eed9:	48 89 e5             	mov    %rsp,%rbp
   1eedc:	53                   	push   %rbx
   1eedd:	48 83 ec 58          	sub    $0x58,%rsp
   1eee1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1eee5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   1eee9:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1eeed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1eef1:	48 89 d6             	mov    %rdx,%rsi
   1eef4:	48 89 c7             	mov    %rax,%rdi
   1eef7:	e8 d4 74 ff ff       	callq  163d0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE11lower_boundERS3_@plt>
   1eefc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   1ef00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ef04:	48 89 c7             	mov    %rax,%rdi
   1ef07:	e8 d4 65 ff ff       	callq  154e0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE3endEv@plt>
   1ef0c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1ef10:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1ef14:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1ef18:	48 89 d6             	mov    %rdx,%rsi
   1ef1b:	48 89 c7             	mov    %rax,%rdi
   1ef1e:	e8 2d 64 ff ff       	callq  15350 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEeqERKS3_@plt>
   1ef23:	84 c0                	test   %al,%al
   1ef25:	75 35                	jne    1ef5c <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_+0x84>
   1ef27:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1ef2b:	48 89 c7             	mov    %rax,%rdi
   1ef2e:	e8 fd 78 ff ff       	callq  16830 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEdeEv@plt>
   1ef33:	48 89 c3             	mov    %rax,%rbx
   1ef36:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ef3a:	48 89 c7             	mov    %rax,%rdi
   1ef3d:	e8 ae 6f ff ff       	callq  15ef0 <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE8key_compEv@plt>
   1ef42:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1ef46:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1ef4a:	48 89 da             	mov    %rbx,%rdx
   1ef4d:	48 89 ce             	mov    %rcx,%rsi
   1ef50:	48 89 c7             	mov    %rax,%rdi
   1ef53:	e8 28 6e ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1ef58:	84 c0                	test   %al,%al
   1ef5a:	74 07                	je     1ef63 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_+0x8b>
   1ef5c:	b8 01 00 00 00       	mov    $0x1,%eax
   1ef61:	eb 05                	jmp    1ef68 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_+0x90>
   1ef63:	b8 00 00 00 00       	mov    $0x0,%eax
   1ef68:	84 c0                	test   %al,%al
   1ef6a:	74 49                	je     1efb5 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEEixERS3_+0xdd>
          __i = insert(__i, value_type(__k, mapped_type()));
   1ef6c:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
   1ef70:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   1ef74:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1ef78:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ef7c:	48 89 ce             	mov    %rcx,%rsi
   1ef7f:	48 89 c7             	mov    %rax,%rdi
   1ef82:	e8 e9 6b ff ff       	callq  15b70 <_ZNSt4pairIKibEC1IbvEERS0_OT_@plt>
   1ef87:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   1ef8b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1ef8f:	48 89 d6             	mov    %rdx,%rsi
   1ef92:	48 89 c7             	mov    %rax,%rdi
   1ef95:	e8 c6 6b ff ff       	callq  15b60 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEC1ERKSt17_Rb_tree_iteratorIS2_E@plt>
   1ef9a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1ef9e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1efa2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1efa6:	48 89 ce             	mov    %rcx,%rsi
   1efa9:	48 89 c7             	mov    %rax,%rdi
   1efac:	e8 9f 6d ff ff       	callq  15d50 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE6insertIS4_vEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EOT_@plt>
   1efb1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	return (*__i).second;
   1efb5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1efb9:	48 89 c7             	mov    %rax,%rdi
   1efbc:	e8 6f 78 ff ff       	callq  16830 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEdeEv@plt>
   1efc1:	48 83 c0 04          	add    $0x4,%rax
      }
   1efc5:	48 83 c4 58          	add    $0x58,%rsp
   1efc9:	5b                   	pop    %rbx
   1efca:	5d                   	pop    %rbp
   1efcb:	c3                   	retq   

000000000001efcc <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EEC1Ev>:
      _M_upper_bound(_Const_Link_type __x, _Const_Link_type __y,
		     const _Key& __k) const;

    public:
      // allocation/deallocation
      _Rb_tree() { }
   1efcc:	55                   	push   %rbp
   1efcd:	48 89 e5             	mov    %rsp,%rbp
   1efd0:	48 83 ec 10          	sub    $0x10,%rsp
   1efd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1efd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1efdc:	48 89 c7             	mov    %rax,%rdi
   1efdf:	e8 6c 6e ff ff       	callq  15e50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev@plt>
   1efe4:	c9                   	leaveq 
   1efe5:	c3                   	retq   

000000000001efe6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEED1Ev>:
      : __glibcxx_base_allocator<_Tp>(__a) { }

      template<typename _Tp1>
        allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
   1efe6:	55                   	push   %rbp
   1efe7:	48 89 e5             	mov    %rsp,%rbp
   1efea:	48 83 ec 10          	sub    $0x10,%rsp
   1efee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1eff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eff6:	48 89 c7             	mov    %rax,%rdi
   1eff9:	e8 f2 70 ff ff       	callq  160f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEED2Ev@plt>
   1effe:	c9                   	leaveq 
   1efff:	c3                   	retq   

000000000001f000 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1f000:	55                   	push   %rbp
   1f001:	48 89 e5             	mov    %rsp,%rbp
   1f004:	48 83 ec 20          	sub    $0x20,%rsp
   1f008:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f00c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1f010:	eb 49                	jmp    1f05b <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1f012:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f016:	48 89 c7             	mov    %rax,%rdi
   1f019:	e8 52 6f ff ff       	callq  15f70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1f01e:	48 89 c2             	mov    %rax,%rdx
   1f021:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f025:	48 89 d6             	mov    %rdx,%rsi
   1f028:	48 89 c7             	mov    %rax,%rdi
   1f02b:	e8 70 65 ff ff       	callq  155a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>
	  _Link_type __y = _S_left(__x);
   1f030:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f034:	48 89 c7             	mov    %rax,%rdi
   1f037:	e8 f4 79 ff ff       	callq  16a30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   1f03c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_destroy_node(__x);
   1f040:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f044:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f048:	48 89 d6             	mov    %rdx,%rsi
   1f04b:	48 89 c7             	mov    %rax,%rdi
   1f04e:	e8 7d 79 ff ff       	callq  169d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
	  __x = __y;
   1f053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f057:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1f05b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1f060:	0f 95 c0             	setne  %al
   1f063:	84 c0                	test   %al,%al
   1f065:	75 ab                	jne    1f012 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x12>
	  _M_erase(_S_right(__x));
	  _Link_type __y = _S_left(__x);
	  _M_destroy_node(__x);
	  __x = __y;
	}
    }
   1f067:	c9                   	leaveq 
   1f068:	c3                   	retq   
   1f069:	90                   	nop

000000000001f06a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv>:
      _Const_Base_ptr
      _M_rightmost() const
      { return this->_M_impl._M_header._M_right; }

      _Link_type
      _M_begin()
   1f06a:	55                   	push   %rbp
   1f06b:	48 89 e5             	mov    %rsp,%rbp
   1f06e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1f072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f076:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f07a:	5d                   	pop    %rbp
   1f07b:	c3                   	retq   

000000000001f07c <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EEC1Ev>:
      _M_upper_bound(_Const_Link_type __x, _Const_Link_type __y,
		     const _Key& __k) const;

    public:
      // allocation/deallocation
      _Rb_tree() { }
   1f07c:	55                   	push   %rbp
   1f07d:	48 89 e5             	mov    %rsp,%rbp
   1f080:	48 83 ec 10          	sub    $0x10,%rsp
   1f084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f08c:	48 89 c7             	mov    %rax,%rdi
   1f08f:	e8 dc 6f ff ff       	callq  16070 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EEC1Ev@plt>
   1f094:	c9                   	leaveq 
   1f095:	c3                   	retq   

000000000001f096 <_ZNSaISt13_Rb_tree_nodeISt4pairIKibEEED1Ev>:
   1f096:	55                   	push   %rbp
   1f097:	48 89 e5             	mov    %rsp,%rbp
   1f09a:	48 83 ec 10          	sub    $0x10,%rsp
   1f09e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f0a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f0a6:	48 89 c7             	mov    %rax,%rdi
   1f0a9:	e8 72 6c ff ff       	callq  15d20 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEED2Ev@plt>
   1f0ae:	c9                   	leaveq 
   1f0af:	c3                   	retq   

000000000001f0b0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1f0b0:	55                   	push   %rbp
   1f0b1:	48 89 e5             	mov    %rsp,%rbp
   1f0b4:	48 83 ec 20          	sub    $0x20,%rsp
   1f0b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f0bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1f0c0:	eb 49                	jmp    1f10b <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1f0c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f0c6:	48 89 c7             	mov    %rax,%rdi
   1f0c9:	e8 a2 64 ff ff       	callq  15570 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1f0ce:	48 89 c2             	mov    %rax,%rdx
   1f0d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f0d5:	48 89 d6             	mov    %rdx,%rsi
   1f0d8:	48 89 c7             	mov    %rax,%rdi
   1f0db:	e8 50 6b ff ff       	callq  15c30 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E@plt>
	  _Link_type __y = _S_left(__x);
   1f0e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f0e4:	48 89 c7             	mov    %rax,%rdi
   1f0e7:	e8 24 71 ff ff       	callq  16210 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   1f0ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_destroy_node(__x);
   1f0f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f0f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f0f8:	48 89 d6             	mov    %rdx,%rsi
   1f0fb:	48 89 c7             	mov    %rax,%rdi
   1f0fe:	e8 6d 6b ff ff       	callq  15c70 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E@plt>
	  __x = __y;
   1f103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f107:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1f10b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1f110:	0f 95 c0             	setne  %al
   1f113:	84 c0                	test   %al,%al
   1f115:	75 ab                	jne    1f0c2 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x12>
	  _M_erase(_S_right(__x));
	  _Link_type __y = _S_left(__x);
	  _M_destroy_node(__x);
	  __x = __y;
	}
    }
   1f117:	c9                   	leaveq 
   1f118:	c3                   	retq   
   1f119:	90                   	nop

000000000001f11a <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv>:
      _Const_Base_ptr
      _M_rightmost() const
      { return this->_M_impl._M_header._M_right; }

      _Link_type
      _M_begin()
   1f11a:	55                   	push   %rbp
   1f11b:	48 89 e5             	mov    %rsp,%rbp
   1f11e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1f122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f126:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f12a:	5d                   	pop    %rbp
   1f12b:	c3                   	retq   

000000000001f12c <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv>:
      iterator
      end()
      { return iterator(static_cast<_Link_type>(&this->_M_impl._M_header)); }

      const_iterator
      end() const
   1f12c:	55                   	push   %rbp
   1f12d:	48 89 e5             	mov    %rsp,%rbp
   1f130:	48 83 ec 20          	sub    $0x20,%rsp
   1f134:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { 
	return const_iterator(static_cast<_Const_Link_type>
			      (&this->_M_impl._M_header));
   1f138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f13c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1f140:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1f144:	48 89 d6             	mov    %rdx,%rsi
   1f147:	48 89 c7             	mov    %rax,%rdi
   1f14a:	e8 81 60 ff ff       	callq  151d0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEC1EPKSt13_Rb_tree_nodeIS2_E@plt>
   1f14f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
   1f153:	c9                   	leaveq 
   1f154:	c3                   	retq   
   1f155:	90                   	nop

000000000001f156 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4findERS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1f156:	55                   	push   %rbp
   1f157:	48 89 e5             	mov    %rsp,%rbp
   1f15a:	53                   	push   %rbx
   1f15b:	48 83 ec 38          	sub    $0x38,%rsp
   1f15f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1f163:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    find(const _Key& __k) const
    {
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
   1f167:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f16b:	48 89 c7             	mov    %rax,%rdi
   1f16e:	e8 bd 68 ff ff       	callq  15a30 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>
   1f173:	48 89 c3             	mov    %rax,%rbx
   1f176:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f17a:	48 89 c7             	mov    %rax,%rdi
   1f17d:	e8 4e 6a ff ff       	callq  15bd0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv@plt>
   1f182:	48 89 c6             	mov    %rax,%rsi
   1f185:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1f189:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f18d:	48 89 d1             	mov    %rdx,%rcx
   1f190:	48 89 da             	mov    %rbx,%rdx
   1f193:	48 89 c7             	mov    %rax,%rdi
   1f196:	e8 a5 68 ff ff       	callq  15a40 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_@plt>
   1f19b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      return (__j == end()
	      || _M_impl._M_key_compare(__k, 
					_S_key(__j._M_node))) ? end() : __j;
   1f19f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f1a3:	48 89 c7             	mov    %rax,%rdi
   1f1a6:	e8 05 6c ff ff       	callq  15db0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv@plt>
   1f1ab:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1f1af:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1f1b3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1f1b7:	48 89 d6             	mov    %rdx,%rsi
   1f1ba:	48 89 c7             	mov    %rax,%rdi
   1f1bd:	e8 5e 65 ff ff       	callq  15720 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKibEEeqERKS3_@plt>
   1f1c2:	84 c0                	test   %al,%al
   1f1c4:	75 26                	jne    1f1ec <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4findERS1_+0x96>
   1f1c6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f1ca:	48 89 c7             	mov    %rax,%rdi
   1f1cd:	e8 ae 63 ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1f1d2:	48 89 c2             	mov    %rax,%rdx
   1f1d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f1d9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1f1dd:	48 89 ce             	mov    %rcx,%rsi
   1f1e0:	48 89 c7             	mov    %rax,%rdi
   1f1e3:	e8 98 6b ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1f1e8:	84 c0                	test   %al,%al
   1f1ea:	74 0e                	je     1f1fa <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4findERS1_+0xa4>
   1f1ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1f1f0:	48 89 c7             	mov    %rax,%rdi
   1f1f3:	e8 b8 6b ff ff       	callq  15db0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv@plt>
   1f1f8:	eb 04                	jmp    1f1fe <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4findERS1_+0xa8>
   1f1fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    }
   1f1fe:	48 83 c4 38          	add    $0x38,%rsp
   1f202:	5b                   	pop    %rbx
   1f203:	5d                   	pop    %rbp
   1f204:	c3                   	retq   
   1f205:	90                   	nop

000000000001f206 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKibEEeqERKS3_>:
	_M_node = _Rb_tree_decrement(_M_node);
	return __tmp;
      }

      bool
      operator==(const _Self& __x) const
   1f206:	55                   	push   %rbp
   1f207:	48 89 e5             	mov    %rsp,%rbp
   1f20a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f20e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node == __x._M_node; }
   1f212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f216:	48 8b 10             	mov    (%rax),%rdx
   1f219:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f21d:	48 8b 00             	mov    (%rax),%rax
   1f220:	48 39 c2             	cmp    %rax,%rdx
   1f223:	0f 94 c0             	sete   %al
   1f226:	5d                   	pop    %rbp
   1f227:	c3                   	retq   

000000000001f228 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE11lower_boundERS7_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   1f228:	55                   	push   %rbp
   1f229:	48 89 e5             	mov    %rsp,%rbp
   1f22c:	48 83 ec 10          	sub    $0x10,%rsp
   1f230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f234:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   1f238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f23c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f240:	48 89 d6             	mov    %rdx,%rsi
   1f243:	48 89 c7             	mov    %rax,%rdi
   1f246:	e8 55 69 ff ff       	callq  15ba0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11lower_boundERS1_@plt>
   1f24b:	c9                   	leaveq 
   1f24c:	c3                   	retq   
   1f24d:	90                   	nop

000000000001f24e <_ZNKSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE8key_compEv>:
      /**
       *  Returns the key comparison object out of which the %map was
       *  constructed.
       */
      key_compare
      key_comp() const
   1f24e:	55                   	push   %rbp
   1f24f:	48 89 e5             	mov    %rsp,%rbp
   1f252:	53                   	push   %rbx
   1f253:	48 83 ec 18          	sub    $0x18,%rsp
   1f257:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _M_t.key_comp(); }
   1f25b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f25f:	48 89 c7             	mov    %rax,%rdi
   1f262:	e8 89 68 ff ff       	callq  15af0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8key_compEv@plt>
   1f267:	89 d8                	mov    %ebx,%eax
   1f269:	48 83 c4 18          	add    $0x18,%rsp
   1f26d:	5b                   	pop    %rbx
   1f26e:	5d                   	pop    %rbp
   1f26f:	c3                   	retq   

000000000001f270 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEdeEv>:
      explicit
      _Rb_tree_iterator(_Link_type __x)
      : _M_node(__x) { }

      reference
      operator*() const
   1f270:	55                   	push   %rbp
   1f271:	48 89 e5             	mov    %rsp,%rbp
   1f274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(_M_node)->_M_value_field; }
   1f278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f27c:	48 8b 00             	mov    (%rax),%rax
   1f27f:	48 83 c0 20          	add    $0x20,%rax
   1f283:	5d                   	pop    %rbp
   1f284:	c3                   	retq   
   1f285:	90                   	nop

000000000001f286 <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  pair in the %map.  Iteration is done in ascending order
       *  according to the keys.
       */
      iterator
      end()
   1f286:	55                   	push   %rbp
   1f287:	48 89 e5             	mov    %rsp,%rbp
   1f28a:	48 83 ec 10          	sub    $0x10,%rsp
   1f28e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   1f292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f296:	48 89 c7             	mov    %rax,%rdi
   1f299:	e8 72 5f ff ff       	callq  15210 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv@plt>
   1f29e:	c9                   	leaveq 
   1f29f:	c3                   	retq   

000000000001f2a0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_>:
	_M_node = _Rb_tree_decrement(_M_node);
	return __tmp;
      }

      bool
      operator==(const _Self& __x) const
   1f2a0:	55                   	push   %rbp
   1f2a1:	48 89 e5             	mov    %rsp,%rbp
   1f2a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f2a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node == __x._M_node; }
   1f2ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f2b0:	48 8b 10             	mov    (%rax),%rdx
   1f2b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f2b7:	48 8b 00             	mov    (%rax),%rax
   1f2ba:	48 39 c2             	cmp    %rax,%rdx
   1f2bd:	0f 94 c0             	sete   %al
   1f2c0:	5d                   	pop    %rbp
   1f2c1:	c3                   	retq   

000000000001f2c2 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoC1ERKS2_>:
   1f2c2:	55                   	push   %rbp
   1f2c3:	48 89 e5             	mov    %rsp,%rbp
   1f2c6:	53                   	push   %rbx
   1f2c7:	48 83 ec 18          	sub    $0x18,%rsp
   1f2cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f2cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f2d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f2d7:	8b 10                	mov    (%rax),%edx
   1f2d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f2dd:	89 10                	mov    %edx,(%rax)
   1f2df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f2e3:	8b 50 04             	mov    0x4(%rax),%edx
   1f2e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f2ea:	89 50 04             	mov    %edx,0x4(%rax)
   1f2ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f2f1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f2f5:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1f2f9:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1f2fd:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1f301:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1f305:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f309:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f30d:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   1f311:	48 89 48 18          	mov    %rcx,0x18(%rax)
   1f315:	48 8b 52 20          	mov    0x20(%rdx),%rdx
   1f319:	48 89 50 20          	mov    %rdx,0x20(%rax)
   1f31d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f321:	8b 50 28             	mov    0x28(%rax),%edx
   1f324:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f328:	89 50 28             	mov    %edx,0x28(%rax)
   1f32b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f32f:	8b 50 2c             	mov    0x2c(%rax),%edx
   1f332:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f336:	89 50 2c             	mov    %edx,0x2c(%rax)
   1f339:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f33d:	48 8d 50 30          	lea    0x30(%rax),%rdx
   1f341:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f345:	48 83 c0 30          	add    $0x30,%rax
   1f349:	48 89 d6             	mov    %rdx,%rsi
   1f34c:	48 89 c7             	mov    %rax,%rdi
   1f34f:	e8 8c 71 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   1f354:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f358:	48 8d 50 50          	lea    0x50(%rax),%rdx
   1f35c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f360:	48 83 c0 50          	add    $0x50,%rax
   1f364:	48 89 d6             	mov    %rdx,%rsi
   1f367:	48 89 c7             	mov    %rax,%rdi
   1f36a:	e8 71 71 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   1f36f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f373:	8b 50 70             	mov    0x70(%rax),%edx
   1f376:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f37a:	89 50 70             	mov    %edx,0x70(%rax)
   1f37d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f381:	8b 50 74             	mov    0x74(%rax),%edx
   1f384:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f388:	89 50 74             	mov    %edx,0x74(%rax)
   1f38b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f38f:	8b 50 78             	mov    0x78(%rax),%edx
   1f392:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f396:	89 50 78             	mov    %edx,0x78(%rax)
   1f399:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f39d:	8b 50 7c             	mov    0x7c(%rax),%edx
   1f3a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f3a4:	89 50 7c             	mov    %edx,0x7c(%rax)
   1f3a7:	48 83 c4 18          	add    $0x18,%rsp
   1f3ab:	5b                   	pop    %rbx
   1f3ac:	5d                   	pop    %rbp
   1f3ad:	c3                   	retq   
   1f3ae:	48 89 c3             	mov    %rax,%rbx
   1f3b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f3b5:	48 83 c0 30          	add    $0x30,%rax
   1f3b9:	48 89 c7             	mov    %rax,%rdi
   1f3bc:	e8 6f 61 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   1f3c1:	48 89 d8             	mov    %rbx,%rax
   1f3c4:	48 89 c7             	mov    %rax,%rdi
   1f3c7:	e8 e4 76 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000001f3cc <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEC1IS4_vEERS0_OT_>:
	pair(_U1&& __x, const _T2& __y)
	: first(std::forward<_U1>(__x)), second(__y) { }

      template<class _U2, class = typename
	       std::enable_if<std::is_convertible<_U2, _T2>::value>::type>
	pair(const _T1& __x, _U2&& __y)
   1f3cc:	55                   	push   %rbp
   1f3cd:	48 89 e5             	mov    %rsp,%rbp
   1f3d0:	48 83 ec 20          	sub    $0x20,%rsp
   1f3d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f3d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f3dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(__x), second(std::forward<_U2>(__y)) { }
   1f3e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f3e4:	8b 10                	mov    (%rax),%edx
   1f3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f3ea:	89 10                	mov    %edx,(%rax)
   1f3ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f3f0:	48 89 c7             	mov    %rax,%rdi
   1f3f3:	e8 c8 6c ff ff       	callq  160c0 <_ZSt7forwardIN6xaxaxa7Sockets13SocketManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE@plt>
   1f3f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1f3fc:	48 83 c2 08          	add    $0x8,%rdx
   1f400:	48 89 c6             	mov    %rax,%rsi
   1f403:	48 89 d7             	mov    %rdx,%rdi
   1f406:	e8 45 6f ff ff       	callq  16350 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoC1ERKS2_@plt>
   1f40b:	c9                   	leaveq 
   1f40c:	c3                   	retq   
   1f40d:	90                   	nop

000000000001f40e <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E>:

      explicit
      _Rb_tree_const_iterator(_Link_type __x)
      : _M_node(__x) { }

      _Rb_tree_const_iterator(const iterator& __it)
   1f40e:	55                   	push   %rbp
   1f40f:	48 89 e5             	mov    %rsp,%rbp
   1f412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   1f41a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f41e:	48 8b 10             	mov    (%rax),%rdx
   1f421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f425:	48 89 10             	mov    %rdx,(%rax)
   1f428:	5d                   	pop    %rbp
   1f429:	c3                   	retq   

000000000001f42a <_ZNSt3mapIiN6xaxaxa7Sockets13SocketManager8taskInfoESt4lessIiESaISt4pairIKiS3_EEE6insertIS8_vEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EOT_>:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename _Pair, typename = typename
	       std::enable_if<std::is_convertible<_Pair,
						  value_type>::value>::type>
        iterator
        insert(const_iterator __position, _Pair&& __x)
   1f42a:	55                   	push   %rbp
   1f42b:	48 89 e5             	mov    %rsp,%rbp
   1f42e:	48 83 ec 20          	sub    $0x20,%rsp
   1f432:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f436:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f43a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return _M_t._M_insert_unique_(__position,
					std::forward<_Pair>(__x)); }
   1f43e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f442:	48 89 c7             	mov    %rax,%rdi
   1f445:	e8 56 63 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1f44a:	48 89 c2             	mov    %rax,%rdx
   1f44d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f451:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f455:	48 89 ce             	mov    %rcx,%rsi
   1f458:	48 89 c7             	mov    %rax,%rdi
   1f45b:	e8 20 71 ff ff       	callq  16580 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_@plt>
   1f460:	c9                   	leaveq 
   1f461:	c3                   	retq   

000000000001f462 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseERS1_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1f462:	55                   	push   %rbp
   1f463:	48 89 e5             	mov    %rsp,%rbp
   1f466:	48 83 ec 60          	sub    $0x60,%rsp
   1f46a:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1f46e:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
   1f472:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1f476:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f47a:	48 89 d6             	mov    %rdx,%rsi
   1f47d:	48 89 c7             	mov    %rax,%rdi
   1f480:	e8 0b 6b ff ff       	callq  15f90 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_@plt>
   1f485:	48 89 c1             	mov    %rax,%rcx
   1f488:	48 89 d0             	mov    %rdx,%rax
   1f48b:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   1f48f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1f493:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f497:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1f49b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1f49f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1f4a3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1f4a7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1f4ab:	48 89 d6             	mov    %rdx,%rsi
   1f4ae:	48 89 c7             	mov    %rax,%rdi
   1f4b1:	e8 ca 71 ff ff       	callq  16680 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>
      const size_type __old_size = size();
   1f4b6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f4ba:	48 89 c7             	mov    %rax,%rdi
   1f4bd:	e8 de 6d ff ff       	callq  162a0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>
   1f4c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      erase(__p.first, __p.second);
   1f4c6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1f4ca:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1f4ce:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1f4d2:	48 89 d6             	mov    %rdx,%rsi
   1f4d5:	48 89 c7             	mov    %rax,%rdi
   1f4d8:	e8 73 74 ff ff       	callq  16950 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   1f4dd:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1f4e1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1f4e5:	48 89 d6             	mov    %rdx,%rsi
   1f4e8:	48 89 c7             	mov    %rax,%rdi
   1f4eb:	e8 60 74 ff ff       	callq  16950 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   1f4f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f4f4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f4f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f4fc:	48 89 ce             	mov    %rcx,%rsi
   1f4ff:	48 89 c7             	mov    %rax,%rdi
   1f502:	e8 39 6f ff ff       	callq  16440 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_ESE_@plt>
      return __old_size - size();
   1f507:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f50b:	48 89 c7             	mov    %rax,%rdi
   1f50e:	e8 8d 6d ff ff       	callq  162a0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>
   1f513:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1f517:	48 89 d1             	mov    %rdx,%rcx
   1f51a:	48 29 c1             	sub    %rax,%rcx
   1f51d:	48 89 c8             	mov    %rcx,%rax
    }
   1f520:	c9                   	leaveq 
   1f521:	c3                   	retq   

000000000001f522 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE5clearEv>:
#endif
      void
      erase(const key_type* __first, const key_type* __last);

      void
      clear()
   1f522:	55                   	push   %rbp
   1f523:	48 89 e5             	mov    %rsp,%rbp
   1f526:	53                   	push   %rbx
   1f527:	48 83 ec 18          	sub    $0x18,%rsp
   1f52b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
        _M_erase(_M_begin());
   1f52f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f533:	48 89 c7             	mov    %rax,%rdi
   1f536:	e8 95 63 ff ff       	callq  158d0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv@plt>
   1f53b:	48 89 c2             	mov    %rax,%rdx
   1f53e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f542:	48 89 d6             	mov    %rdx,%rsi
   1f545:	48 89 c7             	mov    %rax,%rdi
   1f548:	e8 e3 66 ff ff       	callq  15c30 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E@plt>
        _M_leftmost() = _M_end();
   1f54d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f551:	48 89 c7             	mov    %rax,%rdi
   1f554:	e8 27 6f ff ff       	callq  16480 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_leftmostEv@plt>
   1f559:	48 89 c3             	mov    %rax,%rbx
   1f55c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f560:	48 89 c7             	mov    %rax,%rdi
   1f563:	e8 e8 65 ff ff       	callq  15b50 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>
   1f568:	48 89 03             	mov    %rax,(%rbx)
        _M_root() = 0;
   1f56b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f56f:	48 89 c7             	mov    %rax,%rdi
   1f572:	e8 39 61 ff ff       	callq  156b0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_M_rootEv@plt>
   1f577:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
        _M_rightmost() = _M_end();
   1f57e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f582:	48 89 c7             	mov    %rax,%rdi
   1f585:	e8 d6 6c ff ff       	callq  16260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE12_M_rightmostEv@plt>
   1f58a:	48 89 c3             	mov    %rax,%rbx
   1f58d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f591:	48 89 c7             	mov    %rax,%rdi
   1f594:	e8 b7 65 ff ff       	callq  15b50 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>
   1f599:	48 89 03             	mov    %rax,(%rbx)
        _M_impl._M_node_count = 0;
   1f59c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f5a0:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1f5a7:	00 
      }
   1f5a8:	48 83 c4 18          	add    $0x18,%rsp
   1f5ac:	5b                   	pop    %rbx
   1f5ad:	5d                   	pop    %rbp
   1f5ae:	c3                   	retq   
   1f5af:	90                   	nop

000000000001f5b0 <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE11lower_boundERS3_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   1f5b0:	55                   	push   %rbp
   1f5b1:	48 89 e5             	mov    %rsp,%rbp
   1f5b4:	48 83 ec 10          	sub    $0x10,%rsp
   1f5b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f5bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   1f5c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f5c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f5c8:	48 89 d6             	mov    %rdx,%rsi
   1f5cb:	48 89 c7             	mov    %rax,%rdi
   1f5ce:	e8 9d 6d ff ff       	callq  16370 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11lower_boundERS1_@plt>
   1f5d3:	c9                   	leaveq 
   1f5d4:	c3                   	retq   
   1f5d5:	90                   	nop

000000000001f5d6 <_ZNKSt3mapIibSt4lessIiESaISt4pairIKibEEE8key_compEv>:
      /**
       *  Returns the key comparison object out of which the %map was
       *  constructed.
       */
      key_compare
      key_comp() const
   1f5d6:	55                   	push   %rbp
   1f5d7:	48 89 e5             	mov    %rsp,%rbp
   1f5da:	53                   	push   %rbx
   1f5db:	48 83 ec 18          	sub    $0x18,%rsp
   1f5df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _M_t.key_comp(); }
   1f5e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f5e7:	48 89 c7             	mov    %rax,%rdi
   1f5ea:	e8 d1 5b ff ff       	callq  151c0 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8key_compEv@plt>
   1f5ef:	89 d8                	mov    %ebx,%eax
   1f5f1:	48 83 c4 18          	add    $0x18,%rsp
   1f5f5:	5b                   	pop    %rbx
   1f5f6:	5d                   	pop    %rbp
   1f5f7:	c3                   	retq   

000000000001f5f8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEdeEv>:
      explicit
      _Rb_tree_iterator(_Link_type __x)
      : _M_node(__x) { }

      reference
      operator*() const
   1f5f8:	55                   	push   %rbp
   1f5f9:	48 89 e5             	mov    %rsp,%rbp
   1f5fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(_M_node)->_M_value_field; }
   1f600:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f604:	48 8b 00             	mov    (%rax),%rax
   1f607:	48 83 c0 20          	add    $0x20,%rax
   1f60b:	5d                   	pop    %rbp
   1f60c:	c3                   	retq   
   1f60d:	90                   	nop

000000000001f60e <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  pair in the %map.  Iteration is done in ascending order
       *  according to the keys.
       */
      iterator
      end()
   1f60e:	55                   	push   %rbp
   1f60f:	48 89 e5             	mov    %rsp,%rbp
   1f612:	48 83 ec 10          	sub    $0x10,%rsp
   1f616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   1f61a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f61e:	48 89 c7             	mov    %rax,%rdi
   1f621:	e8 ca 66 ff ff       	callq  15cf0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv@plt>
   1f626:	c9                   	leaveq 
   1f627:	c3                   	retq   

000000000001f628 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEeqERKS3_>:
	_M_node = _Rb_tree_decrement(_M_node);
	return __tmp;
      }

      bool
      operator==(const _Self& __x) const
   1f628:	55                   	push   %rbp
   1f629:	48 89 e5             	mov    %rsp,%rbp
   1f62c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f630:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node == __x._M_node; }
   1f634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f638:	48 8b 10             	mov    (%rax),%rdx
   1f63b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f63f:	48 8b 00             	mov    (%rax),%rax
   1f642:	48 39 c2             	cmp    %rax,%rdx
   1f645:	0f 94 c0             	sete   %al
   1f648:	5d                   	pop    %rbp
   1f649:	c3                   	retq   

000000000001f64a <_ZNSt4pairIKibEC1IbvEERS0_OT_>:
	pair(_U1&& __x, const _T2& __y)
	: first(std::forward<_U1>(__x)), second(__y) { }

      template<class _U2, class = typename
	       std::enable_if<std::is_convertible<_U2, _T2>::value>::type>
	pair(const _T1& __x, _U2&& __y)
   1f64a:	55                   	push   %rbp
   1f64b:	48 89 e5             	mov    %rsp,%rbp
   1f64e:	48 83 ec 20          	sub    $0x20,%rsp
   1f652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f656:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f65a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(__x), second(std::forward<_U2>(__y)) { }
   1f65e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f662:	8b 10                	mov    (%rax),%edx
   1f664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f668:	89 10                	mov    %edx,(%rax)
   1f66a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f66e:	48 89 c7             	mov    %rax,%rdi
   1f671:	e8 ea 5e ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   1f676:	0f b6 10             	movzbl (%rax),%edx
   1f679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f67d:	88 50 04             	mov    %dl,0x4(%rax)
   1f680:	c9                   	leaveq 
   1f681:	c3                   	retq   

000000000001f682 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEC1ERKSt17_Rb_tree_iteratorIS2_E>:

      explicit
      _Rb_tree_const_iterator(_Link_type __x)
      : _M_node(__x) { }

      _Rb_tree_const_iterator(const iterator& __it)
   1f682:	55                   	push   %rbp
   1f683:	48 89 e5             	mov    %rsp,%rbp
   1f686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f68a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   1f68e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f692:	48 8b 10             	mov    (%rax),%rdx
   1f695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f699:	48 89 10             	mov    %rdx,(%rax)
   1f69c:	5d                   	pop    %rbp
   1f69d:	c3                   	retq   

000000000001f69e <_ZNSt3mapIibSt4lessIiESaISt4pairIKibEEE6insertIS4_vEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EOT_>:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename _Pair, typename = typename
	       std::enable_if<std::is_convertible<_Pair,
						  value_type>::value>::type>
        iterator
        insert(const_iterator __position, _Pair&& __x)
   1f69e:	55                   	push   %rbp
   1f69f:	48 89 e5             	mov    %rsp,%rbp
   1f6a2:	48 83 ec 20          	sub    $0x20,%rsp
   1f6a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f6aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f6ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return _M_t._M_insert_unique_(__position,
					std::forward<_Pair>(__x)); }
   1f6b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f6b6:	48 89 c7             	mov    %rax,%rdi
   1f6b9:	e8 62 64 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   1f6be:	48 89 c2             	mov    %rax,%rdx
   1f6c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f6c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f6c9:	48 89 ce             	mov    %rcx,%rsi
   1f6cc:	48 89 c7             	mov    %rax,%rdi
   1f6cf:	e8 1c 6f ff ff       	callq  165f0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_@plt>
   1f6d4:	c9                   	leaveq 
   1f6d5:	c3                   	retq   

000000000001f6d6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev>:
        {
	  _Key_compare		_M_key_compare;
	  _Rb_tree_node_base 	_M_header;
	  size_type 		_M_node_count; // Keeps track of size of tree.

	  _Rb_tree_impl()
   1f6d6:	55                   	push   %rbp
   1f6d7:	48 89 e5             	mov    %rsp,%rbp
   1f6da:	53                   	push   %rbx
   1f6db:	48 83 ec 18          	sub    $0x18,%rsp
   1f6df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	  : _Node_allocator(), _M_key_compare(), _M_header(),
	    _M_node_count(0)
   1f6e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f6e7:	48 89 c7             	mov    %rax,%rdi
   1f6ea:	e8 91 6b ff ff       	callq  16280 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEC2Ev@plt>
   1f6ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f6f3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   1f6fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f6fe:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1f705:	00 
   1f706:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f70a:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1f711:	00 
   1f712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f716:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1f71d:	00 
   1f71e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f722:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1f729:	00 
	  { _M_initialize(); }
   1f72a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f72e:	48 89 c7             	mov    %rax,%rdi
   1f731:	e8 aa 66 ff ff       	callq  15de0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EE13_M_initializeEv@plt>
   1f736:	eb 1a                	jmp    1f752 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev+0x7c>
   1f738:	48 89 c3             	mov    %rax,%rbx
	  _Rb_tree_node_base 	_M_header;
	  size_type 		_M_node_count; // Keeps track of size of tree.

	  _Rb_tree_impl()
	  : _Node_allocator(), _M_key_compare(), _M_header(),
	    _M_node_count(0)
   1f73b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f73f:	48 89 c7             	mov    %rax,%rdi
   1f742:	e8 39 6c ff ff       	callq  16380 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEED2Ev@plt>
   1f747:	48 89 d8             	mov    %rbx,%rax
   1f74a:	48 89 c7             	mov    %rax,%rdi
   1f74d:	e8 5e 73 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
	  { _M_initialize(); }
   1f752:	48 83 c4 18          	add    $0x18,%rsp
   1f756:	5b                   	pop    %rbx
   1f757:	5d                   	pop    %rbp
   1f758:	c3                   	retq   
   1f759:	90                   	nop

000000000001f75a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEED1Ev>:
      new_allocator(const new_allocator&) throw() { }

      template<typename _Tp1>
        new_allocator(const new_allocator<_Tp1>&) throw() { }

      ~new_allocator() throw() { }
   1f75a:	55                   	push   %rbp
   1f75b:	48 89 e5             	mov    %rsp,%rbp
   1f75e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f762:	5d                   	pop    %rbp
   1f763:	c3                   	retq   

000000000001f764 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>:
      static _Const_Link_type
      _S_left(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x->_M_left); }

      static _Link_type
      _S_right(_Base_ptr __x)
   1f764:	55                   	push   %rbp
   1f765:	48 89 e5             	mov    %rsp,%rbp
   1f768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1f76c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f770:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f774:	5d                   	pop    %rbp
   1f775:	c3                   	retq   

000000000001f776 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base>:
      static const _Key&
      _S_key(_Const_Link_type __x)
      { return _KeyOfValue()(_S_value(__x)); }

      static _Link_type
      _S_left(_Base_ptr __x)
   1f776:	55                   	push   %rbp
   1f777:	48 89 e5             	mov    %rsp,%rbp
   1f77a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1f77e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f782:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f786:	5d                   	pop    %rbp
   1f787:	c3                   	retq   

000000000001f788 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E>:
	    }
	  return __tmp;
	}

      void
      _M_destroy_node(_Link_type __p)
   1f788:	55                   	push   %rbp
   1f789:	48 89 e5             	mov    %rsp,%rbp
   1f78c:	48 83 ec 10          	sub    $0x10,%rsp
   1f790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f794:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	_M_get_Node_allocator().destroy(__p);
   1f798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f79c:	48 89 c7             	mov    %rax,%rdi
   1f79f:	e8 ac 64 ff ff       	callq  15c50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv@plt>
   1f7a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f7a8:	48 89 d6             	mov    %rdx,%rsi
   1f7ab:	48 89 c7             	mov    %rax,%rdi
   1f7ae:	e8 4d 65 ff ff       	callq  15d00 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE7destroyEPS9_@plt>
	_M_put_node(__p);
   1f7b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f7b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f7bb:	48 89 d6             	mov    %rdx,%rsi
   1f7be:	48 89 c7             	mov    %rax,%rdi
   1f7c1:	e8 1a 5a ff ff       	callq  151e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
      }
   1f7c6:	c9                   	leaveq 
   1f7c7:	c3                   	retq   

000000000001f7c8 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EEC1Ev>:
        {
	  _Key_compare		_M_key_compare;
	  _Rb_tree_node_base 	_M_header;
	  size_type 		_M_node_count; // Keeps track of size of tree.

	  _Rb_tree_impl()
   1f7c8:	55                   	push   %rbp
   1f7c9:	48 89 e5             	mov    %rsp,%rbp
   1f7cc:	53                   	push   %rbx
   1f7cd:	48 83 ec 18          	sub    $0x18,%rsp
   1f7d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	  : _Node_allocator(), _M_key_compare(), _M_header(),
	    _M_node_count(0)
   1f7d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f7d9:	48 89 c7             	mov    %rax,%rdi
   1f7dc:	e8 3f 6e ff ff       	callq  16620 <_ZNSaISt13_Rb_tree_nodeISt4pairIKibEEEC2Ev@plt>
   1f7e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f7e5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   1f7ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f7f0:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1f7f7:	00 
   1f7f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f7fc:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1f803:	00 
   1f804:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f808:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1f80f:	00 
   1f810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f814:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1f81b:	00 
	  { _M_initialize(); }
   1f81c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f820:	48 89 c7             	mov    %rax,%rdi
   1f823:	e8 e8 6a ff ff       	callq  16310 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv@plt>
   1f828:	eb 1a                	jmp    1f844 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EEC1Ev+0x7c>
   1f82a:	48 89 c3             	mov    %rax,%rbx
	  _Rb_tree_node_base 	_M_header;
	  size_type 		_M_node_count; // Keeps track of size of tree.

	  _Rb_tree_impl()
	  : _Node_allocator(), _M_key_compare(), _M_header(),
	    _M_node_count(0)
   1f82d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f831:	48 89 c7             	mov    %rax,%rdi
   1f834:	e8 c7 5f ff ff       	callq  15800 <_ZNSaISt13_Rb_tree_nodeISt4pairIKibEEED2Ev@plt>
   1f839:	48 89 d8             	mov    %rbx,%rax
   1f83c:	48 89 c7             	mov    %rax,%rdi
   1f83f:	e8 6c 72 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
	  { _M_initialize(); }
   1f844:	48 83 c4 18          	add    $0x18,%rsp
   1f848:	5b                   	pop    %rbx
   1f849:	5d                   	pop    %rbp
   1f84a:	c3                   	retq   
   1f84b:	90                   	nop

000000000001f84c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEED1Ev>:
   1f84c:	55                   	push   %rbp
   1f84d:	48 89 e5             	mov    %rsp,%rbp
   1f850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f854:	5d                   	pop    %rbp
   1f855:	c3                   	retq   

000000000001f856 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base>:
      static _Const_Link_type
      _S_left(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x->_M_left); }

      static _Link_type
      _S_right(_Base_ptr __x)
   1f856:	55                   	push   %rbp
   1f857:	48 89 e5             	mov    %rsp,%rbp
   1f85a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1f85e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f862:	48 8b 40 18          	mov    0x18(%rax),%rax
   1f866:	5d                   	pop    %rbp
   1f867:	c3                   	retq   

000000000001f868 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base>:
      static const _Key&
      _S_key(_Const_Link_type __x)
      { return _KeyOfValue()(_S_value(__x)); }

      static _Link_type
      _S_left(_Base_ptr __x)
   1f868:	55                   	push   %rbp
   1f869:	48 89 e5             	mov    %rsp,%rbp
   1f86c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1f870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f874:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f878:	5d                   	pop    %rbp
   1f879:	c3                   	retq   

000000000001f87a <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E>:
	    }
	  return __tmp;
	}

      void
      _M_destroy_node(_Link_type __p)
   1f87a:	55                   	push   %rbp
   1f87b:	48 89 e5             	mov    %rsp,%rbp
   1f87e:	48 83 ec 10          	sub    $0x10,%rsp
   1f882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	_M_get_Node_allocator().destroy(__p);
   1f88a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f88e:	48 89 c7             	mov    %rax,%rdi
   1f891:	e8 aa 5c ff ff       	callq  15540 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE21_M_get_Node_allocatorEv@plt>
   1f896:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f89a:	48 89 d6             	mov    %rdx,%rsi
   1f89d:	48 89 c7             	mov    %rax,%rdi
   1f8a0:	e8 1b 5b ff ff       	callq  153c0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE7destroyEPS5_@plt>
	_M_put_node(__p);
   1f8a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f8a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f8ad:	48 89 d6             	mov    %rdx,%rsi
   1f8b0:	48 89 c7             	mov    %rax,%rdi
   1f8b3:	e8 d8 6e ff ff       	callq  16790 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E@plt>
      }
   1f8b8:	c9                   	leaveq 
   1f8b9:	c3                   	retq   

000000000001f8ba <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEC1EPKSt13_Rb_tree_nodeIS2_E>:

      _Rb_tree_const_iterator()
      : _M_node() { }

      explicit
      _Rb_tree_const_iterator(_Link_type __x)
   1f8ba:	55                   	push   %rbp
   1f8bb:	48 89 e5             	mov    %rsp,%rbp
   1f8be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f8c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1f8c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f8ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f8ce:	48 89 10             	mov    %rdx,(%rax)
   1f8d1:	5d                   	pop    %rbp
   1f8d2:	c3                   	retq   
   1f8d3:	90                   	nop

000000000001f8d4 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv>:
      _Link_type
      _M_begin()
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }

      _Const_Link_type
      _M_begin() const
   1f8d4:	55                   	push   %rbp
   1f8d5:	48 89 e5             	mov    %rsp,%rbp
   1f8d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	return static_cast<_Const_Link_type>
	  (this->_M_impl._M_header._M_parent);
   1f8dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f8e0:	48 8b 40 10          	mov    0x10(%rax),%rax
      }
   1f8e4:	5d                   	pop    %rbp
   1f8e5:	c3                   	retq   

000000000001f8e6 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv>:
      _Link_type
      _M_end()
      { return static_cast<_Link_type>(&this->_M_impl._M_header); }

      _Const_Link_type
      _M_end() const
   1f8e6:	55                   	push   %rbp
   1f8e7:	48 89 e5             	mov    %rsp,%rbp
   1f8ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(&this->_M_impl._M_header); }
   1f8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f8f2:	48 83 c0 08          	add    $0x8,%rax
   1f8f6:	5d                   	pop    %rbp
   1f8f7:	c3                   	retq   

000000000001f8f8 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1f8f8:	55                   	push   %rbp
   1f8f9:	48 89 e5             	mov    %rsp,%rbp
   1f8fc:	48 83 ec 30          	sub    $0x30,%rsp
   1f900:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f904:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f908:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1f90c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    _M_lower_bound(_Const_Link_type __x, _Const_Link_type __y,
		   const _Key& __k) const
    {
      while (__x != 0)
   1f910:	eb 53                	jmp    1f965 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_+0x6d>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   1f912:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f916:	48 89 c7             	mov    %rax,%rdi
   1f919:	e8 62 61 ff ff       	callq  15a80 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E@plt>
   1f91e:	48 89 c1             	mov    %rax,%rcx
   1f921:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f925:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1f929:	48 89 ce             	mov    %rcx,%rsi
   1f92c:	48 89 c7             	mov    %rax,%rdi
   1f92f:	e8 4c 64 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1f934:	83 f0 01             	xor    $0x1,%eax
   1f937:	84 c0                	test   %al,%al
   1f939:	74 1a                	je     1f955 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_+0x5d>
	  __y = __x, __x = _S_left(__x);
   1f93b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f93f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1f943:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f947:	48 89 c7             	mov    %rax,%rdi
   1f94a:	e8 e1 6a ff ff       	callq  16430 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base@plt>
   1f94f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1f953:	eb 10                	jmp    1f965 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_+0x6d>
	else
	  __x = _S_right(__x);
   1f955:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f959:	48 89 c7             	mov    %rax,%rdi
   1f95c:	e8 ff 58 ff ff       	callq  15260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>
   1f961:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_lower_bound(_Const_Link_type __x, _Const_Link_type __y,
		   const _Key& __k) const
    {
      while (__x != 0)
   1f965:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1f96a:	0f 95 c0             	setne  %al
   1f96d:	84 c0                	test   %al,%al
   1f96f:	75 a1                	jne    1f912 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_+0x1a>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
	  __y = __x, __x = _S_left(__x);
	else
	  __x = _S_right(__x);
      return const_iterator(__y);
   1f971:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f975:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1f979:	48 89 d6             	mov    %rdx,%rsi
   1f97c:	48 89 c7             	mov    %rax,%rdi
   1f97f:	e8 4c 58 ff ff       	callq  151d0 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEC1EPKSt13_Rb_tree_nodeIS2_E@plt>
   1f984:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    }
   1f988:	c9                   	leaveq 
   1f989:	c3                   	retq   

000000000001f98a <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      static const_reference
      _S_value(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x)->_M_value_field; }

      static const _Key&
      _S_key(_Const_Base_ptr __x)
   1f98a:	55                   	push   %rbp
   1f98b:	48 89 e5             	mov    %rsp,%rbp
   1f98e:	48 83 ec 20          	sub    $0x20,%rsp
   1f992:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _KeyOfValue()(_S_value(__x)); }
   1f996:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f99a:	48 89 c7             	mov    %rax,%rdi
   1f99d:	e8 3e 6e ff ff       	callq  167e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base@plt>
   1f9a2:	48 89 c2             	mov    %rax,%rdx
   1f9a5:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1f9a9:	48 89 d6             	mov    %rdx,%rsi
   1f9ac:	48 89 c7             	mov    %rax,%rdi
   1f9af:	e8 9c 67 ff ff       	callq  16150 <_ZNKSt10_Select1stISt4pairIKibEEclERKS2_@plt>
   1f9b4:	c9                   	leaveq 
   1f9b5:	c3                   	retq   

000000000001f9b6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11lower_boundERS1_>:

      size_type
      count(const key_type& __k) const;

      iterator
      lower_bound(const key_type& __k)
   1f9b6:	55                   	push   %rbp
   1f9b7:	48 89 e5             	mov    %rsp,%rbp
   1f9ba:	53                   	push   %rbx
   1f9bb:	48 83 ec 18          	sub    $0x18,%rsp
   1f9bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f9c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   1f9c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f9cb:	48 89 c7             	mov    %rax,%rdi
   1f9ce:	e8 0d 6f ff ff       	callq  168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1f9d3:	48 89 c3             	mov    %rax,%rbx
   1f9d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f9da:	48 89 c7             	mov    %rax,%rdi
   1f9dd:	e8 1e 72 ff ff       	callq  16c00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   1f9e2:	48 89 c6             	mov    %rax,%rsi
   1f9e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f9e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f9ed:	48 89 d1             	mov    %rdx,%rcx
   1f9f0:	48 89 da             	mov    %rbx,%rdx
   1f9f3:	48 89 c7             	mov    %rax,%rdi
   1f9f6:	e8 75 6d ff ff       	callq  16770 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>
   1f9fb:	48 83 c4 18          	add    $0x18,%rsp
   1f9ff:	5b                   	pop    %rbx
   1fa00:	5d                   	pop    %rbp
   1fa01:	c3                   	retq   

000000000001fa02 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8key_compEv>:
      _Rb_tree&
      operator=(const _Rb_tree& __x);

      // Accessors.
      _Compare
      key_comp() const
   1fa02:	55                   	push   %rbp
   1fa03:	48 89 e5             	mov    %rsp,%rbp
   1fa06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   1fa0a:	5d                   	pop    %rbp
   1fa0b:	c3                   	retq   

000000000001fa0c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv>:
	return const_iterator(static_cast<_Const_Link_type>
			      (this->_M_impl._M_header._M_left));
      }

      iterator
      end()
   1fa0c:	55                   	push   %rbp
   1fa0d:	48 89 e5             	mov    %rsp,%rbp
   1fa10:	48 83 ec 20          	sub    $0x20,%rsp
   1fa14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(static_cast<_Link_type>(&this->_M_impl._M_header)); }
   1fa18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fa1c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1fa20:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1fa24:	48 89 d6             	mov    %rdx,%rsi
   1fa27:	48 89 c7             	mov    %rax,%rdi
   1fa2a:	e8 61 69 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   1fa2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1fa33:	c9                   	leaveq 
   1fa34:	c3                   	retq   

000000000001fa35 <_ZSt7forwardIN6xaxaxa7Sockets13SocketManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1fa35:	55                   	push   %rbp
   1fa36:	48 89 e5             	mov    %rsp,%rbp
   1fa39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1fa3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fa41:	5d                   	pop    %rbp
   1fa42:	c3                   	retq   

000000000001fa43 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   1fa43:	55                   	push   %rbp
   1fa44:	48 89 e5             	mov    %rsp,%rbp
   1fa47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1fa4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fa4f:	5d                   	pop    %rbp
   1fa50:	c3                   	retq   
   1fa51:	90                   	nop

000000000001fa52 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_>:
           typename _Compare, typename _Alloc>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1fa52:	55                   	push   %rbp
   1fa53:	48 89 e5             	mov    %rsp,%rbp
   1fa56:	41 54                	push   %r12
   1fa58:	53                   	push   %rbx
   1fa59:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   1fa60:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   1fa67:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   1fa6e:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
#else
    _M_insert_unique_(const_iterator __position, const _Val& __v)
#endif
    {
      // end()
      if (__position._M_node == _M_end())
   1fa75:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   1fa7c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fa83:	48 89 c7             	mov    %rax,%rdi
   1fa86:	e8 55 6e ff ff       	callq  168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1fa8b:	48 39 c3             	cmp    %rax,%rbx
   1fa8e:	0f 94 c0             	sete   %al
   1fa91:	84 c0                	test   %al,%al
   1fa93:	0f 84 08 01 00 00    	je     1fba1 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x14f>
	{
	  if (size() > 0
   1fa99:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1faa0:	48 89 c7             	mov    %rax,%rdi
   1faa3:	e8 f8 67 ff ff       	callq  162a0 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv@plt>
   1faa8:	48 85 c0             	test   %rax,%rax
   1faab:	74 56                	je     1fb03 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xb1>
   1faad:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1fab4:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   1fab8:	48 89 d6             	mov    %rdx,%rsi
   1fabb:	48 89 c7             	mov    %rax,%rdi
   1fabe:	e8 9d 69 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   1fac3:	48 89 c3             	mov    %rax,%rbx
   1fac6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1facd:	48 89 c7             	mov    %rax,%rdi
   1fad0:	e8 bb 6b ff ff       	callq  16690 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1fad5:	48 8b 00             	mov    (%rax),%rax
   1fad8:	48 89 c7             	mov    %rax,%rdi
   1fadb:	e8 a0 6f ff ff       	callq  16a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1fae0:	48 89 c1             	mov    %rax,%rcx
   1fae3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1faea:	48 89 da             	mov    %rbx,%rdx
   1faed:	48 89 ce             	mov    %rcx,%rsi
   1faf0:	48 89 c7             	mov    %rax,%rdi
   1faf3:	e8 88 62 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1faf8:	84 c0                	test   %al,%al
   1fafa:	74 07                	je     1fb03 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xb1>
   1fafc:	b8 01 00 00 00       	mov    $0x1,%eax
   1fb01:	eb 05                	jmp    1fb08 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xb6>
   1fb03:	b8 00 00 00 00       	mov    $0x0,%eax
   1fb08:	84 c0                	test   %al,%al
   1fb0a:	74 40                	je     1fb4c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0xfa>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), 
					_KeyOfValue()(__v)))
	    return _M_insert_(0, _M_rightmost(), _GLIBCXX_FORWARD(_Arg, __v));
   1fb0c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fb13:	48 89 c7             	mov    %rax,%rdi
   1fb16:	e8 85 5c ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fb1b:	48 89 c3             	mov    %rax,%rbx
   1fb1e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fb25:	48 89 c7             	mov    %rax,%rdi
   1fb28:	e8 63 6b ff ff       	callq  16690 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1fb2d:	48 8b 10             	mov    (%rax),%rdx
   1fb30:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fb37:	48 89 d9             	mov    %rbx,%rcx
   1fb3a:	be 00 00 00 00       	mov    $0x0,%esi
   1fb3f:	48 89 c7             	mov    %rax,%rdi
   1fb42:	e8 b9 68 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1fb47:	e9 0e 04 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   1fb4c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fb53:	48 89 c7             	mov    %rax,%rdi
   1fb56:	e8 45 5c ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fb5b:	48 89 c2             	mov    %rax,%rdx
   1fb5e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fb65:	48 89 d6             	mov    %rdx,%rsi
   1fb68:	48 89 c7             	mov    %rax,%rdi
   1fb6b:	e8 90 5e ff ff       	callq  15a00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>
   1fb70:	48 89 c1             	mov    %rax,%rcx
   1fb73:	89 d0                	mov    %edx,%eax
   1fb75:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1fb7c:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1fb82:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1fb89:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1fb8d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1fb94:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1fb98:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1fb9c:	e9 b9 03 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	}
      else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
   1fba1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fba8:	48 89 c7             	mov    %rax,%rdi
   1fbab:	e8 d0 6e ff ff       	callq  16a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1fbb0:	48 89 c3             	mov    %rax,%rbx
   1fbb3:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1fbba:	48 8d 45 be          	lea    -0x42(%rbp),%rax
   1fbbe:	48 89 d6             	mov    %rdx,%rsi
   1fbc1:	48 89 c7             	mov    %rax,%rdi
   1fbc4:	e8 97 68 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   1fbc9:	48 89 c1             	mov    %rax,%rcx
   1fbcc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fbd3:	48 89 da             	mov    %rbx,%rdx
   1fbd6:	48 89 ce             	mov    %rcx,%rsi
   1fbd9:	48 89 c7             	mov    %rax,%rdi
   1fbdc:	e8 9f 61 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1fbe1:	84 c0                	test   %al,%al
   1fbe3:	0f 84 98 01 00 00    	je     1fd81 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x32f>
				      _S_key(__position._M_node)))
	{
	  // First, try before...
	  const_iterator __before = __position;
   1fbe9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fbf0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
	  if (__position._M_node == _M_leftmost()) // begin()
   1fbf4:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   1fbfb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fc02:	48 89 c7             	mov    %rax,%rdi
   1fc05:	e8 b6 67 ff ff       	callq  163c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   1fc0a:	48 8b 00             	mov    (%rax),%rax
   1fc0d:	48 39 c3             	cmp    %rax,%rbx
   1fc10:	0f 94 c0             	sete   %al
   1fc13:	84 c0                	test   %al,%al
   1fc15:	74 50                	je     1fc67 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x215>
	    return _M_insert_(_M_leftmost(), _M_leftmost(),
			      _GLIBCXX_FORWARD(_Arg, __v));
   1fc17:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fc1e:	48 89 c7             	mov    %rax,%rdi
   1fc21:	e8 7a 5b ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fc26:	49 89 c4             	mov    %rax,%r12
   1fc29:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fc30:	48 89 c7             	mov    %rax,%rdi
   1fc33:	e8 88 67 ff ff       	callq  163c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   1fc38:	48 8b 18             	mov    (%rax),%rbx
   1fc3b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fc42:	48 89 c7             	mov    %rax,%rdi
   1fc45:	e8 76 67 ff ff       	callq  163c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   1fc4a:	48 8b 30             	mov    (%rax),%rsi
   1fc4d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fc54:	4c 89 e1             	mov    %r12,%rcx
   1fc57:	48 89 da             	mov    %rbx,%rdx
   1fc5a:	48 89 c7             	mov    %rax,%rdi
   1fc5d:	e8 9e 67 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1fc62:	e9 f3 02 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), 
   1fc67:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1fc6e:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1fc72:	48 89 d6             	mov    %rdx,%rsi
   1fc75:	48 89 c7             	mov    %rax,%rdi
   1fc78:	e8 e3 67 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   1fc7d:	48 89 c3             	mov    %rax,%rbx
   1fc80:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1fc84:	48 89 c7             	mov    %rax,%rdi
   1fc87:	e8 e4 60 ff ff       	callq  15d70 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEmmEv@plt>
   1fc8c:	48 8b 00             	mov    (%rax),%rax
   1fc8f:	48 89 c7             	mov    %rax,%rdi
   1fc92:	e8 e9 6d ff ff       	callq  16a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1fc97:	48 89 c1             	mov    %rax,%rcx
   1fc9a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fca1:	48 89 da             	mov    %rbx,%rdx
   1fca4:	48 89 ce             	mov    %rcx,%rsi
   1fca7:	48 89 c7             	mov    %rax,%rdi
   1fcaa:	e8 d1 60 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1fcaf:	84 c0                	test   %al,%al
   1fcb1:	74 79                	je     1fd2c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x2da>
					  _KeyOfValue()(__v)))
	    {
	      if (_S_right(__before._M_node) == 0)
   1fcb3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1fcb7:	48 89 c7             	mov    %rax,%rdi
   1fcba:	e8 41 5c ff ff       	callq  15900 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>
   1fcbf:	48 85 c0             	test   %rax,%rax
   1fcc2:	0f 94 c0             	sete   %al
   1fcc5:	84 c0                	test   %al,%al
   1fcc7:	74 2f                	je     1fcf8 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x2a6>
		return _M_insert_(0, __before._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1fcc9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fcd0:	48 89 c7             	mov    %rax,%rdi
   1fcd3:	e8 c8 5a ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fcd8:	48 89 c1             	mov    %rax,%rcx
   1fcdb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1fcdf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fce6:	be 00 00 00 00       	mov    $0x0,%esi
   1fceb:	48 89 c7             	mov    %rax,%rdi
   1fcee:	e8 0d 67 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1fcf3:	e9 62 02 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	      else
		return _M_insert_(__position._M_node,
				  __position._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1fcf8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fcff:	48 89 c7             	mov    %rax,%rdi
   1fd02:	e8 99 5a ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fd07:	48 89 c1             	mov    %rax,%rcx
   1fd0a:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1fd11:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
   1fd18:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fd1f:	48 89 c7             	mov    %rax,%rdi
   1fd22:	e8 d9 66 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1fd27:	e9 2e 02 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	    }
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   1fd2c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fd33:	48 89 c7             	mov    %rax,%rdi
   1fd36:	e8 65 5a ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fd3b:	48 89 c2             	mov    %rax,%rdx
   1fd3e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fd45:	48 89 d6             	mov    %rdx,%rsi
   1fd48:	48 89 c7             	mov    %rax,%rdi
   1fd4b:	e8 b0 5c ff ff       	callq  15a00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>
   1fd50:	48 89 c1             	mov    %rax,%rcx
   1fd53:	89 d0                	mov    %edx,%eax
   1fd55:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1fd5c:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1fd62:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1fd69:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1fd6d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1fd74:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1fd78:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1fd7c:	e9 d9 01 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	}
      else if (_M_impl._M_key_compare(_S_key(__position._M_node),
   1fd81:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1fd88:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   1fd8c:	48 89 d6             	mov    %rdx,%rsi
   1fd8f:	48 89 c7             	mov    %rax,%rdi
   1fd92:	e8 c9 66 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   1fd97:	48 89 c3             	mov    %rax,%rbx
   1fd9a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fda1:	48 89 c7             	mov    %rax,%rdi
   1fda4:	e8 d7 6c ff ff       	callq  16a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1fda9:	48 89 c1             	mov    %rax,%rcx
   1fdac:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fdb3:	48 89 da             	mov    %rbx,%rdx
   1fdb6:	48 89 ce             	mov    %rcx,%rsi
   1fdb9:	48 89 c7             	mov    %rax,%rdi
   1fdbc:	e8 bf 5f ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1fdc1:	84 c0                	test   %al,%al
   1fdc3:	0f 84 82 01 00 00    	je     1ff4b <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x4f9>
				      _KeyOfValue()(__v)))
	{
	  // ... then try after.
	  const_iterator __after = __position;
   1fdc9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fdd0:	48 89 45 80          	mov    %rax,-0x80(%rbp)
	  if (__position._M_node == _M_rightmost())
   1fdd4:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   1fddb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fde2:	48 89 c7             	mov    %rax,%rdi
   1fde5:	e8 a6 68 ff ff       	callq  16690 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1fdea:	48 8b 00             	mov    (%rax),%rax
   1fded:	48 39 c3             	cmp    %rax,%rbx
   1fdf0:	0f 94 c0             	sete   %al
   1fdf3:	84 c0                	test   %al,%al
   1fdf5:	74 40                	je     1fe37 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x3e5>
	    return _M_insert_(0, _M_rightmost(),
			      _GLIBCXX_FORWARD(_Arg, __v));
   1fdf7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fdfe:	48 89 c7             	mov    %rax,%rdi
   1fe01:	e8 9a 59 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fe06:	48 89 c3             	mov    %rax,%rbx
   1fe09:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fe10:	48 89 c7             	mov    %rax,%rdi
   1fe13:	e8 78 68 ff ff       	callq  16690 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   1fe18:	48 8b 10             	mov    (%rax),%rdx
   1fe1b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fe22:	48 89 d9             	mov    %rbx,%rcx
   1fe25:	be 00 00 00 00       	mov    $0x0,%esi
   1fe2a:	48 89 c7             	mov    %rax,%rdi
   1fe2d:	e8 ce 65 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1fe32:	e9 23 01 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	  else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
   1fe37:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1fe3b:	48 89 c7             	mov    %rax,%rdi
   1fe3e:	e8 ed 63 ff ff       	callq  16230 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEppEv@plt>
   1fe43:	48 8b 00             	mov    (%rax),%rax
   1fe46:	48 89 c7             	mov    %rax,%rdi
   1fe49:	e8 32 6c ff ff       	callq  16a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   1fe4e:	48 89 c3             	mov    %rax,%rbx
   1fe51:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1fe58:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1fe5c:	48 89 d6             	mov    %rdx,%rsi
   1fe5f:	48 89 c7             	mov    %rax,%rdi
   1fe62:	e8 f9 65 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   1fe67:	48 89 c1             	mov    %rax,%rcx
   1fe6a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1fe71:	48 89 da             	mov    %rbx,%rdx
   1fe74:	48 89 ce             	mov    %rcx,%rsi
   1fe77:	48 89 c7             	mov    %rax,%rdi
   1fe7a:	e8 01 5f ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1fe7f:	84 c0                	test   %al,%al
   1fe81:	74 76                	je     1fef9 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x4a7>
					  _S_key((++__after)._M_node)))
	    {
	      if (_S_right(__position._M_node) == 0)
   1fe83:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1fe8a:	48 89 c7             	mov    %rax,%rdi
   1fe8d:	e8 6e 5a ff ff       	callq  15900 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>
   1fe92:	48 85 c0             	test   %rax,%rax
   1fe95:	0f 94 c0             	sete   %al
   1fe98:	84 c0                	test   %al,%al
   1fe9a:	74 32                	je     1fece <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x47c>
		return _M_insert_(0, __position._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1fe9c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fea3:	48 89 c7             	mov    %rax,%rdi
   1fea6:	e8 f5 58 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1feab:	48 89 c1             	mov    %rax,%rcx
   1feae:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1feb5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1febc:	be 00 00 00 00       	mov    $0x0,%esi
   1fec1:	48 89 c7             	mov    %rax,%rdi
   1fec4:	e8 37 65 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1fec9:	e9 8c 00 00 00       	jmpq   1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	      else
		return _M_insert_(__after._M_node, __after._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   1fece:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1fed5:	48 89 c7             	mov    %rax,%rdi
   1fed8:	e8 c3 58 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1fedd:	48 89 c1             	mov    %rax,%rcx
   1fee0:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1fee4:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   1fee8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1feef:	48 89 c7             	mov    %rax,%rdi
   1fef2:	e8 09 65 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   1fef7:	eb 61                	jmp    1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	    }
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   1fef9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1ff00:	48 89 c7             	mov    %rax,%rdi
   1ff03:	e8 98 58 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   1ff08:	48 89 c2             	mov    %rax,%rdx
   1ff0b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1ff12:	48 89 d6             	mov    %rdx,%rsi
   1ff15:	48 89 c7             	mov    %rax,%rdi
   1ff18:	e8 e3 5a ff ff       	callq  15a00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_@plt>
   1ff1d:	48 89 c1             	mov    %rax,%rcx
   1ff20:	89 d0                	mov    %edx,%eax
   1ff22:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   1ff29:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   1ff2f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1ff36:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ff3a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1ff41:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1ff45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ff49:	eb 0f                	jmp    1ff5a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE17_M_insert_unique_IS6_EESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EOT_+0x508>
	}
      else
	// Equivalent keys.
	return __position._M_const_cast();
   1ff4b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1ff52:	48 89 c7             	mov    %rax,%rdi
   1ff55:	e8 a6 5b ff ff       	callq  15b00 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEE13_M_const_castEv@plt>
    }
   1ff5a:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   1ff61:	5b                   	pop    %rbx
   1ff62:	41 5c                	pop    %r12
   1ff64:	5d                   	pop    %rbp
   1ff65:	c3                   	retq   

000000000001ff66 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_>:
           typename _Compare, typename _Alloc>
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator,
	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1ff66:	55                   	push   %rbp
   1ff67:	48 89 e5             	mov    %rsp,%rbp
   1ff6a:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   1ff71:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   1ff78:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    equal_range(const _Key& __k)
    {
      _Link_type __x = _M_begin();
   1ff7f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ff86:	48 89 c7             	mov    %rax,%rdi
   1ff89:	e8 72 6c ff ff       	callq  16c00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   1ff8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _Link_type __y = _M_end();
   1ff92:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ff99:	48 89 c7             	mov    %rax,%rdi
   1ff9c:	e8 3f 69 ff ff       	callq  168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   1ffa1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      while (__x != 0)
   1ffa5:	e9 57 01 00 00       	jmpq   20101 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x19b>
	{
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
   1ffaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ffae:	48 89 c7             	mov    %rax,%rdi
   1ffb1:	e8 ba 5a ff ff       	callq  15a70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   1ffb6:	48 89 c1             	mov    %rax,%rcx
   1ffb9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1ffc0:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
   1ffc7:	48 89 ce             	mov    %rcx,%rsi
   1ffca:	48 89 c7             	mov    %rax,%rdi
   1ffcd:	e8 ae 5d ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   1ffd2:	84 c0                	test   %al,%al
   1ffd4:	74 15                	je     1ffeb <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x85>
	    __x = _S_right(__x);
   1ffd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ffda:	48 89 c7             	mov    %rax,%rdi
   1ffdd:	e8 8e 5f ff ff       	callq  15f70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   1ffe2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1ffe6:	e9 16 01 00 00       	jmpq   20101 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x19b>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
   1ffeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ffef:	48 89 c7             	mov    %rax,%rdi
   1fff2:	e8 79 5a ff ff       	callq  15a70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   1fff7:	48 89 c2             	mov    %rax,%rdx
   1fffa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20001:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   20008:	48 89 ce             	mov    %rcx,%rsi
   2000b:	48 89 c7             	mov    %rax,%rdi
   2000e:	e8 6d 5d ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20013:	84 c0                	test   %al,%al
   20015:	74 1d                	je     20034 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0xce>
	    __y = __x, __x = _S_left(__x);
   20017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2001b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2001f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20023:	48 89 c7             	mov    %rax,%rdi
   20026:	e8 05 6a ff ff       	callq  16a30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   2002b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   2002f:	e9 cd 00 00 00       	jmpq   20101 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x19b>
	  else
	    {
	      _Link_type __xu(__x), __yu(__y);
   20034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20038:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   2003c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20040:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	      __y = __x, __x = _S_left(__x);
   20044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20048:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   2004c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20050:	48 89 c7             	mov    %rax,%rdi
   20053:	e8 d8 69 ff ff       	callq  16a30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   20058:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      __xu = _S_right(__xu);
   2005c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20060:	48 89 c7             	mov    %rax,%rdi
   20063:	e8 08 5f ff ff       	callq  15f70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   20068:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	      return pair<iterator,
		          iterator>(_M_lower_bound(__x, __y, __k),
				    _M_upper_bound(__xu, __yu, __k));
   2006c:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   20073:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20077:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   2007b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   20082:	48 89 c7             	mov    %rax,%rdi
   20085:	e8 f6 57 ff ff       	callq  15880 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>
   2008a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   2008e:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   20095:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20099:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   2009d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   200a4:	48 89 c7             	mov    %rax,%rdi
   200a7:	e8 c4 66 ff ff       	callq  16770 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_@plt>
   200ac:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   200b0:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   200b4:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   200b8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   200bf:	48 89 ce             	mov    %rcx,%rsi
   200c2:	48 89 c7             	mov    %rax,%rdi
   200c5:	e8 76 52 ff ff       	callq  15340 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_@plt>
   200ca:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   200d1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   200d8:	48 89 d6             	mov    %rdx,%rsi
   200db:	48 89 c7             	mov    %rax,%rdi
   200de:	e8 9d 65 ff ff       	callq  16680 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>
   200e3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   200ea:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   200f1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   200f8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   200ff:	eb 76                	jmp    20177 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x211>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    equal_range(const _Key& __k)
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();
      while (__x != 0)
   20101:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20106:	0f 95 c0             	setne  %al
   20109:	84 c0                	test   %al,%al
   2010b:	0f 85 99 fe ff ff    	jne    1ffaa <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11equal_rangeERS1_+0x44>
		          iterator>(_M_lower_bound(__x, __y, __k),
				    _M_upper_bound(__xu, __yu, __k));
	    }
	}
      return pair<iterator, iterator>(iterator(__y),
				      iterator(__y));
   20111:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20115:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   20119:	48 89 d6             	mov    %rdx,%rsi
   2011c:	48 89 c7             	mov    %rax,%rdi
   2011f:	e8 6c 62 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   20124:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20128:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2012c:	48 89 d6             	mov    %rdx,%rsi
   2012f:	48 89 c7             	mov    %rax,%rdi
   20132:	e8 59 62 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   20137:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   2013b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   2013f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   20143:	48 89 ce             	mov    %rcx,%rsi
   20146:	48 89 c7             	mov    %rax,%rdi
   20149:	e8 f2 51 ff ff       	callq  15340 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_@plt>
   2014e:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   20152:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   20156:	48 89 d6             	mov    %rdx,%rsi
   20159:	48 89 c7             	mov    %rax,%rdi
   2015c:	e8 1f 65 ff ff       	callq  16680 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E@plt>
   20161:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20165:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   2016c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20170:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   20177:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2017e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    }
   20185:	c9                   	leaveq 
   20186:	c3                   	retq   
   20187:	90                   	nop

0000000000020188 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_EEOS_IT_T0_E>:
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   20188:	55                   	push   %rbp
   20189:	48 89 e5             	mov    %rsp,%rbp
   2018c:	48 83 ec 10          	sub    $0x10,%rsp
   20190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20194:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   20198:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2019c:	48 89 c7             	mov    %rax,%rdi
   2019f:	e8 7c 58 ff ff       	callq  15a20 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   201a4:	48 89 c2             	mov    %rax,%rdx
   201a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   201ab:	48 8b 12             	mov    (%rdx),%rdx
   201ae:	48 89 10             	mov    %rdx,(%rax)
   201b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   201b5:	48 83 c0 08          	add    $0x8,%rax
   201b9:	48 89 c7             	mov    %rax,%rdi
   201bc:	e8 5f 58 ff ff       	callq  15a20 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   201c1:	48 89 c2             	mov    %rax,%rdx
   201c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   201c8:	48 8b 12             	mov    (%rdx),%rdx
   201cb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   201cf:	c9                   	leaveq 
   201d0:	c3                   	retq   
   201d1:	90                   	nop

00000000000201d2 <_ZNKSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE4sizeEv>:
      bool
      empty() const
      { return _M_impl._M_node_count == 0; }

      size_type
      size() const
   201d2:	55                   	push   %rbp
   201d3:	48 89 e5             	mov    %rsp,%rbp
   201d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   201da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   201de:	48 8b 40 28          	mov    0x28(%rax),%rax
   201e2:	5d                   	pop    %rbp
   201e3:	c3                   	retq   

00000000000201e4 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_ESE_>:

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // DR 130. Associative erase should return an iterator.
      iterator
      erase(const_iterator __first, const_iterator __last)
   201e4:	55                   	push   %rbp
   201e5:	48 89 e5             	mov    %rsp,%rbp
   201e8:	48 83 ec 20          	sub    $0x20,%rsp
   201ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   201f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   201f4:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
      {
	_M_erase_aux(__first, __last);
   201f8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   201fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20204:	48 89 ce             	mov    %rcx,%rsi
   20207:	48 89 c7             	mov    %rax,%rdi
   2020a:	e8 61 66 ff ff       	callq  16870 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_@plt>
	return __last._M_const_cast();
   2020f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   20213:	48 89 c7             	mov    %rax,%rdi
   20216:	e8 e5 58 ff ff       	callq  15b00 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEE13_M_const_castEv@plt>
      }
   2021b:	c9                   	leaveq 
   2021c:	c3                   	retq   
   2021d:	90                   	nop

000000000002021e <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv>:
	return static_cast<_Const_Link_type>
	  (this->_M_impl._M_header._M_parent);
      }

      _Link_type
      _M_end()
   2021e:	55                   	push   %rbp
   2021f:	48 89 e5             	mov    %rsp,%rbp
   20222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(&this->_M_impl._M_header); }
   20226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2022a:	48 83 c0 08          	add    $0x8,%rax
   2022e:	5d                   	pop    %rbp
   2022f:	c3                   	retq   

0000000000020230 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_leftmostEv>:
      _Const_Base_ptr
      _M_root() const
      { return this->_M_impl._M_header._M_parent; }

      _Base_ptr&
      _M_leftmost()
   20230:	55                   	push   %rbp
   20231:	48 89 e5             	mov    %rsp,%rbp
   20234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   20238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2023c:	48 83 c0 18          	add    $0x18,%rax
   20240:	5d                   	pop    %rbp
   20241:	c3                   	retq   

0000000000020242 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_M_rootEv>:

      _Rb_tree_impl<_Compare> _M_impl;

    protected:
      _Base_ptr&
      _M_root()
   20242:	55                   	push   %rbp
   20243:	48 89 e5             	mov    %rsp,%rbp
   20246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_parent; }
   2024a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2024e:	48 83 c0 10          	add    $0x10,%rax
   20252:	5d                   	pop    %rbp
   20253:	c3                   	retq   

0000000000020254 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE12_M_rightmostEv>:
      _Const_Base_ptr
      _M_leftmost() const
      { return this->_M_impl._M_header._M_left; }

      _Base_ptr&
      _M_rightmost()
   20254:	55                   	push   %rbp
   20255:	48 89 e5             	mov    %rsp,%rbp
   20258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   2025c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20260:	48 83 c0 20          	add    $0x20,%rax
   20264:	5d                   	pop    %rbp
   20265:	c3                   	retq   

0000000000020266 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11lower_boundERS1_>:

      size_type
      count(const key_type& __k) const;

      iterator
      lower_bound(const key_type& __k)
   20266:	55                   	push   %rbp
   20267:	48 89 e5             	mov    %rsp,%rbp
   2026a:	53                   	push   %rbx
   2026b:	48 83 ec 18          	sub    $0x18,%rsp
   2026f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20273:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   20277:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2027b:	48 89 c7             	mov    %rax,%rdi
   2027e:	e8 cd 58 ff ff       	callq  15b50 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>
   20283:	48 89 c3             	mov    %rax,%rbx
   20286:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2028a:	48 89 c7             	mov    %rax,%rdi
   2028d:	e8 3e 56 ff ff       	callq  158d0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv@plt>
   20292:	48 89 c6             	mov    %rax,%rsi
   20295:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20299:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2029d:	48 89 d1             	mov    %rdx,%rcx
   202a0:	48 89 da             	mov    %rbx,%rdx
   202a3:	48 89 c7             	mov    %rax,%rdi
   202a6:	e8 b5 54 ff ff       	callq  15760 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_@plt>
   202ab:	48 83 c4 18          	add    $0x18,%rsp
   202af:	5b                   	pop    %rbx
   202b0:	5d                   	pop    %rbp
   202b1:	c3                   	retq   

00000000000202b2 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8key_compEv>:
      _Rb_tree&
      operator=(const _Rb_tree& __x);

      // Accessors.
      _Compare
      key_comp() const
   202b2:	55                   	push   %rbp
   202b3:	48 89 e5             	mov    %rsp,%rbp
   202b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   202ba:	5d                   	pop    %rbp
   202bb:	c3                   	retq   

00000000000202bc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE3endEv>:
	return const_iterator(static_cast<_Const_Link_type>
			      (this->_M_impl._M_header._M_left));
      }

      iterator
      end()
   202bc:	55                   	push   %rbp
   202bd:	48 89 e5             	mov    %rsp,%rbp
   202c0:	48 83 ec 20          	sub    $0x20,%rsp
   202c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(static_cast<_Link_type>(&this->_M_impl._M_header)); }
   202c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   202cc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   202d0:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   202d4:	48 89 d6             	mov    %rdx,%rsi
   202d7:	48 89 c7             	mov    %rax,%rdi
   202da:	e8 b1 5a ff ff       	callq  15d90 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E@plt>
   202df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   202e3:	c9                   	leaveq 
   202e4:	c3                   	retq   

00000000000202e5 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   202e5:	55                   	push   %rbp
   202e6:	48 89 e5             	mov    %rsp,%rbp
   202e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   202ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202f1:	5d                   	pop    %rbp
   202f2:	c3                   	retq   
   202f3:	90                   	nop

00000000000202f4 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_>:
           typename _Compare, typename _Alloc>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   202f4:	55                   	push   %rbp
   202f5:	48 89 e5             	mov    %rsp,%rbp
   202f8:	41 54                	push   %r12
   202fa:	53                   	push   %rbx
   202fb:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   20302:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   20309:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   20310:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
#else
    _M_insert_unique_(const_iterator __position, const _Val& __v)
#endif
    {
      // end()
      if (__position._M_node == _M_end())
   20317:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   2031e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20325:	48 89 c7             	mov    %rax,%rdi
   20328:	e8 23 58 ff ff       	callq  15b50 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>
   2032d:	48 39 c3             	cmp    %rax,%rbx
   20330:	0f 94 c0             	sete   %al
   20333:	84 c0                	test   %al,%al
   20335:	0f 84 08 01 00 00    	je     20443 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x14f>
	{
	  if (size() > 0
   2033b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20342:	48 89 c7             	mov    %rax,%rdi
   20345:	e8 36 5d ff ff       	callq  16080 <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4sizeEv@plt>
   2034a:	48 85 c0             	test   %rax,%rax
   2034d:	74 56                	je     203a5 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0xb1>
   2034f:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   20356:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   2035a:	48 89 d6             	mov    %rdx,%rsi
   2035d:	48 89 c7             	mov    %rax,%rdi
   20360:	e8 9b 66 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   20365:	48 89 c3             	mov    %rax,%rbx
   20368:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2036f:	48 89 c7             	mov    %rax,%rdi
   20372:	e8 e9 5e ff ff       	callq  16260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE12_M_rightmostEv@plt>
   20377:	48 8b 00             	mov    (%rax),%rax
   2037a:	48 89 c7             	mov    %rax,%rdi
   2037d:	e8 fe 51 ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   20382:	48 89 c1             	mov    %rax,%rcx
   20385:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2038c:	48 89 da             	mov    %rbx,%rdx
   2038f:	48 89 ce             	mov    %rcx,%rsi
   20392:	48 89 c7             	mov    %rax,%rdi
   20395:	e8 e6 59 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   2039a:	84 c0                	test   %al,%al
   2039c:	74 07                	je     203a5 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0xb1>
   2039e:	b8 01 00 00 00       	mov    $0x1,%eax
   203a3:	eb 05                	jmp    203aa <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0xb6>
   203a5:	b8 00 00 00 00       	mov    $0x0,%eax
   203aa:	84 c0                	test   %al,%al
   203ac:	74 40                	je     203ee <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0xfa>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), 
					_KeyOfValue()(__v)))
	    return _M_insert_(0, _M_rightmost(), _GLIBCXX_FORWARD(_Arg, __v));
   203ae:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   203b5:	48 89 c7             	mov    %rax,%rdi
   203b8:	e8 63 57 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   203bd:	48 89 c3             	mov    %rax,%rbx
   203c0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   203c7:	48 89 c7             	mov    %rax,%rdi
   203ca:	e8 91 5e ff ff       	callq  16260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE12_M_rightmostEv@plt>
   203cf:	48 8b 10             	mov    (%rax),%rdx
   203d2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   203d9:	48 89 d9             	mov    %rbx,%rcx
   203dc:	be 00 00 00 00       	mov    $0x0,%esi
   203e1:	48 89 c7             	mov    %rax,%rdi
   203e4:	e8 f7 52 ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   203e9:	e9 0e 04 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   203ee:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   203f5:	48 89 c7             	mov    %rax,%rdi
   203f8:	e8 23 57 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   203fd:	48 89 c2             	mov    %rax,%rdx
   20400:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20407:	48 89 d6             	mov    %rdx,%rsi
   2040a:	48 89 c7             	mov    %rax,%rdi
   2040d:	e8 2e 5d ff ff       	callq  16140 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_@plt>
   20412:	48 89 c1             	mov    %rax,%rcx
   20415:	89 d0                	mov    %edx,%eax
   20417:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   2041e:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   20424:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2042b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2042f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   20436:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   2043a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2043e:	e9 b9 03 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	}
      else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
   20443:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2044a:	48 89 c7             	mov    %rax,%rdi
   2044d:	e8 2e 51 ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   20452:	48 89 c3             	mov    %rax,%rbx
   20455:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   2045c:	48 8d 45 be          	lea    -0x42(%rbp),%rax
   20460:	48 89 d6             	mov    %rdx,%rsi
   20463:	48 89 c7             	mov    %rax,%rdi
   20466:	e8 95 65 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   2046b:	48 89 c1             	mov    %rax,%rcx
   2046e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20475:	48 89 da             	mov    %rbx,%rdx
   20478:	48 89 ce             	mov    %rcx,%rsi
   2047b:	48 89 c7             	mov    %rax,%rdi
   2047e:	e8 fd 58 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20483:	84 c0                	test   %al,%al
   20485:	0f 84 98 01 00 00    	je     20623 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x32f>
				      _S_key(__position._M_node)))
	{
	  // First, try before...
	  const_iterator __before = __position;
   2048b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   20492:	48 89 45 90          	mov    %rax,-0x70(%rbp)
	  if (__position._M_node == _M_leftmost()) // begin()
   20496:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   2049d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   204a4:	48 89 c7             	mov    %rax,%rdi
   204a7:	e8 d4 5f ff ff       	callq  16480 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_leftmostEv@plt>
   204ac:	48 8b 00             	mov    (%rax),%rax
   204af:	48 39 c3             	cmp    %rax,%rbx
   204b2:	0f 94 c0             	sete   %al
   204b5:	84 c0                	test   %al,%al
   204b7:	74 50                	je     20509 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x215>
	    return _M_insert_(_M_leftmost(), _M_leftmost(),
			      _GLIBCXX_FORWARD(_Arg, __v));
   204b9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   204c0:	48 89 c7             	mov    %rax,%rdi
   204c3:	e8 58 56 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   204c8:	49 89 c4             	mov    %rax,%r12
   204cb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   204d2:	48 89 c7             	mov    %rax,%rdi
   204d5:	e8 a6 5f ff ff       	callq  16480 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_leftmostEv@plt>
   204da:	48 8b 18             	mov    (%rax),%rbx
   204dd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   204e4:	48 89 c7             	mov    %rax,%rdi
   204e7:	e8 94 5f ff ff       	callq  16480 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_leftmostEv@plt>
   204ec:	48 8b 30             	mov    (%rax),%rsi
   204ef:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   204f6:	4c 89 e1             	mov    %r12,%rcx
   204f9:	48 89 da             	mov    %rbx,%rdx
   204fc:	48 89 c7             	mov    %rax,%rdi
   204ff:	e8 dc 51 ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   20504:	e9 f3 02 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), 
   20509:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   20510:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   20514:	48 89 d6             	mov    %rdx,%rsi
   20517:	48 89 c7             	mov    %rax,%rdi
   2051a:	e8 e1 64 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   2051f:	48 89 c3             	mov    %rax,%rbx
   20522:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   20526:	48 89 c7             	mov    %rax,%rdi
   20529:	e8 d2 51 ff ff       	callq  15700 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEmmEv@plt>
   2052e:	48 8b 00             	mov    (%rax),%rax
   20531:	48 89 c7             	mov    %rax,%rdi
   20534:	e8 47 50 ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   20539:	48 89 c1             	mov    %rax,%rcx
   2053c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20543:	48 89 da             	mov    %rbx,%rdx
   20546:	48 89 ce             	mov    %rcx,%rsi
   20549:	48 89 c7             	mov    %rax,%rdi
   2054c:	e8 2f 58 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20551:	84 c0                	test   %al,%al
   20553:	74 79                	je     205ce <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x2da>
					  _KeyOfValue()(__v)))
	    {
	      if (_S_right(__before._M_node) == 0)
   20555:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   20559:	48 89 c7             	mov    %rax,%rdi
   2055c:	e8 ff 4c ff ff       	callq  15260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>
   20561:	48 85 c0             	test   %rax,%rax
   20564:	0f 94 c0             	sete   %al
   20567:	84 c0                	test   %al,%al
   20569:	74 2f                	je     2059a <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x2a6>
		return _M_insert_(0, __before._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   2056b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   20572:	48 89 c7             	mov    %rax,%rdi
   20575:	e8 a6 55 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   2057a:	48 89 c1             	mov    %rax,%rcx
   2057d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   20581:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20588:	be 00 00 00 00       	mov    $0x0,%esi
   2058d:	48 89 c7             	mov    %rax,%rdi
   20590:	e8 4b 51 ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   20595:	e9 62 02 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	      else
		return _M_insert_(__position._M_node,
				  __position._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   2059a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   205a1:	48 89 c7             	mov    %rax,%rdi
   205a4:	e8 77 55 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   205a9:	48 89 c1             	mov    %rax,%rcx
   205ac:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   205b3:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
   205ba:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   205c1:	48 89 c7             	mov    %rax,%rdi
   205c4:	e8 17 51 ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   205c9:	e9 2e 02 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	    }
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   205ce:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   205d5:	48 89 c7             	mov    %rax,%rdi
   205d8:	e8 43 55 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   205dd:	48 89 c2             	mov    %rax,%rdx
   205e0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   205e7:	48 89 d6             	mov    %rdx,%rsi
   205ea:	48 89 c7             	mov    %rax,%rdi
   205ed:	e8 4e 5b ff ff       	callq  16140 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_@plt>
   205f2:	48 89 c1             	mov    %rax,%rcx
   205f5:	89 d0                	mov    %edx,%eax
   205f7:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   205fe:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   20604:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   2060b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   2060f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   20616:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   2061a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2061e:	e9 d9 01 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	}
      else if (_M_impl._M_key_compare(_S_key(__position._M_node),
   20623:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   2062a:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   2062e:	48 89 d6             	mov    %rdx,%rsi
   20631:	48 89 c7             	mov    %rax,%rdi
   20634:	e8 c7 63 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   20639:	48 89 c3             	mov    %rax,%rbx
   2063c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   20643:	48 89 c7             	mov    %rax,%rdi
   20646:	e8 35 4f ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   2064b:	48 89 c1             	mov    %rax,%rcx
   2064e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20655:	48 89 da             	mov    %rbx,%rdx
   20658:	48 89 ce             	mov    %rcx,%rsi
   2065b:	48 89 c7             	mov    %rax,%rdi
   2065e:	e8 1d 57 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20663:	84 c0                	test   %al,%al
   20665:	0f 84 82 01 00 00    	je     207ed <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x4f9>
				      _KeyOfValue()(__v)))
	{
	  // ... then try after.
	  const_iterator __after = __position;
   2066b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   20672:	48 89 45 80          	mov    %rax,-0x80(%rbp)
	  if (__position._M_node == _M_rightmost())
   20676:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
   2067d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20684:	48 89 c7             	mov    %rax,%rdi
   20687:	e8 d4 5b ff ff       	callq  16260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE12_M_rightmostEv@plt>
   2068c:	48 8b 00             	mov    (%rax),%rax
   2068f:	48 39 c3             	cmp    %rax,%rbx
   20692:	0f 94 c0             	sete   %al
   20695:	84 c0                	test   %al,%al
   20697:	74 40                	je     206d9 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x3e5>
	    return _M_insert_(0, _M_rightmost(),
			      _GLIBCXX_FORWARD(_Arg, __v));
   20699:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   206a0:	48 89 c7             	mov    %rax,%rdi
   206a3:	e8 78 54 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   206a8:	48 89 c3             	mov    %rax,%rbx
   206ab:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   206b2:	48 89 c7             	mov    %rax,%rdi
   206b5:	e8 a6 5b ff ff       	callq  16260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE12_M_rightmostEv@plt>
   206ba:	48 8b 10             	mov    (%rax),%rdx
   206bd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   206c4:	48 89 d9             	mov    %rbx,%rcx
   206c7:	be 00 00 00 00       	mov    $0x0,%esi
   206cc:	48 89 c7             	mov    %rax,%rdi
   206cf:	e8 0c 50 ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   206d4:	e9 23 01 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	  else if (_M_impl._M_key_compare(_KeyOfValue()(__v),
   206d9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   206dd:	48 89 c7             	mov    %rax,%rdi
   206e0:	e8 5b 59 ff ff       	callq  16040 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEppEv@plt>
   206e5:	48 8b 00             	mov    (%rax),%rax
   206e8:	48 89 c7             	mov    %rax,%rdi
   206eb:	e8 90 4e ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   206f0:	48 89 c3             	mov    %rax,%rbx
   206f3:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   206fa:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   206fe:	48 89 d6             	mov    %rdx,%rsi
   20701:	48 89 c7             	mov    %rax,%rdi
   20704:	e8 f7 62 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   20709:	48 89 c1             	mov    %rax,%rcx
   2070c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20713:	48 89 da             	mov    %rbx,%rdx
   20716:	48 89 ce             	mov    %rcx,%rsi
   20719:	48 89 c7             	mov    %rax,%rdi
   2071c:	e8 5f 56 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20721:	84 c0                	test   %al,%al
   20723:	74 76                	je     2079b <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x4a7>
					  _S_key((++__after)._M_node)))
	    {
	      if (_S_right(__position._M_node) == 0)
   20725:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2072c:	48 89 c7             	mov    %rax,%rdi
   2072f:	e8 2c 4b ff ff       	callq  15260 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base@plt>
   20734:	48 85 c0             	test   %rax,%rax
   20737:	0f 94 c0             	sete   %al
   2073a:	84 c0                	test   %al,%al
   2073c:	74 32                	je     20770 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x47c>
		return _M_insert_(0, __position._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   2073e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   20745:	48 89 c7             	mov    %rax,%rdi
   20748:	e8 d3 53 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   2074d:	48 89 c1             	mov    %rax,%rcx
   20750:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   20757:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2075e:	be 00 00 00 00       	mov    $0x0,%esi
   20763:	48 89 c7             	mov    %rax,%rdi
   20766:	e8 75 4f ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   2076b:	e9 8c 00 00 00       	jmpq   207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	      else
		return _M_insert_(__after._M_node, __after._M_node,
				  _GLIBCXX_FORWARD(_Arg, __v));
   20770:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   20777:	48 89 c7             	mov    %rax,%rdi
   2077a:	e8 a1 53 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   2077f:	48 89 c1             	mov    %rax,%rcx
   20782:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   20786:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   2078a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20791:	48 89 c7             	mov    %rax,%rdi
   20794:	e8 47 4f ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   20799:	eb 61                	jmp    207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	    }
	  else
	    return _M_insert_unique(_GLIBCXX_FORWARD(_Arg, __v)).first;
   2079b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   207a2:	48 89 c7             	mov    %rax,%rdi
   207a5:	e8 76 53 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   207aa:	48 89 c2             	mov    %rax,%rdx
   207ad:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   207b4:	48 89 d6             	mov    %rdx,%rsi
   207b7:	48 89 c7             	mov    %rax,%rdi
   207ba:	e8 81 59 ff ff       	callq  16140 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_@plt>
   207bf:	48 89 c1             	mov    %rax,%rcx
   207c2:	89 d0                	mov    %edx,%eax
   207c4:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
   207cb:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   207d1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   207d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   207dc:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   207e3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   207e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   207eb:	eb 0f                	jmp    207fc <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_insert_unique_IS2_EESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_+0x508>
	}
      else
	// Equivalent keys.
	return __position._M_const_cast();
   207ed:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   207f4:	48 89 c7             	mov    %rax,%rdi
   207f7:	e8 54 63 ff ff       	callq  16b50 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKibEE13_M_const_castEv@plt>
    }
   207fc:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   20803:	5b                   	pop    %rbx
   20804:	41 5c                	pop    %r12
   20806:	5d                   	pop    %rbp
   20807:	c3                   	retq   

0000000000020808 <_ZNSaISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEC1Ev>:

      template<typename _Tp1>
        struct rebind
        { typedef allocator<_Tp1> other; };

      allocator() throw() { }
   20808:	55                   	push   %rbp
   20809:	48 89 e5             	mov    %rsp,%rbp
   2080c:	48 83 ec 10          	sub    $0x10,%rsp
   20810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20818:	48 89 c7             	mov    %rax,%rdi
   2081b:	e8 70 4d ff ff       	callq  15590 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEC2Ev@plt>
   20820:	c9                   	leaveq 
   20821:	c3                   	retq   

0000000000020822 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE13_Rb_tree_implISA_Lb1EE13_M_initializeEv>:
	    _M_node_count(0)
	  { _M_initialize(); }

	private:
	  void
	  _M_initialize()
   20822:	55                   	push   %rbp
   20823:	48 89 e5             	mov    %rsp,%rbp
   20826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  {
	    this->_M_header._M_color = _S_red;
   2082a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2082e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
	    this->_M_header._M_parent = 0;
   20835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20839:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   20840:	00 
	    this->_M_header._M_left = &this->_M_header;
   20841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20845:	48 8d 50 08          	lea    0x8(%rax),%rdx
   20849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2084d:	48 89 50 18          	mov    %rdx,0x18(%rax)
	    this->_M_header._M_right = &this->_M_header;
   20851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20855:	48 8d 50 08          	lea    0x8(%rax),%rdx
   20859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2085d:	48 89 50 20          	mov    %rdx,0x20(%rax)
	  }	    
   20861:	5d                   	pop    %rbp
   20862:	c3                   	retq   
   20863:	90                   	nop

0000000000020864 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv>:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

      _Node_allocator&
      _M_get_Node_allocator()
   20864:	55                   	push   %rbp
   20865:	48 89 e5             	mov    %rsp,%rbp
   20868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Node_allocator*>(&this->_M_impl); }
   2086c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20870:	5d                   	pop    %rbp
   20871:	c3                   	retq   

0000000000020872 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEED1Ev>:
      return __x;
    }
  };

  template<typename _Val>
    struct _Rb_tree_node : public _Rb_tree_node_base
   20872:	55                   	push   %rbp
   20873:	48 89 e5             	mov    %rsp,%rbp
   20876:	48 83 ec 10          	sub    $0x10,%rsp
   2087a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2087e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20882:	48 83 c0 20          	add    $0x20,%rax
   20886:	48 89 c7             	mov    %rax,%rdi
   20889:	e8 b2 56 ff ff       	callq  15f40 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEED1Ev@plt>
   2088e:	c9                   	leaveq 
   2088f:	c3                   	retq   

0000000000020890 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE7destroyEPS9_>:
        construct(pointer __p, _Args&&... __args)
	{ ::new((void *)__p) _Tp(std::forward<_Args>(__args)...); }
#endif

      void 
      destroy(pointer __p) { __p->~_Tp(); }
   20890:	55                   	push   %rbp
   20891:	48 89 e5             	mov    %rsp,%rbp
   20894:	48 83 ec 10          	sub    $0x10,%rsp
   20898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2089c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   208a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   208a4:	48 89 c7             	mov    %rax,%rdi
   208a7:	e8 d4 4a ff ff       	callq  15380 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEED1Ev@plt>
   208ac:	c9                   	leaveq 
   208ad:	c3                   	retq   

00000000000208ae <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E>:
      _Link_type
      _M_get_node()
      { return _M_impl._Node_allocator::allocate(1); }

      void
      _M_put_node(_Link_type __p)
   208ae:	55                   	push   %rbp
   208af:	48 89 e5             	mov    %rsp,%rbp
   208b2:	48 83 ec 10          	sub    $0x10,%rsp
   208b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   208ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_impl._Node_allocator::deallocate(__p, 1); }
   208be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   208c2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   208c6:	ba 01 00 00 00       	mov    $0x1,%edx
   208cb:	48 89 ce             	mov    %rcx,%rsi
   208ce:	48 89 c7             	mov    %rax,%rdi
   208d1:	e8 5a 4a ff ff       	callq  15330 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE10deallocateEPS9_m@plt>
   208d6:	c9                   	leaveq 
   208d7:	c3                   	retq   

00000000000208d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKibEEEC1Ev>:
   208d8:	55                   	push   %rbp
   208d9:	48 89 e5             	mov    %rsp,%rbp
   208dc:	48 83 ec 10          	sub    $0x10,%rsp
   208e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   208e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   208e8:	48 89 c7             	mov    %rax,%rdi
   208eb:	e8 a0 57 ff ff       	callq  16090 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEEC2Ev@plt>
   208f0:	c9                   	leaveq 
   208f1:	c3                   	retq   

00000000000208f2 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv>:
	    _M_node_count(0)
	  { _M_initialize(); }

	private:
	  void
	  _M_initialize()
   208f2:	55                   	push   %rbp
   208f3:	48 89 e5             	mov    %rsp,%rbp
   208f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  {
	    this->_M_header._M_color = _S_red;
   208fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   208fe:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
	    this->_M_header._M_parent = 0;
   20905:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20909:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   20910:	00 
	    this->_M_header._M_left = &this->_M_header;
   20911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20915:	48 8d 50 08          	lea    0x8(%rax),%rdx
   20919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2091d:	48 89 50 18          	mov    %rdx,0x18(%rax)
	    this->_M_header._M_right = &this->_M_header;
   20921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20925:	48 8d 50 08          	lea    0x8(%rax),%rdx
   20929:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2092d:	48 89 50 20          	mov    %rdx,0x20(%rax)
	  }	    
   20931:	5d                   	pop    %rbp
   20932:	c3                   	retq   
   20933:	90                   	nop

0000000000020934 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE21_M_get_Node_allocatorEv>:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

      _Node_allocator&
      _M_get_Node_allocator()
   20934:	55                   	push   %rbp
   20935:	48 89 e5             	mov    %rsp,%rbp
   20938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Node_allocator*>(&this->_M_impl); }
   2093c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20940:	5d                   	pop    %rbp
   20941:	c3                   	retq   

0000000000020942 <_ZNSt13_Rb_tree_nodeISt4pairIKibEED1Ev>:
      return __x;
    }
  };

  template<typename _Val>
    struct _Rb_tree_node : public _Rb_tree_node_base
   20942:	55                   	push   %rbp
   20943:	48 89 e5             	mov    %rsp,%rbp
   20946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2094a:	5d                   	pop    %rbp
   2094b:	c3                   	retq   

000000000002094c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE7destroyEPS5_>:
   2094c:	55                   	push   %rbp
   2094d:	48 89 e5             	mov    %rsp,%rbp
   20950:	48 83 ec 10          	sub    $0x10,%rsp
   20954:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20958:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2095c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20960:	48 89 c7             	mov    %rax,%rdi
   20963:	e8 f8 54 ff ff       	callq  15e60 <_ZNSt13_Rb_tree_nodeISt4pairIKibEED1Ev@plt>
   20968:	c9                   	leaveq 
   20969:	c3                   	retq   

000000000002096a <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E>:
      _Link_type
      _M_get_node()
      { return _M_impl._Node_allocator::allocate(1); }

      void
      _M_put_node(_Link_type __p)
   2096a:	55                   	push   %rbp
   2096b:	48 89 e5             	mov    %rsp,%rbp
   2096e:	48 83 ec 10          	sub    $0x10,%rsp
   20972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20976:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_impl._Node_allocator::deallocate(__p, 1); }
   2097a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2097e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20982:	ba 01 00 00 00       	mov    $0x1,%edx
   20987:	48 89 ce             	mov    %rcx,%rsi
   2098a:	48 89 c7             	mov    %rax,%rdi
   2098d:	e8 de 5b ff ff       	callq  16570 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE10deallocateEPS5_m@plt>
   20992:	c9                   	leaveq 
   20993:	c3                   	retq   

0000000000020994 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E>:
      static const_reference
      _S_value(_Const_Link_type __x)
      { return __x->_M_value_field; }

      static const _Key&
      _S_key(_Const_Link_type __x)
   20994:	55                   	push   %rbp
   20995:	48 89 e5             	mov    %rsp,%rbp
   20998:	48 83 ec 20          	sub    $0x20,%rsp
   2099c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _KeyOfValue()(_S_value(__x)); }
   209a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   209a4:	48 89 c7             	mov    %rax,%rdi
   209a7:	e8 24 56 ff ff       	callq  15fd0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E@plt>
   209ac:	48 89 c2             	mov    %rax,%rdx
   209af:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   209b3:	48 89 d6             	mov    %rdx,%rsi
   209b6:	48 89 c7             	mov    %rax,%rdi
   209b9:	e8 92 57 ff ff       	callq  16150 <_ZNKSt10_Select1stISt4pairIKibEEclERKS2_@plt>
   209be:	c9                   	leaveq 
   209bf:	c3                   	retq   

00000000000209c0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      static _Link_type
      _S_left(_Base_ptr __x)
      { return static_cast<_Link_type>(__x->_M_left); }

      static _Const_Link_type
      _S_left(_Const_Base_ptr __x)
   209c0:	55                   	push   %rbp
   209c1:	48 89 e5             	mov    %rsp,%rbp
   209c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(__x->_M_left); }
   209c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   209cc:	48 8b 40 10          	mov    0x10(%rax),%rax
   209d0:	5d                   	pop    %rbp
   209d1:	c3                   	retq   

00000000000209d2 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      static _Link_type
      _S_right(_Base_ptr __x)
      { return static_cast<_Link_type>(__x->_M_right); }

      static _Const_Link_type
      _S_right(_Const_Base_ptr __x)
   209d2:	55                   	push   %rbp
   209d3:	48 89 e5             	mov    %rsp,%rbp
   209d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(__x->_M_right); }
   209da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   209de:	48 8b 40 18          	mov    0x18(%rax),%rax
   209e2:	5d                   	pop    %rbp
   209e3:	c3                   	retq   

00000000000209e4 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base>:

      static const_reference
      _S_value(_Const_Base_ptr __x)
   209e4:	55                   	push   %rbp
   209e5:	48 89 e5             	mov    %rsp,%rbp
   209e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(__x)->_M_value_field; }
   209ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   209f0:	48 83 c0 20          	add    $0x20,%rax
   209f4:	5d                   	pop    %rbp
   209f5:	c3                   	retq   

00000000000209f6 <_ZNKSt10_Select1stISt4pairIKibEEclERKS2_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   209f6:	55                   	push   %rbp
   209f7:	48 89 e5             	mov    %rsp,%rbp
   209fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   209fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   20a02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20a06:	5d                   	pop    %rbp
   20a07:	c3                   	retq   

0000000000020a08 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv>:
	return static_cast<_Const_Link_type>
	  (this->_M_impl._M_header._M_parent);
      }

      _Link_type
      _M_end()
   20a08:	55                   	push   %rbp
   20a09:	48 89 e5             	mov    %rsp,%rbp
   20a0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(&this->_M_impl._M_header); }
   20a10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20a14:	48 83 c0 08          	add    $0x8,%rax
   20a18:	5d                   	pop    %rbp
   20a19:	c3                   	retq   

0000000000020a1a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   20a1a:	55                   	push   %rbp
   20a1b:	48 89 e5             	mov    %rsp,%rbp
   20a1e:	48 83 ec 30          	sub    $0x30,%rsp
   20a22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20a26:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   20a2a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   20a2e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    _M_lower_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   20a32:	eb 53                	jmp    20a87 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6d>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   20a34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20a38:	48 89 c7             	mov    %rax,%rdi
   20a3b:	e8 30 50 ff ff       	callq  15a70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   20a40:	48 89 c1             	mov    %rax,%rcx
   20a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20a47:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   20a4b:	48 89 ce             	mov    %rcx,%rsi
   20a4e:	48 89 c7             	mov    %rax,%rdi
   20a51:	e8 2a 53 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20a56:	83 f0 01             	xor    $0x1,%eax
   20a59:	84 c0                	test   %al,%al
   20a5b:	74 1a                	je     20a77 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x5d>
	  __y = __x, __x = _S_left(__x);
   20a5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20a61:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   20a65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20a69:	48 89 c7             	mov    %rax,%rdi
   20a6c:	e8 bf 5f ff ff       	callq  16a30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   20a71:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   20a75:	eb 10                	jmp    20a87 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6d>
	else
	  __x = _S_right(__x);
   20a77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20a7b:	48 89 c7             	mov    %rax,%rdi
   20a7e:	e8 ed 54 ff ff       	callq  15f70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   20a83:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_lower_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   20a87:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   20a8c:	0f 95 c0             	setne  %al
   20a8f:	84 c0                	test   %al,%al
   20a91:	75 a1                	jne    20a34 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x1a>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
	  __y = __x, __x = _S_left(__x);
	else
	  __x = _S_right(__x);
      return iterator(__y);
   20a93:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   20a97:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   20a9b:	48 89 d6             	mov    %rdx,%rsi
   20a9e:	48 89 c7             	mov    %rax,%rdi
   20aa1:	e8 ea 58 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   20aa6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    }
   20aaa:	c9                   	leaveq 
   20aab:	c3                   	retq   

0000000000020aac <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E>:

      _Rb_tree_iterator()
      : _M_node() { }

      explicit
      _Rb_tree_iterator(_Link_type __x)
   20aac:	55                   	push   %rbp
   20aad:	48 89 e5             	mov    %rsp,%rbp
   20ab0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20ab4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   20ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20abc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20ac0:	48 89 10             	mov    %rdx,(%rax)
   20ac3:	5d                   	pop    %rbp
   20ac4:	c3                   	retq   
   20ac5:	90                   	nop

0000000000020ac6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv>:
      _Const_Base_ptr
      _M_leftmost() const
      { return this->_M_impl._M_header._M_left; }

      _Base_ptr&
      _M_rightmost()
   20ac6:	55                   	push   %rbp
   20ac7:	48 89 e5             	mov    %rsp,%rbp
   20aca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   20ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20ad2:	48 83 c0 20          	add    $0x20,%rax
   20ad6:	5d                   	pop    %rbp
   20ad7:	c3                   	retq   

0000000000020ad8 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      static const_reference
      _S_value(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x)->_M_value_field; }

      static const _Key&
      _S_key(_Const_Base_ptr __x)
   20ad8:	55                   	push   %rbp
   20ad9:	48 89 e5             	mov    %rsp,%rbp
   20adc:	48 83 ec 20          	sub    $0x20,%rsp
   20ae0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _KeyOfValue()(_S_value(__x)); }
   20ae4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20ae8:	48 89 c7             	mov    %rax,%rdi
   20aeb:	e8 60 5c ff ff       	callq  16750 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt18_Rb_tree_node_base@plt>
   20af0:	48 89 c2             	mov    %rax,%rdx
   20af3:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   20af7:	48 89 d6             	mov    %rdx,%rsi
   20afa:	48 89 c7             	mov    %rax,%rdi
   20afd:	e8 2e 5b ff ff       	callq  16630 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERKS6_@plt>
   20b02:	c9                   	leaveq 
   20b03:	c3                   	retq   

0000000000020b04 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_>:
  template<typename _Pair>
    struct _Select1st : public unary_function<_Pair,
					      typename _Pair::first_type>
    {
      typename _Pair::first_type&
      operator()(_Pair& __x) const
   20b04:	55                   	push   %rbp
   20b05:	48 89 e5             	mov    %rsp,%rbp
   20b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20b0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   20b10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20b14:	5d                   	pop    %rbp
   20b15:	c3                   	retq   

0000000000020b16 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_>:
           typename _Compare, typename _Alloc>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   20b16:	55                   	push   %rbp
   20b17:	48 89 e5             	mov    %rsp,%rbp
   20b1a:	53                   	push   %rbx
   20b1b:	48 83 ec 58          	sub    $0x58,%rsp
   20b1f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   20b23:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   20b27:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   20b2b:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    _M_insert_(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)
#endif
    {
      bool __insert_left = (__x != 0 || __p == _M_end()
			    || _M_impl._M_key_compare(_KeyOfValue()(__v), 
						      _S_key(__p)));
   20b2f:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   20b34:	75 4d                	jne    20b83 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x6d>
   20b36:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20b3a:	48 89 c7             	mov    %rax,%rdi
   20b3d:	e8 9e 5d ff ff       	callq  168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   20b42:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   20b46:	74 3b                	je     20b83 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x6d>
   20b48:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20b4c:	48 89 c7             	mov    %rax,%rdi
   20b4f:	e8 2c 5f ff ff       	callq  16a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   20b54:	48 89 c3             	mov    %rax,%rbx
   20b57:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   20b5b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   20b5f:	48 89 d6             	mov    %rdx,%rsi
   20b62:	48 89 c7             	mov    %rax,%rdi
   20b65:	e8 f6 58 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   20b6a:	48 89 c1             	mov    %rax,%rcx
   20b6d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20b71:	48 89 da             	mov    %rbx,%rdx
   20b74:	48 89 ce             	mov    %rcx,%rsi
   20b77:	48 89 c7             	mov    %rax,%rdi
   20b7a:	e8 01 52 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20b7f:	84 c0                	test   %al,%al
   20b81:	74 07                	je     20b8a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x74>
   20b83:	b8 01 00 00 00       	mov    $0x1,%eax
   20b88:	eb 05                	jmp    20b8f <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_+0x79>
   20b8a:	b8 00 00 00 00       	mov    $0x0,%eax
   20b8f:	88 45 ef             	mov    %al,-0x11(%rbp)

      _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
   20b92:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   20b96:	48 89 c7             	mov    %rax,%rdi
   20b99:	e8 02 4c ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   20b9e:	48 89 c2             	mov    %rax,%rdx
   20ba1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20ba5:	48 89 d6             	mov    %rdx,%rsi
   20ba8:	48 89 c7             	mov    %rax,%rdi
   20bab:	e8 40 60 ff ff       	callq  16bf0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_create_nodeIIS6_EEEPSt13_Rb_tree_nodeIS6_EDpOT_@plt>
   20bb0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

      _Rb_tree_insert_and_rebalance(__insert_left, __z,
   20bb4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20bb8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   20bbc:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   20bc0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   20bc4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   20bc8:	89 c7                	mov    %eax,%edi
   20bca:	e8 41 58 ff ff       	callq  16410 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
				    const_cast<_Base_ptr>(__p),  
				    this->_M_impl._M_header);
      ++_M_impl._M_node_count;
   20bcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20bd3:	48 8b 40 28          	mov    0x28(%rax),%rax
   20bd7:	48 8d 50 01          	lea    0x1(%rax),%rdx
   20bdb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20bdf:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   20be3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20be7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   20beb:	48 89 d6             	mov    %rdx,%rsi
   20bee:	48 89 c7             	mov    %rax,%rdi
   20bf1:	e8 9a 57 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   20bf6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    }
   20bfa:	48 83 c4 58          	add    $0x58,%rsp
   20bfe:	5b                   	pop    %rbx
   20bff:	5d                   	pop    %rbp
   20c00:	c3                   	retq   
   20c01:	90                   	nop

0000000000020c02 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_>:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator, bool>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   20c02:	55                   	push   %rbp
   20c03:	48 89 e5             	mov    %rsp,%rbp
   20c06:	53                   	push   %rbx
   20c07:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   20c0e:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   20c15:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    _M_insert_unique(_Arg&& __v)
#else
    _M_insert_unique(const _Val& __v)
#endif
    {
      _Link_type __x = _M_begin();
   20c1c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20c23:	48 89 c7             	mov    %rax,%rdi
   20c26:	e8 d5 5f ff ff       	callq  16c00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   20c2b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      _Link_type __y = _M_end();
   20c2f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20c36:	48 89 c7             	mov    %rax,%rdi
   20c39:	e8 a2 5c ff ff       	callq  168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   20c3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      bool __comp = true;
   20c42:	c6 45 df 01          	movb   $0x1,-0x21(%rbp)
      while (__x != 0)
   20c46:	eb 6f                	jmp    20cb7 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0xb5>
	{
	  __y = __x;
   20c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  __comp = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x));
   20c50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c54:	48 89 c7             	mov    %rax,%rdi
   20c57:	e8 14 4e ff ff       	callq  15a70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   20c5c:	48 89 c3             	mov    %rax,%rbx
   20c5f:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   20c66:	48 8d 85 0f ff ff ff 	lea    -0xf1(%rbp),%rax
   20c6d:	48 89 d6             	mov    %rdx,%rsi
   20c70:	48 89 c7             	mov    %rax,%rdi
   20c73:	e8 e8 57 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   20c78:	48 89 c1             	mov    %rax,%rcx
   20c7b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20c82:	48 89 da             	mov    %rbx,%rdx
   20c85:	48 89 ce             	mov    %rcx,%rsi
   20c88:	48 89 c7             	mov    %rax,%rdi
   20c8b:	e8 f0 50 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20c90:	88 45 df             	mov    %al,-0x21(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   20c93:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
   20c97:	74 0e                	je     20ca7 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0xa5>
   20c99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c9d:	48 89 c7             	mov    %rax,%rdi
   20ca0:	e8 8b 5d ff ff       	callq  16a30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   20ca5:	eb 0c                	jmp    20cb3 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0xb1>
   20ca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cab:	48 89 c7             	mov    %rax,%rdi
   20cae:	e8 bd 52 ff ff       	callq  15f70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   20cb3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
#endif
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();
      bool __comp = true;
      while (__x != 0)
   20cb7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   20cbc:	0f 95 c0             	setne  %al
   20cbf:	84 c0                	test   %al,%al
   20cc1:	75 85                	jne    20c48 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x46>
	{
	  __y = __x;
	  __comp = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x));
	  __x = __comp ? _S_left(__x) : _S_right(__x);
	}
      iterator __j = iterator(__y);
   20cc3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20cc7:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   20cce:	48 89 d6             	mov    %rdx,%rsi
   20cd1:	48 89 c7             	mov    %rax,%rdi
   20cd4:	e8 b7 56 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
      if (__comp)
   20cd9:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
   20cdd:	0f 84 d7 00 00 00    	je     20dba <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x1b8>
	{
	  if (__j == begin())
   20ce3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20cea:	48 89 c7             	mov    %rax,%rdi
   20ced:	e8 3e 45 ff ff       	callq  15230 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv@plt>
   20cf2:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   20cf9:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   20d00:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   20d07:	48 89 d6             	mov    %rdx,%rsi
   20d0a:	48 89 c7             	mov    %rax,%rdi
   20d0d:	e8 4e 5b ff ff       	callq  16860 <_ZNKSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_@plt>
   20d12:	84 c0                	test   %al,%al
   20d14:	0f 84 91 00 00 00    	je     20dab <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x1a9>
	    return pair<iterator, bool>
	      (_M_insert_(__x, __y, _GLIBCXX_FORWARD(_Arg, __v)), true);
   20d1a:	c6 85 5f ff ff ff 01 	movb   $0x1,-0xa1(%rbp)
   20d21:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   20d28:	48 89 c7             	mov    %rax,%rdi
   20d2b:	e8 70 4a ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   20d30:	48 89 c1             	mov    %rax,%rcx
   20d33:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20d37:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   20d3b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20d42:	48 89 c7             	mov    %rax,%rdi
   20d45:	e8 b6 56 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   20d4a:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   20d51:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
   20d58:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
   20d5f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   20d66:	48 89 ce             	mov    %rcx,%rsi
   20d69:	48 89 c7             	mov    %rax,%rdi
   20d6c:	e8 ff 5d ff ff       	callq  16b70 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_@plt>
   20d71:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
   20d78:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   20d7f:	48 89 d6             	mov    %rdx,%rsi
   20d82:	48 89 c7             	mov    %rax,%rdi
   20d85:	e8 46 4c ff ff       	callq  159d0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>
   20d8a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   20d91:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   20d98:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   20d9f:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   20da6:	e9 19 01 00 00       	jmpq   20ec4 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x2c2>
	  else
	    --__j;
   20dab:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   20db2:	48 89 c7             	mov    %rax,%rdi
   20db5:	e8 a6 4c ff ff       	callq  15a60 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEmmEv@plt>
	}
      if (_M_impl._M_key_compare(_S_key(__j._M_node), _KeyOfValue()(__v)))
   20dba:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   20dc1:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   20dc8:	48 89 d6             	mov    %rdx,%rsi
   20dcb:	48 89 c7             	mov    %rax,%rdi
   20dce:	e8 8d 56 ff ff       	callq  16460 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERS6_@plt>
   20dd3:	48 89 c3             	mov    %rax,%rbx
   20dd6:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   20ddd:	48 89 c7             	mov    %rax,%rdi
   20de0:	e8 9b 5c ff ff       	callq  16a80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   20de5:	48 89 c1             	mov    %rax,%rcx
   20de8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20def:	48 89 da             	mov    %rbx,%rdx
   20df2:	48 89 ce             	mov    %rcx,%rsi
   20df5:	48 89 c7             	mov    %rax,%rdi
   20df8:	e8 83 4f ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20dfd:	84 c0                	test   %al,%al
   20dff:	74 7c                	je     20e7d <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x27b>
	return pair<iterator, bool>
	  (_M_insert_(__x, __y, _GLIBCXX_FORWARD(_Arg, __v)), true);
   20e01:	c6 45 9f 01          	movb   $0x1,-0x61(%rbp)
   20e05:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   20e0c:	48 89 c7             	mov    %rax,%rdi
   20e0f:	e8 8c 49 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   20e14:	48 89 c1             	mov    %rax,%rcx
   20e17:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20e1b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   20e1f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   20e26:	48 89 c7             	mov    %rax,%rdi
   20e29:	e8 d2 55 ff ff       	callq  16400 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE10_M_insert_IS6_EESt17_Rb_tree_iteratorIS6_EPKSt18_Rb_tree_node_baseSI_OT_@plt>
   20e2e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   20e32:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
   20e36:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   20e3a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   20e3e:	48 89 ce             	mov    %rcx,%rsi
   20e41:	48 89 c7             	mov    %rax,%rdi
   20e44:	e8 27 5d ff ff       	callq  16b70 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_@plt>
   20e49:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   20e4d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   20e54:	48 89 d6             	mov    %rdx,%rsi
   20e57:	48 89 c7             	mov    %rax,%rdi
   20e5a:	e8 71 4b ff ff       	callq  159d0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>
   20e5f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   20e66:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   20e6d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   20e74:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   20e7b:	eb 47                	jmp    20ec4 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE16_M_insert_uniqueIS6_EES0_ISt17_Rb_tree_iteratorIS6_EbEOT_+0x2c2>
      return pair<iterator, bool>(__j, false);
   20e7d:	c6 45 de 00          	movb   $0x0,-0x22(%rbp)
   20e81:	48 8d 55 de          	lea    -0x22(%rbp),%rdx
   20e85:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
   20e8c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   20e90:	48 89 ce             	mov    %rcx,%rsi
   20e93:	48 89 c7             	mov    %rax,%rdi
   20e96:	e8 f5 55 ff ff       	callq  16490 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IRS7_bvEEOT_OT0_@plt>
   20e9b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   20e9f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   20ea3:	48 89 d6             	mov    %rdx,%rsi
   20ea6:	48 89 c7             	mov    %rax,%rdi
   20ea9:	e8 22 4b ff ff       	callq  159d0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E@plt>
   20eae:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   20eb2:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   20eb9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20ebd:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   20ec4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   20ecb:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
    }
   20ed1:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   20ed8:	5b                   	pop    %rbx
   20ed9:	5d                   	pop    %rbp
   20eda:	c3                   	retq   
   20edb:	90                   	nop

0000000000020edc <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv>:
      _Const_Base_ptr
      _M_root() const
      { return this->_M_impl._M_header._M_parent; }

      _Base_ptr&
      _M_leftmost()
   20edc:	55                   	push   %rbp
   20edd:	48 89 e5             	mov    %rsp,%rbp
   20ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   20ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20ee8:	48 83 c0 18          	add    $0x18,%rax
   20eec:	5d                   	pop    %rbp
   20eed:	c3                   	retq   

0000000000020eee <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEmmEv>:
	_M_node = _Rb_tree_increment(_M_node);
	return __tmp;
      }

      _Self&
      operator--()
   20eee:	55                   	push   %rbp
   20eef:	48 89 e5             	mov    %rsp,%rbp
   20ef2:	48 83 ec 10          	sub    $0x10,%rsp
   20ef6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_decrement(_M_node);
   20efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20efe:	48 8b 00             	mov    (%rax),%rax
   20f01:	48 89 c7             	mov    %rax,%rdi
   20f04:	e8 57 44 ff ff       	callq  15360 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base@plt>
   20f09:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20f0d:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   20f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   20f14:	c9                   	leaveq 
   20f15:	c3                   	retq   

0000000000020f16 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      static _Link_type
      _S_right(_Base_ptr __x)
      { return static_cast<_Link_type>(__x->_M_right); }

      static _Const_Link_type
      _S_right(_Const_Base_ptr __x)
   20f16:	55                   	push   %rbp
   20f17:	48 89 e5             	mov    %rsp,%rbp
   20f1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(__x->_M_right); }
   20f1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f22:	48 8b 40 18          	mov    0x18(%rax),%rax
   20f26:	5d                   	pop    %rbp
   20f27:	c3                   	retq   

0000000000020f28 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEppEv>:
      operator->() const
      { return std::__addressof(static_cast<_Link_type>
				(_M_node)->_M_value_field); }

      _Self&
      operator++()
   20f28:	55                   	push   %rbp
   20f29:	48 89 e5             	mov    %rsp,%rbp
   20f2c:	48 83 ec 10          	sub    $0x10,%rsp
   20f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_increment(_M_node);
   20f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f38:	48 8b 00             	mov    (%rax),%rax
   20f3b:	48 89 c7             	mov    %rax,%rdi
   20f3e:	e8 cd 4f ff ff       	callq  15f10 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
   20f43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20f47:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   20f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   20f4e:	c9                   	leaveq 
   20f4f:	c3                   	retq   

0000000000020f50 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEE13_M_const_castEv>:

      _Rb_tree_const_iterator(const iterator& __it)
      : _M_node(__it._M_node) { }

      iterator
      _M_const_cast() const
   20f50:	55                   	push   %rbp
   20f51:	48 89 e5             	mov    %rsp,%rbp
   20f54:	48 83 ec 20          	sub    $0x20,%rsp
   20f58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(static_cast<typename iterator::_Link_type>
			(const_cast<typename iterator::_Base_ptr>(_M_node))); }
   20f5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20f60:	48 8b 10             	mov    (%rax),%rdx
   20f63:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   20f67:	48 89 d6             	mov    %rdx,%rsi
   20f6a:	48 89 c7             	mov    %rax,%rdi
   20f6d:	e8 1e 54 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   20f72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20f76:	c9                   	leaveq 
   20f77:	c3                   	retq   

0000000000020f78 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>:
      static const_reference
      _S_value(_Const_Link_type __x)
      { return __x->_M_value_field; }

      static const _Key&
      _S_key(_Const_Link_type __x)
   20f78:	55                   	push   %rbp
   20f79:	48 89 e5             	mov    %rsp,%rbp
   20f7c:	48 83 ec 20          	sub    $0x20,%rsp
   20f80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _KeyOfValue()(_S_value(__x)); }
   20f84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20f88:	48 89 c7             	mov    %rax,%rdi
   20f8b:	e8 60 53 ff ff       	callq  162f0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt13_Rb_tree_nodeIS6_E@plt>
   20f90:	48 89 c2             	mov    %rax,%rdx
   20f93:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   20f97:	48 89 d6             	mov    %rdx,%rsi
   20f9a:	48 89 c7             	mov    %rax,%rdi
   20f9d:	e8 8e 56 ff ff       	callq  16630 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERKS6_@plt>
   20fa2:	c9                   	leaveq 
   20fa3:	c3                   	retq   

0000000000020fa4 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   20fa4:	55                   	push   %rbp
   20fa5:	48 89 e5             	mov    %rsp,%rbp
   20fa8:	48 83 ec 30          	sub    $0x30,%rsp
   20fac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20fb0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   20fb4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   20fb8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    _M_upper_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   20fbc:	eb 50                	jmp    2100e <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6a>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
   20fbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20fc2:	48 89 c7             	mov    %rax,%rdi
   20fc5:	e8 a6 4a ff ff       	callq  15a70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E@plt>
   20fca:	48 89 c2             	mov    %rax,%rdx
   20fcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20fd1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   20fd5:	48 89 ce             	mov    %rcx,%rsi
   20fd8:	48 89 c7             	mov    %rax,%rdi
   20fdb:	e8 a0 4d ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   20fe0:	84 c0                	test   %al,%al
   20fe2:	74 1a                	je     20ffe <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x5a>
	  __y = __x, __x = _S_left(__x);
   20fe4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20fe8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   20fec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20ff0:	48 89 c7             	mov    %rax,%rdi
   20ff3:	e8 38 5a ff ff       	callq  16a30 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   20ff8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   20ffc:	eb 10                	jmp    2100e <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x6a>
	else
	  __x = _S_right(__x);
   20ffe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21002:	48 89 c7             	mov    %rax,%rdi
   21005:	e8 66 4f ff ff       	callq  15f70 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   2100a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_upper_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   2100e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   21013:	0f 95 c0             	setne  %al
   21016:	84 c0                	test   %al,%al
   21018:	75 a4                	jne    20fbe <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS6_ESF_RS1_+0x1a>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
	  __y = __x, __x = _S_left(__x);
	else
	  __x = _S_right(__x);
      return iterator(__y);
   2101a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2101e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   21022:	48 89 d6             	mov    %rdx,%rsi
   21025:	48 89 c7             	mov    %rax,%rdi
   21028:	e8 63 53 ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   2102d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    }
   21031:	c9                   	leaveq 
   21032:	c3                   	retq   
   21033:	90                   	nop

0000000000021034 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEES7_EC1IS7_S7_vEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   21034:	55                   	push   %rbp
   21035:	48 89 e5             	mov    %rsp,%rbp
   21038:	48 83 ec 20          	sub    $0x20,%rsp
   2103c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21040:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21044:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   21048:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2104c:	48 89 c7             	mov    %rax,%rdi
   2104f:	e8 cc 49 ff ff       	callq  15a20 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   21054:	48 89 c2             	mov    %rax,%rdx
   21057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2105b:	48 8b 12             	mov    (%rdx),%rdx
   2105e:	48 89 10             	mov    %rdx,(%rax)
   21061:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21065:	48 89 c7             	mov    %rax,%rdi
   21068:	e8 b3 49 ff ff       	callq  15a20 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   2106d:	48 89 c2             	mov    %rax,%rdx
   21070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21074:	48 8b 12             	mov    (%rdx),%rdx
   21077:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2107b:	c9                   	leaveq 
   2107c:	c3                   	retq   

000000000002107d <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   2107d:	55                   	push   %rbp
   2107e:	48 89 e5             	mov    %rsp,%rbp
   21081:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   21085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21089:	5d                   	pop    %rbp
   2108a:	c3                   	retq   
   2108b:	90                   	nop

000000000002108c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   2108c:	55                   	push   %rbp
   2108d:	48 89 e5             	mov    %rsp,%rbp
   21090:	48 83 ec 60          	sub    $0x60,%rsp
   21094:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   21098:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   2109c:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    _M_erase_aux(const_iterator __first, const_iterator __last)
    {
      if (__first == begin() && __last == end())
   210a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   210a4:	48 89 c7             	mov    %rax,%rdi
   210a7:	e8 84 41 ff ff       	callq  15230 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv@plt>
   210ac:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   210b0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   210b4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   210b8:	48 89 d6             	mov    %rdx,%rsi
   210bb:	48 89 c7             	mov    %rax,%rdi
   210be:	e8 8d 58 ff ff       	callq  16950 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   210c3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   210c7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   210cb:	48 89 d6             	mov    %rdx,%rsi
   210ce:	48 89 c7             	mov    %rax,%rdi
   210d1:	e8 4a 5a ff ff       	callq  16b20 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_@plt>
   210d6:	84 c0                	test   %al,%al
   210d8:	74 41                	je     2111b <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0x8f>
   210da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   210de:	48 89 c7             	mov    %rax,%rdi
   210e1:	e8 2a 41 ff ff       	callq  15210 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE3endEv@plt>
   210e6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   210ea:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   210ee:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   210f2:	48 89 d6             	mov    %rdx,%rsi
   210f5:	48 89 c7             	mov    %rax,%rdi
   210f8:	e8 53 58 ff ff       	callq  16950 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1ERKSt17_Rb_tree_iteratorIS6_E@plt>
   210fd:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   21101:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   21105:	48 89 d6             	mov    %rdx,%rsi
   21108:	48 89 c7             	mov    %rax,%rdi
   2110b:	e8 10 5a ff ff       	callq  16b20 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_@plt>
   21110:	84 c0                	test   %al,%al
   21112:	74 07                	je     2111b <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0x8f>
   21114:	b8 01 00 00 00       	mov    $0x1,%eax
   21119:	eb 05                	jmp    21120 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0x94>
   2111b:	b8 00 00 00 00       	mov    $0x0,%eax
   21120:	84 c0                	test   %al,%al
   21122:	74 31                	je     21155 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0xc9>
	clear();
   21124:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21128:	48 89 c7             	mov    %rax,%rdi
   2112b:	e8 f0 40 ff ff       	callq  15220 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5clearEv@plt>
   21130:	eb 3a                	jmp    2116c <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0xe0>
      else
	while (__first != __last)
	  erase(__first++);
   21132:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   21136:	be 00 00 00 00       	mov    $0x0,%esi
   2113b:	48 89 c7             	mov    %rax,%rdi
   2113e:	e8 dd 43 ff ff       	callq  15520 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEppEi@plt>
   21143:	48 89 c2             	mov    %rax,%rdx
   21146:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2114a:	48 89 d6             	mov    %rdx,%rsi
   2114d:	48 89 c7             	mov    %rax,%rdi
   21150:	e8 8b 4f ff ff       	callq  160e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_E@plt>
    _M_erase_aux(const_iterator __first, const_iterator __last)
    {
      if (__first == begin() && __last == end())
	clear();
      else
	while (__first != __last)
   21155:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   21159:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2115d:	48 89 d6             	mov    %rdx,%rsi
   21160:	48 89 c7             	mov    %rax,%rdi
   21163:	e8 88 45 ff ff       	callq  156f0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEneERKS7_@plt>
   21168:	84 c0                	test   %al,%al
   2116a:	75 c6                	jne    21132 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_ESE_+0xa6>
	  erase(__first++);
    }
   2116c:	c9                   	leaveq 
   2116d:	c3                   	retq   

000000000002116e <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   2116e:	55                   	push   %rbp
   2116f:	48 89 e5             	mov    %rsp,%rbp
   21172:	48 83 ec 30          	sub    $0x30,%rsp
   21176:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2117a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2117e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   21182:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    _M_lower_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   21186:	eb 53                	jmp    211db <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_+0x6d>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   21188:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2118c:	48 89 c7             	mov    %rax,%rdi
   2118f:	e8 ec 48 ff ff       	callq  15a80 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E@plt>
   21194:	48 89 c1             	mov    %rax,%rcx
   21197:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2119b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2119f:	48 89 ce             	mov    %rcx,%rsi
   211a2:	48 89 c7             	mov    %rax,%rdi
   211a5:	e8 d6 4b ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   211aa:	83 f0 01             	xor    $0x1,%eax
   211ad:	84 c0                	test   %al,%al
   211af:	74 1a                	je     211cb <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_+0x5d>
	  __y = __x, __x = _S_left(__x);
   211b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   211b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   211b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   211bd:	48 89 c7             	mov    %rax,%rdi
   211c0:	e8 4b 50 ff ff       	callq  16210 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   211c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   211c9:	eb 10                	jmp    211db <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_+0x6d>
	else
	  __x = _S_right(__x);
   211cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   211cf:	48 89 c7             	mov    %rax,%rdi
   211d2:	e8 99 43 ff ff       	callq  15570 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   211d7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    _M_lower_bound(_Link_type __x, _Link_type __y,
		   const _Key& __k)
    {
      while (__x != 0)
   211db:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   211e0:	0f 95 c0             	setne  %al
   211e3:	84 c0                	test   %al,%al
   211e5:	75 a1                	jne    21188 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_+0x1a>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
	  __y = __x, __x = _S_left(__x);
	else
	  __x = _S_right(__x);
      return iterator(__y);
   211e7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   211eb:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   211ef:	48 89 d6             	mov    %rdx,%rsi
   211f2:	48 89 c7             	mov    %rax,%rdi
   211f5:	e8 96 4b ff ff       	callq  15d90 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E@plt>
   211fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    }
   211fe:	c9                   	leaveq 
   211ff:	c3                   	retq   

0000000000021200 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E>:

      _Rb_tree_iterator()
      : _M_node() { }

      explicit
      _Rb_tree_iterator(_Link_type __x)
   21200:	55                   	push   %rbp
   21201:	48 89 e5             	mov    %rsp,%rbp
   21204:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21208:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   2120c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21210:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21214:	48 89 10             	mov    %rdx,(%rax)
   21217:	5d                   	pop    %rbp
   21218:	c3                   	retq   
   21219:	90                   	nop

000000000002121a <_ZNKSt10_Select1stISt4pairIKibEEclERS2_>:
  template<typename _Pair>
    struct _Select1st : public unary_function<_Pair,
					      typename _Pair::first_type>
    {
      typename _Pair::first_type&
      operator()(_Pair& __x) const
   2121a:	55                   	push   %rbp
   2121b:	48 89 e5             	mov    %rsp,%rbp
   2121e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21222:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   21226:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2122a:	5d                   	pop    %rbp
   2122b:	c3                   	retq   

000000000002122c <_ZNKSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE4sizeEv>:
      bool
      empty() const
      { return _M_impl._M_node_count == 0; }

      size_type
      size() const
   2122c:	55                   	push   %rbp
   2122d:	48 89 e5             	mov    %rsp,%rbp
   21230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   21234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21238:	48 8b 40 28          	mov    0x28(%rax),%rax
   2123c:	5d                   	pop    %rbp
   2123d:	c3                   	retq   

000000000002123e <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_>:
           typename _Compare, typename _Alloc>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   2123e:	55                   	push   %rbp
   2123f:	48 89 e5             	mov    %rsp,%rbp
   21242:	53                   	push   %rbx
   21243:	48 83 ec 58          	sub    $0x58,%rsp
   21247:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   2124b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   2124f:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   21253:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    _M_insert_(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)
#endif
    {
      bool __insert_left = (__x != 0 || __p == _M_end()
			    || _M_impl._M_key_compare(_KeyOfValue()(__v), 
						      _S_key(__p)));
   21257:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   2125c:	75 4d                	jne    212ab <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_+0x6d>
   2125e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21262:	48 89 c7             	mov    %rax,%rdi
   21265:	e8 e6 48 ff ff       	callq  15b50 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>
   2126a:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
   2126e:	74 3b                	je     212ab <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_+0x6d>
   21270:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21274:	48 89 c7             	mov    %rax,%rdi
   21277:	e8 04 43 ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   2127c:	48 89 c3             	mov    %rax,%rbx
   2127f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   21283:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   21287:	48 89 d6             	mov    %rdx,%rsi
   2128a:	48 89 c7             	mov    %rax,%rdi
   2128d:	e8 6e 57 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   21292:	48 89 c1             	mov    %rax,%rcx
   21295:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21299:	48 89 da             	mov    %rbx,%rdx
   2129c:	48 89 ce             	mov    %rcx,%rsi
   2129f:	48 89 c7             	mov    %rax,%rdi
   212a2:	e8 d9 4a ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   212a7:	84 c0                	test   %al,%al
   212a9:	74 07                	je     212b2 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_+0x74>
   212ab:	b8 01 00 00 00       	mov    $0x1,%eax
   212b0:	eb 05                	jmp    212b7 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_+0x79>
   212b2:	b8 00 00 00 00       	mov    $0x0,%eax
   212b7:	88 45 ef             	mov    %al,-0x11(%rbp)

      _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
   212ba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   212be:	48 89 c7             	mov    %rax,%rdi
   212c1:	e8 5a 48 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   212c6:	48 89 c2             	mov    %rax,%rdx
   212c9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   212cd:	48 89 d6             	mov    %rdx,%rsi
   212d0:	48 89 c7             	mov    %rax,%rdi
   212d3:	e8 98 45 ff ff       	callq  15870 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_create_nodeIIS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_@plt>
   212d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

      _Rb_tree_insert_and_rebalance(__insert_left, __z,
   212dc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   212e0:	48 8d 48 08          	lea    0x8(%rax),%rcx
   212e4:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   212e8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   212ec:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   212f0:	89 c7                	mov    %eax,%edi
   212f2:	e8 19 51 ff ff       	callq  16410 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
				    const_cast<_Base_ptr>(__p),  
				    this->_M_impl._M_header);
      ++_M_impl._M_node_count;
   212f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   212fb:	48 8b 40 28          	mov    0x28(%rax),%rax
   212ff:	48 8d 50 01          	lea    0x1(%rax),%rdx
   21303:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21307:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   2130b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2130f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   21313:	48 89 d6             	mov    %rdx,%rsi
   21316:	48 89 c7             	mov    %rax,%rdi
   21319:	e8 72 4a ff ff       	callq  15d90 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E@plt>
   2131e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    }
   21322:	48 83 c4 58          	add    $0x58,%rsp
   21326:	5b                   	pop    %rbx
   21327:	5d                   	pop    %rbp
   21328:	c3                   	retq   
   21329:	90                   	nop

000000000002132a <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_>:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
    template<typename _Arg>
#endif
    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
			   _Compare, _Alloc>::iterator, bool>
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   2132a:	55                   	push   %rbp
   2132b:	48 89 e5             	mov    %rsp,%rbp
   2132e:	53                   	push   %rbx
   2132f:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   21336:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   2133d:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    _M_insert_unique(_Arg&& __v)
#else
    _M_insert_unique(const _Val& __v)
#endif
    {
      _Link_type __x = _M_begin();
   21344:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2134b:	48 89 c7             	mov    %rax,%rdi
   2134e:	e8 7d 45 ff ff       	callq  158d0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_beginEv@plt>
   21353:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      _Link_type __y = _M_end();
   21357:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2135e:	48 89 c7             	mov    %rax,%rdi
   21361:	e8 ea 47 ff ff       	callq  15b50 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_M_endEv@plt>
   21366:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      bool __comp = true;
   2136a:	c6 45 df 01          	movb   $0x1,-0x21(%rbp)
      while (__x != 0)
   2136e:	eb 6f                	jmp    213df <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0xb5>
	{
	  __y = __x;
   21370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21374:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  __comp = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x));
   21378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2137c:	48 89 c7             	mov    %rax,%rdi
   2137f:	e8 fc 46 ff ff       	callq  15a80 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E@plt>
   21384:	48 89 c3             	mov    %rax,%rbx
   21387:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   2138e:	48 8d 85 0f ff ff ff 	lea    -0xf1(%rbp),%rax
   21395:	48 89 d6             	mov    %rdx,%rsi
   21398:	48 89 c7             	mov    %rax,%rdi
   2139b:	e8 60 56 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   213a0:	48 89 c1             	mov    %rax,%rcx
   213a3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   213aa:	48 89 da             	mov    %rbx,%rdx
   213ad:	48 89 ce             	mov    %rcx,%rsi
   213b0:	48 89 c7             	mov    %rax,%rdi
   213b3:	e8 c8 49 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   213b8:	88 45 df             	mov    %al,-0x21(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   213bb:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
   213bf:	74 0e                	je     213cf <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0xa5>
   213c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   213c5:	48 89 c7             	mov    %rax,%rdi
   213c8:	e8 43 4e ff ff       	callq  16210 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base@plt>
   213cd:	eb 0c                	jmp    213db <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0xb1>
   213cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   213d3:	48 89 c7             	mov    %rax,%rdi
   213d6:	e8 95 41 ff ff       	callq  15570 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base@plt>
   213db:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
#endif
    {
      _Link_type __x = _M_begin();
      _Link_type __y = _M_end();
      bool __comp = true;
      while (__x != 0)
   213df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   213e4:	0f 95 c0             	setne  %al
   213e7:	84 c0                	test   %al,%al
   213e9:	75 85                	jne    21370 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0x46>
	{
	  __y = __x;
	  __comp = _M_impl._M_key_compare(_KeyOfValue()(__v), _S_key(__x));
	  __x = __comp ? _S_left(__x) : _S_right(__x);
	}
      iterator __j = iterator(__y);
   213eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   213ef:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   213f6:	48 89 d6             	mov    %rdx,%rsi
   213f9:	48 89 c7             	mov    %rax,%rdi
   213fc:	e8 8f 49 ff ff       	callq  15d90 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E@plt>
      if (__comp)
   21401:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
   21405:	0f 84 d7 00 00 00    	je     214e2 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0x1b8>
	{
	  if (__j == begin())
   2140b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21412:	48 89 c7             	mov    %rax,%rdi
   21415:	e8 66 40 ff ff       	callq  15480 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE5beginEv@plt>
   2141a:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   21421:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   21428:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   2142f:	48 89 d6             	mov    %rdx,%rsi
   21432:	48 89 c7             	mov    %rax,%rdi
   21435:	e8 16 3f ff ff       	callq  15350 <_ZNKSt17_Rb_tree_iteratorISt4pairIKibEEeqERKS3_@plt>
   2143a:	84 c0                	test   %al,%al
   2143c:	0f 84 91 00 00 00    	je     214d3 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0x1a9>
	    return pair<iterator, bool>
	      (_M_insert_(__x, __y, _GLIBCXX_FORWARD(_Arg, __v)), true);
   21442:	c6 85 5f ff ff ff 01 	movb   $0x1,-0xa1(%rbp)
   21449:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   21450:	48 89 c7             	mov    %rax,%rdi
   21453:	e8 c8 46 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   21458:	48 89 c1             	mov    %rax,%rcx
   2145b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2145f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   21463:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2146a:	48 89 c7             	mov    %rax,%rdi
   2146d:	e8 6e 42 ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   21472:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   21479:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
   21480:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
   21487:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   2148e:	48 89 ce             	mov    %rcx,%rsi
   21491:	48 89 c7             	mov    %rax,%rdi
   21494:	e8 f7 3d ff ff       	callq  15290 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bvEEOT_OT0_@plt>
   21499:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
   214a0:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   214a7:	48 89 d6             	mov    %rdx,%rsi
   214aa:	48 89 c7             	mov    %rax,%rdi
   214ad:	e8 3e 4d ff ff       	callq  161f0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bEEOS_IT_T0_E@plt>
   214b2:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   214b9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   214c0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   214c7:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   214ce:	e9 19 01 00 00       	jmpq   215ec <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0x2c2>
	  else
	    --__j;
   214d3:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   214da:	48 89 c7             	mov    %rax,%rdi
   214dd:	e8 5e 4d ff ff       	callq  16240 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEmmEv@plt>
	}
      if (_M_impl._M_key_compare(_S_key(__j._M_node), _KeyOfValue()(__v)))
   214e2:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
   214e9:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   214f0:	48 89 d6             	mov    %rdx,%rsi
   214f3:	48 89 c7             	mov    %rax,%rdi
   214f6:	e8 05 55 ff ff       	callq  16a00 <_ZNKSt10_Select1stISt4pairIKibEEclERS2_@plt>
   214fb:	48 89 c3             	mov    %rax,%rbx
   214fe:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   21505:	48 89 c7             	mov    %rax,%rdi
   21508:	e8 73 40 ff ff       	callq  15580 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base@plt>
   2150d:	48 89 c1             	mov    %rax,%rcx
   21510:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   21517:	48 89 da             	mov    %rbx,%rdx
   2151a:	48 89 ce             	mov    %rcx,%rsi
   2151d:	48 89 c7             	mov    %rax,%rdi
   21520:	e8 5b 48 ff ff       	callq  15d80 <_ZNKSt4lessIiEclERKiS2_@plt>
   21525:	84 c0                	test   %al,%al
   21527:	74 7c                	je     215a5 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0x27b>
	return pair<iterator, bool>
	  (_M_insert_(__x, __y, _GLIBCXX_FORWARD(_Arg, __v)), true);
   21529:	c6 45 9f 01          	movb   $0x1,-0x61(%rbp)
   2152d:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   21534:	48 89 c7             	mov    %rax,%rdi
   21537:	e8 e4 45 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   2153c:	48 89 c1             	mov    %rax,%rcx
   2153f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21543:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   21547:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   2154e:	48 89 c7             	mov    %rax,%rdi
   21551:	e8 8a 41 ff ff       	callq  156e0 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE10_M_insert_IS2_EESt17_Rb_tree_iteratorIS2_EPKSt18_Rb_tree_node_baseSE_OT_@plt>
   21556:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   2155a:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
   2155e:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   21562:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   21566:	48 89 ce             	mov    %rcx,%rsi
   21569:	48 89 c7             	mov    %rax,%rdi
   2156c:	e8 1f 3d ff ff       	callq  15290 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bvEEOT_OT0_@plt>
   21571:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   21575:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   2157c:	48 89 d6             	mov    %rdx,%rsi
   2157f:	48 89 c7             	mov    %rax,%rdi
   21582:	e8 69 4c ff ff       	callq  161f0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bEEOS_IT_T0_E@plt>
   21587:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2158e:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   21595:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2159c:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   215a3:	eb 47                	jmp    215ec <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_+0x2c2>
      return pair<iterator, bool>(__j, false);
   215a5:	c6 45 de 00          	movb   $0x0,-0x22(%rbp)
   215a9:	48 8d 55 de          	lea    -0x22(%rbp),%rdx
   215ad:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
   215b4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   215b8:	48 89 ce             	mov    %rcx,%rsi
   215bb:	48 89 c7             	mov    %rax,%rdi
   215be:	e8 fd 49 ff ff       	callq  15fc0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IRS3_bvEEOT_OT0_@plt>
   215c3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   215c7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   215cb:	48 89 d6             	mov    %rdx,%rsi
   215ce:	48 89 c7             	mov    %rax,%rdi
   215d1:	e8 1a 4c ff ff       	callq  161f0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bEEOS_IT_T0_E@plt>
   215d6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   215da:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   215e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   215e5:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   215ec:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   215f3:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
    }
   215f9:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   21600:	5b                   	pop    %rbx
   21601:	5d                   	pop    %rbp
   21602:	c3                   	retq   
   21603:	90                   	nop

0000000000021604 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEmmEv>:
	_M_node = _Rb_tree_increment(_M_node);
	return __tmp;
      }

      _Self&
      operator--()
   21604:	55                   	push   %rbp
   21605:	48 89 e5             	mov    %rsp,%rbp
   21608:	48 83 ec 10          	sub    $0x10,%rsp
   2160c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_decrement(_M_node);
   21610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21614:	48 8b 00             	mov    (%rax),%rax
   21617:	48 89 c7             	mov    %rax,%rdi
   2161a:	e8 41 3d ff ff       	callq  15360 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base@plt>
   2161f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21623:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   21626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   2162a:	c9                   	leaveq 
   2162b:	c3                   	retq   

000000000002162c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKibEEppEv>:
      operator->() const
      { return std::__addressof(static_cast<_Link_type>
				(_M_node)->_M_value_field); }

      _Self&
      operator++()
   2162c:	55                   	push   %rbp
   2162d:	48 89 e5             	mov    %rsp,%rbp
   21630:	48 83 ec 10          	sub    $0x10,%rsp
   21634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_increment(_M_node);
   21638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2163c:	48 8b 00             	mov    (%rax),%rax
   2163f:	48 89 c7             	mov    %rax,%rdi
   21642:	e8 c9 48 ff ff       	callq  15f10 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
   21647:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2164b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   2164e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   21652:	c9                   	leaveq 
   21653:	c3                   	retq   

0000000000021654 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKibEE13_M_const_castEv>:

      _Rb_tree_const_iterator(const iterator& __it)
      : _M_node(__it._M_node) { }

      iterator
      _M_const_cast() const
   21654:	55                   	push   %rbp
   21655:	48 89 e5             	mov    %rsp,%rbp
   21658:	48 83 ec 20          	sub    $0x20,%rsp
   2165c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(static_cast<typename iterator::_Link_type>
			(const_cast<typename iterator::_Base_ptr>(_M_node))); }
   21660:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21664:	48 8b 10             	mov    (%rax),%rdx
   21667:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2166b:	48 89 d6             	mov    %rdx,%rsi
   2166e:	48 89 c7             	mov    %rax,%rdi
   21671:	e8 1a 47 ff ff       	callq  15d90 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E@plt>
   21676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2167a:	c9                   	leaveq 
   2167b:	c3                   	retq   

000000000002167c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEC1Ev>:

      template<typename _Tp1>
        struct rebind
        { typedef new_allocator<_Tp1> other; };

      new_allocator() throw() { }
   2167c:	55                   	push   %rbp
   2167d:	48 89 e5             	mov    %rsp,%rbp
   21680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21684:	5d                   	pop    %rbp
   21685:	c3                   	retq   

0000000000021686 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE10deallocateEPS9_m>:
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(pointer __p, size_type)
   21686:	55                   	push   %rbp
   21687:	48 89 e5             	mov    %rsp,%rbp
   2168a:	48 83 ec 20          	sub    $0x20,%rsp
   2168e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21692:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21696:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { ::operator delete(__p); }
   2169a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2169e:	48 89 c7             	mov    %rax,%rdi
   216a1:	e8 4a 3f ff ff       	callq  155f0 <_ZdlPv@plt>
   216a6:	c9                   	leaveq 
   216a7:	c3                   	retq   

00000000000216a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEEC1Ev>:

      template<typename _Tp1>
        struct rebind
        { typedef new_allocator<_Tp1> other; };

      new_allocator() throw() { }
   216a8:	55                   	push   %rbp
   216a9:	48 89 e5             	mov    %rsp,%rbp
   216ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   216b0:	5d                   	pop    %rbp
   216b1:	c3                   	retq   

00000000000216b2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE10deallocateEPS5_m>:
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(pointer __p, size_type)
   216b2:	55                   	push   %rbp
   216b3:	48 89 e5             	mov    %rsp,%rbp
   216b6:	48 83 ec 20          	sub    $0x20,%rsp
   216ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   216be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   216c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { ::operator delete(__p); }
   216c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   216ca:	48 89 c7             	mov    %rax,%rdi
   216cd:	e8 1e 3f ff ff       	callq  155f0 <_ZdlPv@plt>
   216d2:	c9                   	leaveq 
   216d3:	c3                   	retq   

00000000000216d4 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E>:
      _Const_Link_type
      _M_end() const
      { return static_cast<_Const_Link_type>(&this->_M_impl._M_header); }

      static const_reference
      _S_value(_Const_Link_type __x)
   216d4:	55                   	push   %rbp
   216d5:	48 89 e5             	mov    %rsp,%rbp
   216d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __x->_M_value_field; }
   216dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216e0:	48 83 c0 20          	add    $0x20,%rax
   216e4:	5d                   	pop    %rbp
   216e5:	c3                   	retq   

00000000000216e6 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt18_Rb_tree_node_base>:
      static _Const_Link_type
      _S_right(_Const_Base_ptr __x)
      { return static_cast<_Const_Link_type>(__x->_M_right); }

      static const_reference
      _S_value(_Const_Base_ptr __x)
   216e6:	55                   	push   %rbp
   216e7:	48 89 e5             	mov    %rsp,%rbp
   216ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Const_Link_type>(__x)->_M_value_field; }
   216ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216f2:	48 83 c0 20          	add    $0x20,%rax
   216f6:	5d                   	pop    %rbp
   216f7:	c3                   	retq   

00000000000216f8 <_ZNKSt10_Select1stISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEclERKS6_>:

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   216f8:	55                   	push   %rbp
   216f9:	48 89 e5             	mov    %rsp,%rbp
   216fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21700:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   21704:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21708:	5d                   	pop    %rbp
   21709:	c3                   	retq   

000000000002170a <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE14_M_create_nodeIIS6_EEEPSt13_Rb_tree_nodeIS6_EDpOT_>:
	_M_put_node(__p);
      }
#else
      template<typename... _Args>
        _Link_type
        _M_create_node(_Args&&... __args)
   2170a:	55                   	push   %rbp
   2170b:	48 89 e5             	mov    %rsp,%rbp
   2170e:	53                   	push   %rbx
   2170f:	48 83 ec 28          	sub    $0x28,%rsp
   21713:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   21717:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	{
	  _Link_type __tmp = _M_get_node();
   2171b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2171f:	48 89 c7             	mov    %rax,%rdi
   21722:	e8 39 4c ff ff       	callq  16360 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_get_nodeEv@plt>
   21727:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  __try
	    {
	      _M_get_Node_allocator().construct(__tmp,
   2172b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2172f:	48 89 c7             	mov    %rax,%rdi
   21732:	e8 69 40 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   21737:	48 89 c3             	mov    %rax,%rbx
   2173a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2173e:	48 89 c7             	mov    %rax,%rdi
   21741:	e8 0a 45 ff ff       	callq  15c50 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE21_M_get_Node_allocatorEv@plt>
   21746:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   2174a:	48 89 da             	mov    %rbx,%rdx
   2174d:	48 89 ce             	mov    %rcx,%rsi
   21750:	48 89 c7             	mov    %rax,%rdi
   21753:	e8 08 4a ff ff       	callq  16160 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_@plt>
	  __catch(...)
	    {
	      _M_put_node(__tmp);
	      __throw_exception_again;
	    }
	  return __tmp;
   21758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   2175c:	48 83 c4 28          	add    $0x28,%rsp
   21760:	5b                   	pop    %rbx
   21761:	5d                   	pop    %rbp
   21762:	c3                   	retq   
   21763:	48 89 c3             	mov    %rax,%rbx
	  __try
	    {
	      _M_get_Node_allocator().construct(__tmp,
					     std::forward<_Args>(__args)...);
	    }
	  __catch(...)
   21766:	e8 b5 50 ff ff       	callq  16820 <__cxa_end_catch@plt>
   2176b:	48 89 d8             	mov    %rbx,%rax
   2176e:	48 89 c7             	mov    %rax,%rdi
   21771:	e8 3a 53 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   21776:	48 89 c7             	mov    %rax,%rdi
   21779:	e8 a2 51 ff ff       	callq  16920 <__cxa_begin_catch@plt>
	    {
	      _M_put_node(__tmp);
   2177e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21782:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21786:	48 89 d6             	mov    %rdx,%rsi
   21789:	48 89 c7             	mov    %rax,%rdi
   2178c:	e8 4f 3a ff ff       	callq  151e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
	      __throw_exception_again;
   21791:	e8 aa 3f ff ff       	callq  15740 <__cxa_rethrow@plt>

0000000000021796 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5beginEv>:
      _Compare
      key_comp() const
      { return _M_impl._M_key_compare; }

      iterator
      begin()
   21796:	55                   	push   %rbp
   21797:	48 89 e5             	mov    %rsp,%rbp
   2179a:	48 83 ec 20          	sub    $0x20,%rsp
   2179e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { 
	return iterator(static_cast<_Link_type>
			(this->_M_impl._M_header._M_left));
   217a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   217a6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   217aa:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   217ae:	48 89 d6             	mov    %rdx,%rsi
   217b1:	48 89 c7             	mov    %rax,%rdi
   217b4:	e8 d7 4b ff ff       	callq  16390 <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1EPSt13_Rb_tree_nodeIS6_E@plt>
   217b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
   217bd:	c9                   	leaveq 
   217be:	c3                   	retq   
   217bf:	90                   	nop

00000000000217c0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bvEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   217c0:	55                   	push   %rbp
   217c1:	48 89 e5             	mov    %rsp,%rbp
   217c4:	48 83 ec 20          	sub    $0x20,%rsp
   217c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   217cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   217d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   217d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   217d8:	48 89 c7             	mov    %rax,%rdi
   217db:	e8 40 42 ff ff       	callq  15a20 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   217e0:	48 89 c2             	mov    %rax,%rdx
   217e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   217e7:	48 8b 12             	mov    (%rdx),%rdx
   217ea:	48 89 10             	mov    %rdx,(%rax)
   217ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   217f1:	48 89 c7             	mov    %rax,%rdi
   217f4:	e8 67 3d ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   217f9:	0f b6 10             	movzbl (%rax),%edx
   217fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21800:	88 50 08             	mov    %dl,0x8(%rax)
   21803:	c9                   	leaveq 
   21804:	c3                   	retq   
   21805:	90                   	nop

0000000000021806 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IS7_bEEOS_IT_T0_E>:

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   21806:	55                   	push   %rbp
   21807:	48 89 e5             	mov    %rsp,%rbp
   2180a:	48 83 ec 10          	sub    $0x10,%rsp
   2180e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21812:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   21816:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2181a:	48 89 c7             	mov    %rax,%rdi
   2181d:	e8 fe 41 ff ff       	callq  15a20 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceIS9_E4typeE@plt>
   21822:	48 89 c2             	mov    %rax,%rdx
   21825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21829:	48 8b 12             	mov    (%rdx),%rdx
   2182c:	48 89 10             	mov    %rdx,(%rax)
   2182f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21833:	48 83 c0 08          	add    $0x8,%rax
   21837:	48 89 c7             	mov    %rax,%rdi
   2183a:	e8 21 3d ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   2183f:	0f b6 10             	movzbl (%rax),%edx
   21842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21846:	88 50 08             	mov    %dl,0x8(%rax)
   21849:	c9                   	leaveq 
   2184a:	c3                   	retq   
   2184b:	90                   	nop

000000000002184c <_ZNSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEmmEv>:
	_M_node = _Rb_tree_increment(_M_node);
	return __tmp;
      }

      _Self&
      operator--()
   2184c:	55                   	push   %rbp
   2184d:	48 89 e5             	mov    %rsp,%rbp
   21850:	48 83 ec 10          	sub    $0x10,%rsp
   21854:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_decrement(_M_node);
   21858:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2185c:	48 8b 00             	mov    (%rax),%rax
   2185f:	48 89 c7             	mov    %rax,%rdi
   21862:	e8 39 40 ff ff       	callq  158a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   21867:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2186b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   2186e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   21872:	c9                   	leaveq 
   21873:	c3                   	retq   

0000000000021874 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEbEC1IRS7_bvEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   21874:	55                   	push   %rbp
   21875:	48 89 e5             	mov    %rsp,%rbp
   21878:	48 83 ec 20          	sub    $0x20,%rsp
   2187c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21880:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21884:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   21888:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2188c:	48 89 c7             	mov    %rax,%rdi
   2188f:	e8 0c 50 ff ff       	callq  168a0 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceISA_E4typeE@plt>
   21894:	48 89 c2             	mov    %rax,%rdx
   21897:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2189b:	48 8b 12             	mov    (%rdx),%rdx
   2189e:	48 89 10             	mov    %rdx,(%rax)
   218a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   218a5:	48 89 c7             	mov    %rax,%rdi
   218a8:	e8 b3 3c ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   218ad:	0f b6 10             	movzbl (%rax),%edx
   218b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   218b4:	88 50 08             	mov    %dl,0x8(%rax)
   218b7:	c9                   	leaveq 
   218b8:	c3                   	retq   

00000000000218b9 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_S_valueEPKSt13_Rb_tree_nodeIS6_E>:
      _Const_Link_type
      _M_end() const
      { return static_cast<_Const_Link_type>(&this->_M_impl._M_header); }

      static const_reference
      _S_value(_Const_Link_type __x)
   218b9:	55                   	push   %rbp
   218ba:	48 89 e5             	mov    %rsp,%rbp
   218bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __x->_M_value_field; }
   218c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   218c5:	48 83 c0 20          	add    $0x20,%rax
   218c9:	5d                   	pop    %rbp
   218ca:	c3                   	retq   
   218cb:	90                   	nop

00000000000218cc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEeqERKS7_>:
	_M_node = _Rb_tree_decrement(_M_node);
	return __tmp;
      }

      bool
      operator==(const _Self& __x) const
   218cc:	55                   	push   %rbp
   218cd:	48 89 e5             	mov    %rsp,%rbp
   218d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   218d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node == __x._M_node; }
   218d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   218dc:	48 8b 10             	mov    (%rax),%rdx
   218df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   218e3:	48 8b 00             	mov    (%rax),%rax
   218e6:	48 39 c2             	cmp    %rax,%rdx
   218e9:	0f 94 c0             	sete   %al
   218ec:	5d                   	pop    %rbp
   218ed:	c3                   	retq   

00000000000218ee <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5clearEv>:
#endif
      void
      erase(const key_type* __first, const key_type* __last);

      void
      clear()
   218ee:	55                   	push   %rbp
   218ef:	48 89 e5             	mov    %rsp,%rbp
   218f2:	53                   	push   %rbx
   218f3:	48 83 ec 18          	sub    $0x18,%rsp
   218f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
        _M_erase(_M_begin());
   218fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   218ff:	48 89 c7             	mov    %rax,%rdi
   21902:	e8 f9 52 ff ff       	callq  16c00 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_beginEv@plt>
   21907:	48 89 c2             	mov    %rax,%rdx
   2190a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2190e:	48 89 d6             	mov    %rdx,%rsi
   21911:	48 89 c7             	mov    %rax,%rdi
   21914:	e8 87 3c ff ff       	callq  155a0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E@plt>
        _M_leftmost() = _M_end();
   21919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2191d:	48 89 c7             	mov    %rax,%rdi
   21920:	e8 9b 4a ff ff       	callq  163c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_leftmostEv@plt>
   21925:	48 89 c3             	mov    %rax,%rbx
   21928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2192c:	48 89 c7             	mov    %rax,%rdi
   2192f:	e8 ac 4f ff ff       	callq  168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   21934:	48 89 03             	mov    %rax,(%rbx)
        _M_root() = 0;
   21937:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2193b:	48 89 c7             	mov    %rax,%rdi
   2193e:	e8 8d 52 ff ff       	callq  16bd0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_M_rootEv@plt>
   21943:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
        _M_rightmost() = _M_end();
   2194a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2194e:	48 89 c7             	mov    %rax,%rdi
   21951:	e8 3a 4d ff ff       	callq  16690 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_rightmostEv@plt>
   21956:	48 89 c3             	mov    %rax,%rbx
   21959:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2195d:	48 89 c7             	mov    %rax,%rdi
   21960:	e8 7b 4f ff ff       	callq  168e0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE6_M_endEv@plt>
   21965:	48 89 03             	mov    %rax,(%rbx)
        _M_impl._M_node_count = 0;
   21968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2196c:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   21973:	00 
      }
   21974:	48 83 c4 18          	add    $0x18,%rsp
   21978:	5b                   	pop    %rbx
   21979:	5d                   	pop    %rbp
   2197a:	c3                   	retq   
   2197b:	90                   	nop

000000000002197c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEneERKS7_>:
      bool
      operator==(const _Self& __x) const
      { return _M_node == __x._M_node; }

      bool
      operator!=(const _Self& __x) const
   2197c:	55                   	push   %rbp
   2197d:	48 89 e5             	mov    %rsp,%rbp
   21980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21984:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_node != __x._M_node; }
   21988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2198c:	48 8b 10             	mov    (%rax),%rdx
   2198f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21993:	48 8b 00             	mov    (%rax),%rax
   21996:	48 39 c2             	cmp    %rax,%rdx
   21999:	0f 95 c0             	setne  %al
   2199c:	5d                   	pop    %rbp
   2199d:	c3                   	retq   

000000000002199e <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEppEi>:
	_M_node = _Rb_tree_increment(_M_node);
	return *this;
      }

      _Self
      operator++(int)
   2199e:	55                   	push   %rbp
   2199f:	48 89 e5             	mov    %rsp,%rbp
   219a2:	48 83 ec 20          	sub    $0x20,%rsp
   219a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   219aa:	89 75 e4             	mov    %esi,-0x1c(%rbp)
      {
	_Self __tmp = *this;
   219ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   219b1:	48 8b 00             	mov    (%rax),%rax
   219b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   219b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   219bc:	48 8b 00             	mov    (%rax),%rax
   219bf:	48 89 c7             	mov    %rax,%rdi
   219c2:	e8 49 45 ff ff       	callq  15f10 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
   219c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   219cb:	48 89 02             	mov    %rax,(%rdx)
	return __tmp;
   219ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
   219d2:	c9                   	leaveq 
   219d3:	c3                   	retq   

00000000000219d4 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE5eraseESt23_Rb_tree_const_iteratorIS6_E>:
    public:
#ifdef __GXX_EXPERIMENTAL_CXX0X__
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // DR 130. Associative erase should return an iterator.
      iterator
      erase(const_iterator __position)
   219d4:	55                   	push   %rbp
   219d5:	48 89 e5             	mov    %rsp,%rbp
   219d8:	48 83 ec 20          	sub    $0x20,%rsp
   219dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   219e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	const_iterator __result = __position;
   219e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   219e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	++__result;
   219ec:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   219f0:	48 89 c7             	mov    %rax,%rdi
   219f3:	e8 38 48 ff ff       	callq  16230 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEppEv@plt>
	_M_erase_aux(__position);
   219f8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   219fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21a00:	48 89 d6             	mov    %rdx,%rsi
   21a03:	48 89 c7             	mov    %rax,%rdi
   21a06:	e8 b5 3e ff ff       	callq  158c0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_E@plt>
	return __result._M_const_cast();
   21a0b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   21a0f:	48 89 c7             	mov    %rax,%rdi
   21a12:	e8 e9 40 ff ff       	callq  15b00 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEE13_M_const_castEv@plt>
      }
   21a17:	c9                   	leaveq 
   21a18:	c3                   	retq   
   21a19:	90                   	nop

0000000000021a1a <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE14_M_create_nodeIIS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_>:
	_M_put_node(__p);
      }
#else
      template<typename... _Args>
        _Link_type
        _M_create_node(_Args&&... __args)
   21a1a:	55                   	push   %rbp
   21a1b:	48 89 e5             	mov    %rsp,%rbp
   21a1e:	53                   	push   %rbx
   21a1f:	48 83 ec 28          	sub    $0x28,%rsp
   21a23:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   21a27:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	{
	  _Link_type __tmp = _M_get_node();
   21a2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21a2f:	48 89 c7             	mov    %rax,%rdi
   21a32:	e8 49 47 ff ff       	callq  16180 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_get_nodeEv@plt>
   21a37:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  __try
	    {
	      _M_get_Node_allocator().construct(__tmp,
   21a3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21a3f:	48 89 c7             	mov    %rax,%rdi
   21a42:	e8 d9 40 ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   21a47:	48 89 c3             	mov    %rax,%rbx
   21a4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21a4e:	48 89 c7             	mov    %rax,%rdi
   21a51:	e8 ea 3a ff ff       	callq  15540 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE21_M_get_Node_allocatorEv@plt>
   21a56:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   21a5a:	48 89 da             	mov    %rbx,%rdx
   21a5d:	48 89 ce             	mov    %rcx,%rsi
   21a60:	48 89 c7             	mov    %rax,%rdi
   21a63:	e8 c8 4e ff ff       	callq  16930 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE9constructIIS4_EEEvPS5_DpOT_@plt>
	  __catch(...)
	    {
	      _M_put_node(__tmp);
	      __throw_exception_again;
	    }
	  return __tmp;
   21a68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   21a6c:	48 83 c4 28          	add    $0x28,%rsp
   21a70:	5b                   	pop    %rbx
   21a71:	5d                   	pop    %rbp
   21a72:	c3                   	retq   
   21a73:	48 89 c3             	mov    %rax,%rbx
	  __try
	    {
	      _M_get_Node_allocator().construct(__tmp,
					     std::forward<_Args>(__args)...);
	    }
	  __catch(...)
   21a76:	e8 a5 4d ff ff       	callq  16820 <__cxa_end_catch@plt>
   21a7b:	48 89 d8             	mov    %rbx,%rax
   21a7e:	48 89 c7             	mov    %rax,%rdi
   21a81:	e8 2a 50 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   21a86:	48 89 c7             	mov    %rax,%rdi
   21a89:	e8 92 4e ff ff       	callq  16920 <__cxa_begin_catch@plt>
	    {
	      _M_put_node(__tmp);
   21a8e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21a92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21a96:	48 89 d6             	mov    %rdx,%rsi
   21a99:	48 89 c7             	mov    %rax,%rdi
   21a9c:	e8 ef 4c ff ff       	callq  16790 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E@plt>
	      __throw_exception_again;
   21aa1:	e8 9a 3c ff ff       	callq  15740 <__cxa_rethrow@plt>

0000000000021aa6 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE5beginEv>:
      _Compare
      key_comp() const
      { return _M_impl._M_key_compare; }

      iterator
      begin()
   21aa6:	55                   	push   %rbp
   21aa7:	48 89 e5             	mov    %rsp,%rbp
   21aaa:	48 83 ec 20          	sub    $0x20,%rsp
   21aae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { 
	return iterator(static_cast<_Link_type>
			(this->_M_impl._M_header._M_left));
   21ab2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21ab6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   21aba:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   21abe:	48 89 d6             	mov    %rdx,%rsi
   21ac1:	48 89 c7             	mov    %rax,%rdi
   21ac4:	e8 c7 42 ff ff       	callq  15d90 <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEC1EPSt13_Rb_tree_nodeIS2_E@plt>
   21ac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
   21acd:	c9                   	leaveq 
   21ace:	c3                   	retq   
   21acf:	90                   	nop

0000000000021ad0 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bvEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   21ad0:	55                   	push   %rbp
   21ad1:	48 89 e5             	mov    %rsp,%rbp
   21ad4:	48 83 ec 20          	sub    $0x20,%rsp
   21ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21adc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21ae0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   21ae4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21ae8:	48 89 c7             	mov    %rax,%rdi
   21aeb:	e8 10 41 ff ff       	callq  15c00 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKibEEEOT_RNSt16remove_referenceIS5_E4typeE@plt>
   21af0:	48 89 c2             	mov    %rax,%rdx
   21af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21af7:	48 8b 12             	mov    (%rdx),%rdx
   21afa:	48 89 10             	mov    %rdx,(%rax)
   21afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21b01:	48 89 c7             	mov    %rax,%rdi
   21b04:	e8 57 3a ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   21b09:	0f b6 10             	movzbl (%rax),%edx
   21b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b10:	88 50 08             	mov    %dl,0x8(%rax)
   21b13:	c9                   	leaveq 
   21b14:	c3                   	retq   
   21b15:	90                   	nop

0000000000021b16 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IS3_bEEOS_IT_T0_E>:

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   21b16:	55                   	push   %rbp
   21b17:	48 89 e5             	mov    %rsp,%rbp
   21b1a:	48 83 ec 10          	sub    $0x10,%rsp
   21b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21b22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   21b26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21b2a:	48 89 c7             	mov    %rax,%rdi
   21b2d:	e8 ce 40 ff ff       	callq  15c00 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKibEEEOT_RNSt16remove_referenceIS5_E4typeE@plt>
   21b32:	48 89 c2             	mov    %rax,%rdx
   21b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b39:	48 8b 12             	mov    (%rdx),%rdx
   21b3c:	48 89 10             	mov    %rdx,(%rax)
   21b3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21b43:	48 83 c0 08          	add    $0x8,%rax
   21b47:	48 89 c7             	mov    %rax,%rdi
   21b4a:	e8 11 3a ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   21b4f:	0f b6 10             	movzbl (%rax),%edx
   21b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b56:	88 50 08             	mov    %dl,0x8(%rax)
   21b59:	c9                   	leaveq 
   21b5a:	c3                   	retq   
   21b5b:	90                   	nop

0000000000021b5c <_ZNSt17_Rb_tree_iteratorISt4pairIKibEEmmEv>:
	_M_node = _Rb_tree_increment(_M_node);
	return __tmp;
      }

      _Self&
      operator--()
   21b5c:	55                   	push   %rbp
   21b5d:	48 89 e5             	mov    %rsp,%rbp
   21b60:	48 83 ec 10          	sub    $0x10,%rsp
   21b64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_node = _Rb_tree_decrement(_M_node);
   21b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b6c:	48 8b 00             	mov    (%rax),%rax
   21b6f:	48 89 c7             	mov    %rax,%rdi
   21b72:	e8 29 3d ff ff       	callq  158a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   21b77:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21b7b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   21b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   21b82:	c9                   	leaveq 
   21b83:	c3                   	retq   

0000000000021b84 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKibEEbEC1IRS3_bvEEOT_OT0_>:
	: first(__x), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2, class = typename
	       std::enable_if<std::is_convertible<_U1, _T1>::value
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
   21b84:	55                   	push   %rbp
   21b85:	48 89 e5             	mov    %rsp,%rbp
   21b88:	48 83 ec 20          	sub    $0x20,%rsp
   21b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21b90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21b94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   21b98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21b9c:	48 89 c7             	mov    %rax,%rdi
   21b9f:	e8 1c 3f ff ff       	callq  15ac0 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKibEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>
   21ba4:	48 89 c2             	mov    %rax,%rdx
   21ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21bab:	48 8b 12             	mov    (%rdx),%rdx
   21bae:	48 89 10             	mov    %rdx,(%rax)
   21bb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21bb5:	48 89 c7             	mov    %rax,%rdi
   21bb8:	e8 a3 39 ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   21bbd:	0f b6 10             	movzbl (%rax),%edx
   21bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21bc4:	88 50 08             	mov    %dl,0x8(%rax)
   21bc7:	c9                   	leaveq 
   21bc8:	c3                   	retq   
   21bc9:	90                   	nop

0000000000021bca <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE11_M_get_nodeEv>:
      get_allocator() const
      { return allocator_type(_M_get_Node_allocator()); }

    protected:
      _Link_type
      _M_get_node()
   21bca:	55                   	push   %rbp
   21bcb:	48 89 e5             	mov    %rsp,%rbp
   21bce:	48 83 ec 10          	sub    $0x10,%rsp
   21bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._Node_allocator::allocate(1); }
   21bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21bda:	ba 00 00 00 00       	mov    $0x0,%edx
   21bdf:	be 01 00 00 00       	mov    $0x1,%esi
   21be4:	48 89 c7             	mov    %rax,%rdi
   21be7:	e8 54 3a ff ff       	callq  15640 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE8allocateEmPKv@plt>
   21bec:	c9                   	leaveq 
   21bed:	c3                   	retq   

0000000000021bee <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_>:
      { ::new((void *)__p) _Tp(__val); }

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename... _Args>
        void
        construct(pointer __p, _Args&&... __args)
   21bee:	55                   	push   %rbp
   21bef:	48 89 e5             	mov    %rsp,%rbp
   21bf2:	41 55                	push   %r13
   21bf4:	41 54                	push   %r12
   21bf6:	53                   	push   %rbx
   21bf7:	48 83 ec 28          	sub    $0x28,%rsp
   21bfb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   21bff:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   21c03:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	{ ::new((void *)__p) _Tp(std::forward<_Args>(__args)...); }
   21c07:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21c0b:	48 89 c7             	mov    %rax,%rdi
   21c0e:	e8 8d 3b ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   21c13:	49 89 c5             	mov    %rax,%r13
   21c16:	4c 8b 65 d0          	mov    -0x30(%rbp),%r12
   21c1a:	4c 89 e6             	mov    %r12,%rsi
   21c1d:	bf a8 00 00 00       	mov    $0xa8,%edi
   21c22:	e8 69 3d ff ff       	callq  15990 <_ZnwmPv@plt>
   21c27:	48 89 c3             	mov    %rax,%rbx
   21c2a:	48 85 db             	test   %rbx,%rbx
   21c2d:	74 26                	je     21c55 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_+0x67>
   21c2f:	4c 89 ee             	mov    %r13,%rsi
   21c32:	48 89 df             	mov    %rbx,%rdi
   21c35:	e8 b6 4c ff ff       	callq  168f0 <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1IIS6_EEEDpOT_@plt>
   21c3a:	eb 19                	jmp    21c55 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE9constructIIS8_EEEvPS9_DpOT_+0x67>
   21c3c:	49 89 c5             	mov    %rax,%r13
   21c3f:	4c 89 e6             	mov    %r12,%rsi
   21c42:	48 89 df             	mov    %rbx,%rdi
   21c45:	e8 c6 4d ff ff       	callq  16a10 <_ZdlPvS_@plt>
   21c4a:	4c 89 e8             	mov    %r13,%rax
   21c4d:	48 89 c7             	mov    %rax,%rdi
   21c50:	e8 5b 4e ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   21c55:	48 83 c4 28          	add    $0x28,%rsp
   21c59:	5b                   	pop    %rbx
   21c5a:	41 5c                	pop    %r12
   21c5c:	41 5d                	pop    %r13
   21c5e:	5d                   	pop    %rbp
   21c5f:	c3                   	retq   

0000000000021c60 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEEOT_RNSt16remove_referenceISA_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   21c60:	55                   	push   %rbp
   21c61:	48 89 e5             	mov    %rsp,%rbp
   21c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   21c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21c6c:	5d                   	pop    %rbp
   21c6d:	c3                   	retq   

0000000000021c6e <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE7_M_rootEv>:

      _Rb_tree_impl<_Compare> _M_impl;

    protected:
      _Base_ptr&
      _M_root()
   21c6e:	55                   	push   %rbp
   21c6f:	48 89 e5             	mov    %rsp,%rbp
   21c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_parent; }
   21c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21c7a:	48 83 c0 10          	add    $0x10,%rax
   21c7e:	5d                   	pop    %rbp
   21c7f:	c3                   	retq   

0000000000021c80 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS6_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   21c80:	55                   	push   %rbp
   21c81:	48 89 e5             	mov    %rsp,%rbp
   21c84:	48 83 ec 20          	sub    $0x20,%rsp
   21c88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21c8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase_aux(const_iterator __position)
    {
      _Link_type __y =
	static_cast<_Link_type>(_Rb_tree_rebalance_for_erase
				(const_cast<_Base_ptr>(__position._M_node),
				 this->_M_impl._M_header));
   21c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21c94:	48 8d 50 08          	lea    0x8(%rax),%rdx
   21c98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21c9c:	48 89 d6             	mov    %rdx,%rsi
   21c9f:	48 89 c7             	mov    %rax,%rdi
   21ca2:	e8 f9 47 ff ff       	callq  164a0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>
   21ca7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_destroy_node(__y);
   21cab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21caf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21cb3:	48 89 d6             	mov    %rdx,%rsi
   21cb6:	48 89 c7             	mov    %rax,%rdi
   21cb9:	e8 12 4d ff ff       	callq  169d0 <_ZNSt8_Rb_treeIiSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEESt10_Select1stIS6_ESt4lessIiESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E@plt>
      --_M_impl._M_node_count;
   21cbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21cc2:	48 8b 40 28          	mov    0x28(%rax),%rax
   21cc6:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   21cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21cce:	48 89 50 28          	mov    %rdx,0x28(%rax)
    }
   21cd2:	c9                   	leaveq 
   21cd3:	c3                   	retq   

0000000000021cd4 <_ZNSt8_Rb_treeIiSt4pairIKibESt10_Select1stIS2_ESt4lessIiESaIS2_EE11_M_get_nodeEv>:
      get_allocator() const
      { return allocator_type(_M_get_Node_allocator()); }

    protected:
      _Link_type
      _M_get_node()
   21cd4:	55                   	push   %rbp
   21cd5:	48 89 e5             	mov    %rsp,%rbp
   21cd8:	48 83 ec 10          	sub    $0x10,%rsp
   21cdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._Node_allocator::allocate(1); }
   21ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ce4:	ba 00 00 00 00       	mov    $0x0,%edx
   21ce9:	be 01 00 00 00       	mov    $0x1,%esi
   21cee:	48 89 c7             	mov    %rax,%rdi
   21cf1:	e8 1a 3b ff ff       	callq  15810 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE8allocateEmPKv@plt>
   21cf6:	c9                   	leaveq 
   21cf7:	c3                   	retq   

0000000000021cf8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE9constructIIS4_EEEvPS5_DpOT_>:
      { ::new((void *)__p) _Tp(__val); }

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename... _Args>
        void
        construct(pointer __p, _Args&&... __args)
   21cf8:	55                   	push   %rbp
   21cf9:	48 89 e5             	mov    %rsp,%rbp
   21cfc:	41 55                	push   %r13
   21cfe:	41 54                	push   %r12
   21d00:	53                   	push   %rbx
   21d01:	48 83 ec 28          	sub    $0x28,%rsp
   21d05:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   21d09:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   21d0d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	{ ::new((void *)__p) _Tp(std::forward<_Args>(__args)...); }
   21d11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21d15:	48 89 c7             	mov    %rax,%rdi
   21d18:	e8 03 3e ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   21d1d:	49 89 c5             	mov    %rax,%r13
   21d20:	4c 8b 65 d0          	mov    -0x30(%rbp),%r12
   21d24:	4c 89 e6             	mov    %r12,%rsi
   21d27:	bf 28 00 00 00       	mov    $0x28,%edi
   21d2c:	e8 5f 3c ff ff       	callq  15990 <_ZnwmPv@plt>
   21d31:	48 89 c3             	mov    %rax,%rbx
   21d34:	48 85 db             	test   %rbx,%rbx
   21d37:	74 26                	je     21d5f <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE9constructIIS4_EEEvPS5_DpOT_+0x67>
   21d39:	4c 89 ee             	mov    %r13,%rsi
   21d3c:	48 89 df             	mov    %rbx,%rdi
   21d3f:	e8 8c 37 ff ff       	callq  154d0 <_ZNSt13_Rb_tree_nodeISt4pairIKibEEC1IIS2_EEEDpOT_@plt>
   21d44:	eb 19                	jmp    21d5f <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE9constructIIS4_EEEvPS5_DpOT_+0x67>
   21d46:	49 89 c5             	mov    %rax,%r13
   21d49:	4c 89 e6             	mov    %r12,%rsi
   21d4c:	48 89 df             	mov    %rbx,%rdi
   21d4f:	e8 bc 4c ff ff       	callq  16a10 <_ZdlPvS_@plt>
   21d54:	4c 89 e8             	mov    %r13,%rax
   21d57:	48 89 c7             	mov    %rax,%rdi
   21d5a:	e8 51 4d ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   21d5f:	48 83 c4 28          	add    $0x28,%rsp
   21d63:	5b                   	pop    %rbx
   21d64:	41 5c                	pop    %r12
   21d66:	41 5d                	pop    %r13
   21d68:	5d                   	pop    %rbp
   21d69:	c3                   	retq   

0000000000021d6a <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKibEEEOT_RNSt16remove_referenceIS5_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   21d6a:	55                   	push   %rbp
   21d6b:	48 89 e5             	mov    %rsp,%rbp
   21d6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   21d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d76:	5d                   	pop    %rbp
   21d77:	c3                   	retq   

0000000000021d78 <_ZSt7forwardIRSt17_Rb_tree_iteratorISt4pairIKibEEEOT_RNSt16remove_referenceIS6_E4typeE>:
_GLIBCXX_BEGIN_NAMESPACE_VERSION
  
  /// forward (as per N3143)
  template<typename _Tp>
    inline _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) 
   21d78:	55                   	push   %rbp
   21d79:	48 89 e5             	mov    %rsp,%rbp
   21d7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   21d80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d84:	5d                   	pop    %rbp
   21d85:	c3                   	retq   

0000000000021d86 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE8allocateEmPKv>:
      address(const_reference __x) const { return std::__addressof(__x); }

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      pointer
      allocate(size_type __n, const void* = 0)
   21d86:	55                   	push   %rbp
   21d87:	48 89 e5             	mov    %rsp,%rbp
   21d8a:	48 83 ec 20          	sub    $0x20,%rsp
   21d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21d96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { 
	if (__n > this->max_size())
   21d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d9e:	48 89 c7             	mov    %rax,%rdi
   21da1:	e8 5a 40 ff ff       	callq  15e00 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE8max_sizeEv@plt>
   21da6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21daa:	0f 92 c0             	setb   %al
   21dad:	84 c0                	test   %al,%al
   21daf:	74 05                	je     21db6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE8allocateEmPKv+0x30>
	  std::__throw_bad_alloc();
   21db1:	e8 9a 4a ff ff       	callq  16850 <_ZSt17__throw_bad_allocv@plt>

	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
   21db6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21dba:	48 89 d0             	mov    %rdx,%rax
   21dbd:	48 c1 e0 02          	shl    $0x2,%rax
   21dc1:	48 01 d0             	add    %rdx,%rax
   21dc4:	48 c1 e0 02          	shl    $0x2,%rax
   21dc8:	48 01 d0             	add    %rdx,%rax
   21dcb:	48 c1 e0 03          	shl    $0x3,%rax
   21dcf:	48 89 c7             	mov    %rax,%rdi
   21dd2:	e8 b9 4c ff ff       	callq  16a90 <_Znwm@plt>
      }
   21dd7:	c9                   	leaveq 
   21dd8:	c3                   	retq   
   21dd9:	90                   	nop

0000000000021dda <_ZNSt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEC1IIS6_EEEDpOT_>:
      typedef _Rb_tree_node<_Val>* _Link_type;
      _Val _M_value_field;

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename... _Args>
        _Rb_tree_node(_Args&&... __args)
   21dda:	55                   	push   %rbp
   21ddb:	48 89 e5             	mov    %rsp,%rbp
   21dde:	48 83 ec 10          	sub    $0x10,%rsp
   21de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21de6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Rb_tree_node_base(),
	  _M_value_field(std::forward<_Args>(__args)...) { }
   21dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21dee:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   21df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21df8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   21dff:	00 
   21e00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e04:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   21e0b:	00 
   21e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e10:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   21e17:	00 
   21e18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21e1c:	48 89 c7             	mov    %rax,%rdi
   21e1f:	e8 7c 39 ff ff       	callq  157a0 <_ZSt7forwardISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEOT_RNSt16remove_referenceIS7_E4typeE@plt>
   21e24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21e28:	48 83 c2 20          	add    $0x20,%rdx
   21e2c:	48 89 c6             	mov    %rax,%rsi
   21e2f:	48 89 d7             	mov    %rdx,%rdi
   21e32:	e8 e9 43 ff ff       	callq  16220 <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEC1IS0_S4_EEOS_IT_T0_E@plt>
   21e37:	c9                   	leaveq 
   21e38:	c3                   	retq   
   21e39:	90                   	nop

0000000000021e3a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE8allocateEmPKv>:
      address(const_reference __x) const { return std::__addressof(__x); }

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      pointer
      allocate(size_type __n, const void* = 0)
   21e3a:	55                   	push   %rbp
   21e3b:	48 89 e5             	mov    %rsp,%rbp
   21e3e:	48 83 ec 20          	sub    $0x20,%rsp
   21e42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21e46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21e4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { 
	if (__n > this->max_size())
   21e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e52:	48 89 c7             	mov    %rax,%rdi
   21e55:	e8 66 4c ff ff       	callq  16ac0 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE8max_sizeEv@plt>
   21e5a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21e5e:	0f 92 c0             	setb   %al
   21e61:	84 c0                	test   %al,%al
   21e63:	74 05                	je     21e6a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE8allocateEmPKv+0x30>
	  std::__throw_bad_alloc();
   21e65:	e8 e6 49 ff ff       	callq  16850 <_ZSt17__throw_bad_allocv@plt>

	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
   21e6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21e6e:	48 89 d0             	mov    %rdx,%rax
   21e71:	48 c1 e0 02          	shl    $0x2,%rax
   21e75:	48 01 d0             	add    %rdx,%rax
   21e78:	48 c1 e0 03          	shl    $0x3,%rax
   21e7c:	48 89 c7             	mov    %rax,%rdi
   21e7f:	e8 0c 4c ff ff       	callq  16a90 <_Znwm@plt>
      }
   21e84:	c9                   	leaveq 
   21e85:	c3                   	retq   

0000000000021e86 <_ZNSt13_Rb_tree_nodeISt4pairIKibEEC1IIS2_EEEDpOT_>:
      typedef _Rb_tree_node<_Val>* _Link_type;
      _Val _M_value_field;

#ifdef __GXX_EXPERIMENTAL_CXX0X__
      template<typename... _Args>
        _Rb_tree_node(_Args&&... __args)
   21e86:	55                   	push   %rbp
   21e87:	48 89 e5             	mov    %rsp,%rbp
   21e8a:	48 83 ec 10          	sub    $0x10,%rsp
   21e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21e92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Rb_tree_node_base(),
	  _M_value_field(std::forward<_Args>(__args)...) { }
   21e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e9a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   21ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ea4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   21eab:	00 
   21eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21eb0:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   21eb7:	00 
   21eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ebc:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   21ec3:	00 
   21ec4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21ec8:	48 89 c7             	mov    %rax,%rdi
   21ecb:	e8 50 3c ff ff       	callq  15b20 <_ZSt7forwardISt4pairIKibEEOT_RNSt16remove_referenceIS3_E4typeE@plt>
   21ed0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21ed4:	48 83 c2 20          	add    $0x20,%rdx
   21ed8:	48 89 c6             	mov    %rax,%rsi
   21edb:	48 89 d7             	mov    %rdx,%rdi
   21ede:	e8 5d 35 ff ff       	callq  15440 <_ZNSt4pairIKibEC1IS0_bEEOS_IT_T0_E@plt>
   21ee3:	c9                   	leaveq 
   21ee4:	c3                   	retq   
   21ee5:	90                   	nop

0000000000021ee6 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEEE8max_sizeEv>:
      void
      deallocate(pointer __p, size_type)
      { ::operator delete(__p); }

      size_type
      max_size() const throw() 
   21ee6:	55                   	push   %rbp
   21ee7:	48 89 e5             	mov    %rsp,%rbp
   21eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_t(-1) / sizeof(_Tp); }
   21eee:	48 b8 86 61 18 86 61 	movabs $0x186186186186186,%rax
   21ef5:	18 86 01 
   21ef8:	5d                   	pop    %rbp
   21ef9:	c3                   	retq   

0000000000021efa <_ZNSt4pairIKiN6xaxaxa7Sockets13SocketManager8taskInfoEEC1IS0_S4_EEOS_IT_T0_E>:

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   21efa:	55                   	push   %rbp
   21efb:	48 89 e5             	mov    %rsp,%rbp
   21efe:	48 83 ec 10          	sub    $0x10,%rsp
   21f02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21f06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   21f0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21f0e:	48 89 c7             	mov    %rax,%rdi
   21f11:	e8 ba 37 ff ff       	callq  156d0 <_ZSt7forwardIKiEOT_RNSt16remove_referenceIS1_E4typeE@plt>
   21f16:	8b 10                	mov    (%rax),%edx
   21f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f1c:	89 10                	mov    %edx,(%rax)
   21f1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21f22:	48 83 c0 08          	add    $0x8,%rax
   21f26:	48 89 c7             	mov    %rax,%rdi
   21f29:	e8 92 41 ff ff       	callq  160c0 <_ZSt7forwardIN6xaxaxa7Sockets13SocketManager8taskInfoEEOT_RNSt16remove_referenceIS4_E4typeE@plt>
   21f2e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21f32:	48 83 c2 08          	add    $0x8,%rdx
   21f36:	48 89 c6             	mov    %rax,%rsi
   21f39:	48 89 d7             	mov    %rdx,%rdi
   21f3c:	e8 0f 44 ff ff       	callq  16350 <_ZN6xaxaxa7Sockets13SocketManager8taskInfoC1ERKS2_@plt>
   21f41:	c9                   	leaveq 
   21f42:	c3                   	retq   
   21f43:	90                   	nop

0000000000021f44 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKibEEE8max_sizeEv>:
      void
      deallocate(pointer __p, size_type)
      { ::operator delete(__p); }

      size_type
      max_size() const throw() 
   21f44:	55                   	push   %rbp
   21f45:	48 89 e5             	mov    %rsp,%rbp
   21f48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_t(-1) / sizeof(_Tp); }
   21f4c:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   21f53:	66 66 06 
   21f56:	5d                   	pop    %rbp
   21f57:	c3                   	retq   

0000000000021f58 <_ZNSt4pairIKibEC1IS0_bEEOS_IT_T0_E>:
			      && std::is_convertible<_U2, _T2>::value>::type>
	pair(_U1&& __x, _U2&& __y)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }

      template<class _U1, class _U2>
	pair(pair<_U1, _U2>&& __p)
   21f58:	55                   	push   %rbp
   21f59:	48 89 e5             	mov    %rsp,%rbp
   21f5c:	48 83 ec 10          	sub    $0x10,%rsp
   21f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21f64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }
   21f68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21f6c:	48 89 c7             	mov    %rax,%rdi
   21f6f:	e8 5c 37 ff ff       	callq  156d0 <_ZSt7forwardIKiEOT_RNSt16remove_referenceIS1_E4typeE@plt>
   21f74:	8b 10                	mov    (%rax),%edx
   21f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f7a:	89 10                	mov    %edx,(%rax)
   21f7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21f80:	48 83 c0 04          	add    $0x4,%rax
   21f84:	48 89 c7             	mov    %rax,%rdi
   21f87:	e8 d4 35 ff ff       	callq  15560 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE@plt>
   21f8c:	0f b6 10             	movzbl (%rax),%edx
   21f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f93:	88 50 04             	mov    %dl,0x4(%rax)
   21f96:	c9                   	leaveq 
   21f97:	c3                   	retq   

0000000000021f98 <_ZN6xaxaxa10FileStreamC1ENS_4FileE>:
	int __Buffer_bytes_get()
	{
		return __Buffer_bytes_allocated;
	}
#endif
	FileStream::FileStream(File f):f(f)
   21f98:	55                   	push   %rbp
   21f99:	48 89 e5             	mov    %rsp,%rbp
   21f9c:	48 83 ec 10          	sub    $0x10,%rsp
   21fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21fa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21fac:	48 89 c7             	mov    %rax,%rdi
   21faf:	e8 bc 42 ff ff       	callq  16270 <_ZN6xaxaxa6StreamC2Ev@plt>
   21fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21fb8:	48 8b 15 39 81 20 00 	mov    0x208139(%rip),%rdx        # 22a0f8 <_DYNAMIC+0x260>
   21fbf:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   21fc3:	48 89 10             	mov    %rdx,(%rax)
   21fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21fca:	48 8d 50 10          	lea    0x10(%rax),%rdx
   21fce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21fd2:	48 89 c6             	mov    %rax,%rsi
   21fd5:	48 89 d7             	mov    %rdx,%rdi
   21fd8:	e8 f3 40 ff ff       	callq  160d0 <_ZN6xaxaxa4FileC1ERKS0_@plt>
	{
	}
   21fdd:	c9                   	leaveq 
   21fde:	c3                   	retq   
   21fdf:	90                   	nop

0000000000021fe0 <_ZN6xaxaxa10FileStreamD1Ev>:
	FileStream::~FileStream()
   21fe0:	55                   	push   %rbp
   21fe1:	48 89 e5             	mov    %rsp,%rbp
   21fe4:	53                   	push   %rbx
   21fe5:	48 83 ec 18          	sub    $0x18,%rsp
   21fe9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21fed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21ff1:	48 8b 15 00 81 20 00 	mov    0x208100(%rip),%rdx        # 22a0f8 <_DYNAMIC+0x260>
   21ff8:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   21ffc:	48 89 10             	mov    %rdx,(%rax)
	{
		Close();
   21fff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22003:	48 89 c7             	mov    %rax,%rdi
   22006:	e8 25 43 ff ff       	callq  16330 <_ZN6xaxaxa10FileStream5CloseEv@plt>
	}
#endif
	FileStream::FileStream(File f):f(f)
	{
	}
	FileStream::~FileStream()
   2200b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2200f:	48 83 c0 10          	add    $0x10,%rax
   22013:	48 89 c7             	mov    %rax,%rdi
   22016:	e8 95 32 ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
   2201b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2201f:	48 89 c7             	mov    %rax,%rdi
   22022:	e8 79 49 ff ff       	callq  169a0 <_ZN6xaxaxa6StreamD2Ev@plt>
	{
		Close();
	}
   22027:	b8 00 00 00 00       	mov    $0x0,%eax
   2202c:	83 e0 01             	and    $0x1,%eax
   2202f:	84 c0                	test   %al,%al
   22031:	74 38                	je     2206b <_ZN6xaxaxa10FileStreamD1Ev+0x8b>
   22033:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22037:	48 89 c7             	mov    %rax,%rdi
   2203a:	e8 b1 35 ff ff       	callq  155f0 <_ZdlPv@plt>
   2203f:	eb 2a                	jmp    2206b <_ZN6xaxaxa10FileStreamD1Ev+0x8b>
   22041:	48 89 c3             	mov    %rax,%rbx
	}
#endif
	FileStream::FileStream(File f):f(f)
	{
	}
	FileStream::~FileStream()
   22044:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22048:	48 83 c0 10          	add    $0x10,%rax
   2204c:	48 89 c7             	mov    %rax,%rdi
   2204f:	e8 5c 32 ff ff       	callq  152b0 <_ZN6xaxaxa4FileD1Ev@plt>
   22054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22058:	48 89 c7             	mov    %rax,%rdi
   2205b:	e8 40 49 ff ff       	callq  169a0 <_ZN6xaxaxa6StreamD2Ev@plt>
   22060:	48 89 d8             	mov    %rbx,%rax
   22063:	48 89 c7             	mov    %rax,%rdi
   22066:	e8 45 4a ff ff       	callq  16ab0 <_Unwind_Resume@plt>
	{
		Close();
	}
   2206b:	48 83 c4 18          	add    $0x18,%rsp
   2206f:	5b                   	pop    %rbx
   22070:	5d                   	pop    %rbp
   22071:	c3                   	retq   

0000000000022072 <_ZN6xaxaxa10FileStreamD0Ev>:
	}
#endif
	FileStream::FileStream(File f):f(f)
	{
	}
	FileStream::~FileStream()
   22072:	55                   	push   %rbp
   22073:	48 89 e5             	mov    %rsp,%rbp
   22076:	48 83 ec 10          	sub    $0x10,%rsp
   2207a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{
		Close();
	}
   2207e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22082:	48 89 c7             	mov    %rax,%rdi
   22085:	e8 d6 48 ff ff       	callq  16960 <_ZN6xaxaxa10FileStreamD1Ev@plt>
   2208a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2208e:	48 89 c7             	mov    %rax,%rdi
   22091:	e8 5a 35 ff ff       	callq  155f0 <_ZdlPv@plt>
   22096:	c9                   	leaveq 
   22097:	c3                   	retq   

0000000000022098 <_ZN6xaxaxa10FileStream4ReadENS_6BufferE>:
	int FileStream::Read(Buffer buf)
	{
   22098:	55                   	push   %rbp
   22099:	48 89 e5             	mov    %rsp,%rbp
   2209c:	53                   	push   %rbx
   2209d:	48 83 ec 38          	sub    $0x38,%rsp
   220a1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   220a5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
		return f.Read(buf);
   220a9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   220ad:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   220b1:	48 89 d6             	mov    %rdx,%rsi
   220b4:	48 89 c7             	mov    %rax,%rdi
   220b7:	e8 24 44 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   220bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   220c0:	48 8d 50 10          	lea    0x10(%rax),%rdx
   220c4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   220c8:	48 89 c6             	mov    %rax,%rsi
   220cb:	48 89 d7             	mov    %rdx,%rdi
   220ce:	e8 3d 32 ff ff       	callq  15310 <_ZN6xaxaxa4File4ReadENS_6BufferE@plt>
   220d3:	89 c3                	mov    %eax,%ebx
   220d5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   220d9:	48 89 c7             	mov    %rax,%rdi
   220dc:	e8 4f 34 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   220e1:	89 d8                	mov    %ebx,%eax
	}
   220e3:	48 83 c4 38          	add    $0x38,%rsp
   220e7:	5b                   	pop    %rbx
   220e8:	5d                   	pop    %rbp
   220e9:	c3                   	retq   
   220ea:	48 89 c3             	mov    %rax,%rbx
	{
		Close();
	}
	int FileStream::Read(Buffer buf)
	{
		return f.Read(buf);
   220ed:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   220f1:	48 89 c7             	mov    %rax,%rdi
   220f4:	e8 37 34 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   220f9:	48 89 d8             	mov    %rbx,%rax
   220fc:	48 89 c7             	mov    %rax,%rdi
   220ff:	e8 ac 49 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000022104 <_ZN6xaxaxa10FileStream5WriteENS_6BufferE>:
	}
	void FileStream::Write(Buffer buf)
	{
   22104:	55                   	push   %rbp
   22105:	48 89 e5             	mov    %rsp,%rbp
   22108:	41 54                	push   %r12
   2210a:	53                   	push   %rbx
   2210b:	48 83 ec 40          	sub    $0x40,%rsp
   2210f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   22113:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
		int bw=0;
   22117:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
		int off=0;
   2211e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
		while(off<buf.Length && (bw=f.Write(buf.SubBuffer(off)))>0)off+=bw;
   22125:	eb 06                	jmp    2212d <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0x29>
   22127:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2212a:	01 45 e8             	add    %eax,-0x18(%rbp)
   2212d:	bb 00 00 00 00       	mov    $0x0,%ebx
   22132:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22136:	8b 40 1c             	mov    0x1c(%rax),%eax
   22139:	3b 45 e8             	cmp    -0x18(%rbp),%eax
   2213c:	7e 42                	jle    22180 <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0x7c>
   2213e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   22142:	8b 55 e8             	mov    -0x18(%rbp),%edx
   22145:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   22149:	48 89 ce             	mov    %rcx,%rsi
   2214c:	48 89 c7             	mov    %rax,%rdi
   2214f:	e8 fc 48 ff ff       	callq  16a50 <_ZNK6xaxaxa6Buffer9SubBufferEi@plt>
   22154:	bb 01 00 00 00       	mov    $0x1,%ebx
   22159:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2215d:	48 8d 50 10          	lea    0x10(%rax),%rdx
   22161:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   22165:	48 89 c6             	mov    %rax,%rsi
   22168:	48 89 d7             	mov    %rdx,%rdi
   2216b:	e8 f0 49 ff ff       	callq  16b60 <_ZN6xaxaxa4File5WriteENS_6BufferE@plt>
   22170:	89 45 ec             	mov    %eax,-0x14(%rbp)
   22173:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   22177:	7e 07                	jle    22180 <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0x7c>
   22179:	b8 01 00 00 00       	mov    $0x1,%eax
   2217e:	eb 05                	jmp    22185 <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0x81>
   22180:	b8 00 00 00 00       	mov    $0x0,%eax
   22185:	41 89 c4             	mov    %eax,%r12d
   22188:	84 db                	test   %bl,%bl
   2218a:	74 0c                	je     22198 <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0x94>
   2218c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   22190:	48 89 c7             	mov    %rax,%rdi
   22193:	e8 98 33 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22198:	45 84 e4             	test   %r12b,%r12b
   2219b:	75 8a                	jne    22127 <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0x23>
	}
   2219d:	eb 1e                	jmp    221bd <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0xb9>
   2219f:	49 89 c4             	mov    %rax,%r12
	}
	void FileStream::Write(Buffer buf)
	{
		int bw=0;
		int off=0;
		while(off<buf.Length && (bw=f.Write(buf.SubBuffer(off)))>0)off+=bw;
   221a2:	84 db                	test   %bl,%bl
   221a4:	74 0c                	je     221b2 <_ZN6xaxaxa10FileStream5WriteENS_6BufferE+0xae>
   221a6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   221aa:	48 89 c7             	mov    %rax,%rdi
   221ad:	e8 7e 33 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   221b2:	4c 89 e0             	mov    %r12,%rax
   221b5:	48 89 c7             	mov    %rax,%rdi
   221b8:	e8 f3 48 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
	}
   221bd:	48 83 c4 40          	add    $0x40,%rsp
   221c1:	5b                   	pop    %rbx
   221c2:	41 5c                	pop    %r12
   221c4:	5d                   	pop    %rbp
   221c5:	c3                   	retq   

00000000000221c6 <_ZN6xaxaxa10FileStream5FlushEv>:
	void FileStream::Flush()
	{
   221c6:	55                   	push   %rbp
   221c7:	48 89 e5             	mov    %rsp,%rbp
   221ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		//::fflush(f);
	}
   221ce:	5d                   	pop    %rbp
   221cf:	c3                   	retq   

00000000000221d0 <_ZN6xaxaxa10FileStream5CloseEv>:
	void FileStream::Close()
	{
   221d0:	55                   	push   %rbp
   221d1:	48 89 e5             	mov    %rsp,%rbp
   221d4:	48 83 ec 10          	sub    $0x10,%rsp
   221d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		f.Close();
   221dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   221e0:	48 83 c0 10          	add    $0x10,%rax
   221e4:	48 89 c7             	mov    %rax,%rdi
   221e7:	e8 94 46 ff ff       	callq  16880 <_ZN6xaxaxa4File5CloseEv@plt>
	}
   221ec:	c9                   	leaveq 
   221ed:	c3                   	retq   

00000000000221ee <_ZN6xaxaxa12StreamReaderC1ERNS_6StreamEi>:

///////////////////////////////////////////////////////////

	StreamReader::StreamReader(Stream& s, int buffersize)
   221ee:	55                   	push   %rbp
   221ef:	48 89 e5             	mov    %rsp,%rbp
   221f2:	48 83 ec 20          	sub    $0x20,%rsp
   221f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   221fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   221fe:	89 55 ec             	mov    %edx,-0x14(%rbp)
   22201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22205:	48 89 c7             	mov    %rax,%rdi
   22208:	e8 63 40 ff ff       	callq  16270 <_ZN6xaxaxa6StreamC2Ev@plt>
   2220d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22211:	48 8b 15 28 7f 20 00 	mov    0x207f28(%rip),%rdx        # 22a140 <_DYNAMIC+0x2a8>
   22218:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   2221c:	48 89 10             	mov    %rdx,(%rax)
	{
		this->s = &s;
   2221f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22223:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   22227:	48 89 50 10          	mov    %rdx,0x10(%rax)
		buf = malloc(buffersize);
   2222b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2222e:	48 98                	cltq   
   22230:	48 89 c7             	mov    %rax,%rdi
   22233:	e8 98 35 ff ff       	callq  157d0 <malloc@plt>
   22238:	48 89 c2             	mov    %rax,%rdx
   2223b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2223f:	48 89 50 18          	mov    %rdx,0x18(%rax)
		this->buf_size = buffersize;
   22243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22247:	8b 55 ec             	mov    -0x14(%rbp),%edx
   2224a:	89 50 20             	mov    %edx,0x20(%rax)
		this->buf_index = 0;
   2224d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22251:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
		this->buf_length = 0;
   22258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2225c:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
	}
   22263:	c9                   	leaveq 
   22264:	c3                   	retq   
   22265:	90                   	nop

0000000000022266 <_ZN6xaxaxa12StreamReaderD1Ev>:
	StreamReader::~StreamReader()
   22266:	55                   	push   %rbp
   22267:	48 89 e5             	mov    %rsp,%rbp
   2226a:	48 83 ec 10          	sub    $0x10,%rsp
   2226e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22276:	48 8b 15 c3 7e 20 00 	mov    0x207ec3(%rip),%rdx        # 22a140 <_DYNAMIC+0x2a8>
   2227d:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   22281:	48 89 10             	mov    %rdx,(%rax)
	{
		free(buf);
   22284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22288:	48 8b 40 18          	mov    0x18(%rax),%rax
   2228c:	48 89 c7             	mov    %rax,%rdi
   2228f:	e8 1c 39 ff ff       	callq  15bb0 <free@plt>
		buf = malloc(buffersize);
		this->buf_size = buffersize;
		this->buf_index = 0;
		this->buf_length = 0;
	}
	StreamReader::~StreamReader()
   22294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22298:	48 89 c7             	mov    %rax,%rdi
   2229b:	e8 00 47 ff ff       	callq  169a0 <_ZN6xaxaxa6StreamD2Ev@plt>
	{
		free(buf);
	}
   222a0:	b8 00 00 00 00       	mov    $0x0,%eax
   222a5:	83 e0 01             	and    $0x1,%eax
   222a8:	84 c0                	test   %al,%al
   222aa:	74 0c                	je     222b8 <_ZN6xaxaxa12StreamReaderD1Ev+0x52>
   222ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   222b0:	48 89 c7             	mov    %rax,%rdi
   222b3:	e8 38 33 ff ff       	callq  155f0 <_ZdlPv@plt>
   222b8:	c9                   	leaveq 
   222b9:	c3                   	retq   

00000000000222ba <_ZN6xaxaxa12StreamReaderD0Ev>:
		buf = malloc(buffersize);
		this->buf_size = buffersize;
		this->buf_index = 0;
		this->buf_length = 0;
	}
	StreamReader::~StreamReader()
   222ba:	55                   	push   %rbp
   222bb:	48 89 e5             	mov    %rsp,%rbp
   222be:	48 83 ec 10          	sub    $0x10,%rsp
   222c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{
		free(buf);
	}
   222c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   222ca:	48 89 c7             	mov    %rax,%rdi
   222cd:	e8 ae 44 ff ff       	callq  16780 <_ZN6xaxaxa12StreamReaderD1Ev@plt>
   222d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   222d6:	48 89 c7             	mov    %rax,%rdi
   222d9:	e8 12 33 ff ff       	callq  155f0 <_ZdlPv@plt>
   222de:	c9                   	leaveq 
   222df:	c3                   	retq   

00000000000222e0 <_ZN6xaxaxa12StreamReader4ReadENS_6BufferE>:
	int StreamReader::Read(Buffer buf)
	{
   222e0:	55                   	push   %rbp
   222e1:	48 89 e5             	mov    %rsp,%rbp
   222e4:	53                   	push   %rbx
   222e5:	48 83 ec 48          	sub    $0x48,%rsp
   222e9:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   222ed:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
		int br = 0;
   222f1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
		
		int tmp = buf_length;
   222f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   222fc:	8b 40 28             	mov    0x28(%rax),%eax
   222ff:	89 45 e8             	mov    %eax,-0x18(%rbp)
		if (buf.Length < tmp) tmp = buf.Length;
   22302:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22306:	8b 40 1c             	mov    0x1c(%rax),%eax
   22309:	3b 45 e8             	cmp    -0x18(%rbp),%eax
   2230c:	7d 0a                	jge    22318 <_ZN6xaxaxa12StreamReader4ReadENS_6BufferE+0x38>
   2230e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22312:	8b 40 1c             	mov    0x1c(%rax),%eax
   22315:	89 45 e8             	mov    %eax,-0x18(%rbp)
		if(tmp>0)
   22318:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   2231c:	0f 8e 84 00 00 00    	jle    223a6 <_ZN6xaxaxa12StreamReader4ReadENS_6BufferE+0xc6>
		{
			memcpy(buf.Data, ((Byte*) this->buf) + buf_index, tmp);
   22322:	8b 45 e8             	mov    -0x18(%rbp),%eax
   22325:	48 63 d0             	movslq %eax,%rdx
   22328:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2232c:	48 8b 48 18          	mov    0x18(%rax),%rcx
   22330:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   22334:	8b 40 24             	mov    0x24(%rax),%eax
   22337:	48 98                	cltq   
   22339:	48 01 c1             	add    %rax,%rcx
   2233c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22340:	48 8b 40 10          	mov    0x10(%rax),%rax
   22344:	48 89 ce             	mov    %rcx,%rsi
   22347:	48 89 c7             	mov    %rax,%rdi
   2234a:	e8 b1 47 ff ff       	callq  16b00 <memcpy@plt>
			buf.Data += tmp;
   2234f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22353:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22357:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2235a:	48 98                	cltq   
   2235c:	48 01 c2             	add    %rax,%rdx
   2235f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22363:	48 89 50 10          	mov    %rdx,0x10(%rax)
			buf.Length -= tmp;
   22367:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   2236b:	8b 40 1c             	mov    0x1c(%rax),%eax
   2236e:	89 c2                	mov    %eax,%edx
   22370:	2b 55 e8             	sub    -0x18(%rbp),%edx
   22373:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22377:	89 50 1c             	mov    %edx,0x1c(%rax)
			buf_index += tmp;
   2237a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2237e:	8b 40 24             	mov    0x24(%rax),%eax
   22381:	89 c2                	mov    %eax,%edx
   22383:	03 55 e8             	add    -0x18(%rbp),%edx
   22386:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2238a:	89 50 24             	mov    %edx,0x24(%rax)
			buf_length -= tmp;
   2238d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   22391:	8b 40 28             	mov    0x28(%rax),%eax
   22394:	89 c2                	mov    %eax,%edx
   22396:	2b 55 e8             	sub    -0x18(%rbp),%edx
   22399:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   2239d:	89 50 28             	mov    %edx,0x28(%rax)
			br += tmp;
   223a0:	8b 45 e8             	mov    -0x18(%rbp),%eax
   223a3:	01 45 ec             	add    %eax,-0x14(%rbp)
		}
		if (buf.Length > 0)
   223a6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   223aa:	8b 40 1c             	mov    0x1c(%rax),%eax
   223ad:	85 c0                	test   %eax,%eax
   223af:	7e 48                	jle    223f9 <_ZN6xaxaxa12StreamReader4ReadENS_6BufferE+0x119>
			br += s->Read(buf);
   223b1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   223b5:	48 8b 40 10          	mov    0x10(%rax),%rax
   223b9:	48 8b 00             	mov    (%rax),%rax
   223bc:	48 83 c0 10          	add    $0x10,%rax
   223c0:	48 8b 18             	mov    (%rax),%rbx
   223c3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   223c7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   223cb:	48 89 d6             	mov    %rdx,%rsi
   223ce:	48 89 c7             	mov    %rax,%rdi
   223d1:	e8 0a 41 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   223d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   223da:	48 8b 40 10          	mov    0x10(%rax),%rax
   223de:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   223e2:	48 89 d6             	mov    %rdx,%rsi
   223e5:	48 89 c7             	mov    %rax,%rdi
   223e8:	ff d3                	callq  *%rbx
   223ea:	01 45 ec             	add    %eax,-0x14(%rbp)
   223ed:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   223f1:	48 89 c7             	mov    %rax,%rdi
   223f4:	e8 37 31 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
		return br;
   223f9:	8b 45 ec             	mov    -0x14(%rbp),%eax
	}
   223fc:	48 83 c4 48          	add    $0x48,%rsp
   22400:	5b                   	pop    %rbx
   22401:	5d                   	pop    %rbp
   22402:	c3                   	retq   
   22403:	48 89 c3             	mov    %rax,%rbx
			buf_index += tmp;
			buf_length -= tmp;
			br += tmp;
		}
		if (buf.Length > 0)
			br += s->Read(buf);
   22406:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   2240a:	48 89 c7             	mov    %rax,%rdi
   2240d:	e8 1e 31 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22412:	48 89 d8             	mov    %rbx,%rax
   22415:	48 89 c7             	mov    %rax,%rdi
   22418:	e8 93 46 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   2241d:	90                   	nop

000000000002241e <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEi>:
		return br;
	}
	int StreamReader::Read(StringBuilder& buf, int length)
	{
   2241e:	55                   	push   %rbp
   2241f:	48 89 e5             	mov    %rsp,%rbp
   22422:	53                   	push   %rbx
   22423:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   2242a:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   22431:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   22438:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
		int br = 0;
   2243e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
		if (buf_length > 0)
   22445:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2244c:	8b 40 28             	mov    0x28(%rax),%eax
   2244f:	85 c0                	test   %eax,%eax
   22451:	0f 8e d0 00 00 00    	jle    22527 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEi+0x109>
		{
			int tmp = buf_length;
   22457:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2245e:	8b 40 28             	mov    0x28(%rax),%eax
   22461:	89 45 e8             	mov    %eax,-0x18(%rbp)
			if (length < tmp) tmp = length;
   22464:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   2246a:	3b 45 e8             	cmp    -0x18(%rbp),%eax
   2246d:	7d 09                	jge    22478 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEi+0x5a>
   2246f:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   22475:	89 45 e8             	mov    %eax,-0x18(%rbp)
			Buffer tmpb((char*) this->buf + buf_index, tmp);
   22478:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2247f:	48 8b 50 18          	mov    0x18(%rax),%rdx
   22483:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2248a:	8b 40 24             	mov    0x24(%rax),%eax
   2248d:	48 98                	cltq   
   2248f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   22493:	8b 55 e8             	mov    -0x18(%rbp),%edx
   22496:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   2249a:	48 89 ce             	mov    %rcx,%rsi
   2249d:	48 89 c7             	mov    %rax,%rdi
   224a0:	e8 9b 45 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
			buf.Append(tmpb);
   224a5:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   224a9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   224ad:	48 89 d6             	mov    %rdx,%rsi
   224b0:	48 89 c7             	mov    %rax,%rdi
   224b3:	e8 28 40 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   224b8:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   224bc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   224c3:	48 89 d6             	mov    %rdx,%rsi
   224c6:	48 89 c7             	mov    %rax,%rdi
   224c9:	e8 b2 34 ff ff       	callq  15980 <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE@plt>
   224ce:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   224d2:	48 89 c7             	mov    %rax,%rdi
   224d5:	e8 56 30 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			length -= tmp;
   224da:	8b 45 e8             	mov    -0x18(%rbp),%eax
   224dd:	29 85 6c ff ff ff    	sub    %eax,-0x94(%rbp)
			buf_index += tmp;
   224e3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   224ea:	8b 40 24             	mov    0x24(%rax),%eax
   224ed:	89 c2                	mov    %eax,%edx
   224ef:	03 55 e8             	add    -0x18(%rbp),%edx
   224f2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   224f9:	89 50 24             	mov    %edx,0x24(%rax)
			buf_length -= tmp;
   224fc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22503:	8b 40 28             	mov    0x28(%rax),%eax
   22506:	89 c2                	mov    %eax,%edx
   22508:	2b 55 e8             	sub    -0x18(%rbp),%edx
   2250b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22512:	89 50 28             	mov    %edx,0x28(%rax)
			br += tmp;
   22515:	8b 45 e8             	mov    -0x18(%rbp),%eax
   22518:	01 45 ec             	add    %eax,-0x14(%rbp)
		int br = 0;
		if (buf_length > 0)
		{
			int tmp = buf_length;
			if (length < tmp) tmp = length;
			Buffer tmpb((char*) this->buf + buf_index, tmp);
   2251b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   2251f:	48 89 c7             	mov    %rax,%rdi
   22522:	e8 09 30 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			length -= tmp;
			buf_index += tmp;
			buf_length -= tmp;
			br += tmp;
		}
		if (length > 0)
   22527:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
   2252e:	0f 8e cc 00 00 00    	jle    22600 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEi+0x1e2>
		{
			buf.EnsureCapacity(buf.Length + length);
   22534:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2253b:	8b 40 1c             	mov    0x1c(%rax),%eax
   2253e:	89 c2                	mov    %eax,%edx
   22540:	03 95 6c ff ff ff    	add    -0x94(%rbp),%edx
   22546:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2254d:	89 d6                	mov    %edx,%esi
   2254f:	48 89 c7             	mov    %rax,%rdi
   22552:	e8 99 33 ff ff       	callq  158f0 <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi@plt>
			Buffer tmpb((char*) (buf.buf) + buf.Length, length);
   22557:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   2255e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   22562:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   22569:	8b 40 1c             	mov    0x1c(%rax),%eax
   2256c:	48 98                	cltq   
   2256e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   22572:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
   22578:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   2257c:	48 89 ce             	mov    %rcx,%rsi
   2257f:	48 89 c7             	mov    %rax,%rdi
   22582:	e8 b9 44 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
			int tmp = s->Read(tmpb);
   22587:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   2258e:	48 8b 40 10          	mov    0x10(%rax),%rax
   22592:	48 8b 00             	mov    (%rax),%rax
   22595:	48 83 c0 10          	add    $0x10,%rax
   22599:	48 8b 18             	mov    (%rax),%rbx
   2259c:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   225a0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   225a4:	48 89 d6             	mov    %rdx,%rsi
   225a7:	48 89 c7             	mov    %rax,%rdi
   225aa:	e8 31 3f ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   225af:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   225b6:	48 8b 40 10          	mov    0x10(%rax),%rax
   225ba:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   225be:	48 89 d6             	mov    %rdx,%rsi
   225c1:	48 89 c7             	mov    %rax,%rdi
   225c4:	ff d3                	callq  *%rbx
   225c6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   225c9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   225cd:	48 89 c7             	mov    %rax,%rdi
   225d0:	e8 5b 2f ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			buf.Length += tmp;
   225d5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   225dc:	8b 40 1c             	mov    0x1c(%rax),%eax
   225df:	89 c2                	mov    %eax,%edx
   225e1:	03 55 e4             	add    -0x1c(%rbp),%edx
   225e4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   225eb:	89 50 1c             	mov    %edx,0x1c(%rax)
			br += tmp;
   225ee:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   225f1:	01 45 ec             	add    %eax,-0x14(%rbp)
			br += tmp;
		}
		if (length > 0)
		{
			buf.EnsureCapacity(buf.Length + length);
			Buffer tmpb((char*) (buf.buf) + buf.Length, length);
   225f4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   225f8:	48 89 c7             	mov    %rax,%rdi
   225fb:	e8 30 2f ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			int tmp = s->Read(tmpb);
			buf.Length += tmp;
			br += tmp;
		}
		return br;
   22600:	8b 45 ec             	mov    -0x14(%rbp),%eax
	}
   22603:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   2260a:	5b                   	pop    %rbx
   2260b:	5d                   	pop    %rbp
   2260c:	c3                   	retq   
   2260d:	48 89 c3             	mov    %rax,%rbx
		if (buf_length > 0)
		{
			int tmp = buf_length;
			if (length < tmp) tmp = length;
			Buffer tmpb((char*) this->buf + buf_index, tmp);
			buf.Append(tmpb);
   22610:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   22614:	48 89 c7             	mov    %rax,%rdi
   22617:	e8 14 2f ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2261c:	eb 03                	jmp    22621 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEi+0x203>
   2261e:	48 89 c3             	mov    %rax,%rbx
		int br = 0;
		if (buf_length > 0)
		{
			int tmp = buf_length;
			if (length < tmp) tmp = length;
			Buffer tmpb((char*) this->buf + buf_index, tmp);
   22621:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   22625:	48 89 c7             	mov    %rax,%rdi
   22628:	e8 03 2f ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2262d:	48 89 d8             	mov    %rbx,%rax
   22630:	48 89 c7             	mov    %rax,%rdi
   22633:	e8 78 44 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   22638:	48 89 c3             	mov    %rax,%rbx
		}
		if (length > 0)
		{
			buf.EnsureCapacity(buf.Length + length);
			Buffer tmpb((char*) (buf.buf) + buf.Length, length);
			int tmp = s->Read(tmpb);
   2263b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   2263f:	48 89 c7             	mov    %rax,%rdi
   22642:	e8 e9 2e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22647:	eb 03                	jmp    2264c <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEi+0x22e>
   22649:	48 89 c3             	mov    %rax,%rbx
			br += tmp;
		}
		if (length > 0)
		{
			buf.EnsureCapacity(buf.Length + length);
			Buffer tmpb((char*) (buf.buf) + buf.Length, length);
   2264c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   22650:	48 89 c7             	mov    %rax,%rdi
   22653:	e8 d8 2e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22658:	48 89 d8             	mov    %rbx,%rax
   2265b:	48 89 c7             	mov    %rax,%rdi
   2265e:	e8 4d 44 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   22663:	90                   	nop

0000000000022664 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci>:
		}
		return br;
	}
	int StreamReader::Read(StringBuilder& buf, const char* delimitors,
			int delimitor_count)
	{
   22664:	55                   	push   %rbp
   22665:	48 89 e5             	mov    %rsp,%rbp
   22668:	41 54                	push   %r12
   2266a:	53                   	push   %rbx
   2266b:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   22672:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   22679:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   22680:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   22687:	89 8d 14 ff ff ff    	mov    %ecx,-0xec(%rbp)
		int br = 0;
   2268d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
		while (1)
		{
			if (buf_length <= 0)
   22694:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2269b:	8b 40 28             	mov    0x28(%rax),%eax
   2269e:	85 c0                	test   %eax,%eax
   226a0:	0f 8f dc 00 00 00    	jg     22782 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x11e>
			{
				Buffer tmpb((char*) this->buf, buf_size);
   226a6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   226ad:	8b 50 20             	mov    0x20(%rax),%edx
   226b0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   226b7:	48 8b 48 18          	mov    0x18(%rax),%rcx
   226bb:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   226c2:	48 89 ce             	mov    %rcx,%rsi
   226c5:	48 89 c7             	mov    %rax,%rdi
   226c8:	e8 73 43 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
				int tmp = s->Read(tmpb);
   226cd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   226d4:	48 8b 40 10          	mov    0x10(%rax),%rax
   226d8:	48 8b 00             	mov    (%rax),%rax
   226db:	48 83 c0 10          	add    $0x10,%rax
   226df:	4c 8b 20             	mov    (%rax),%r12
   226e2:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   226e9:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   226f0:	48 89 d6             	mov    %rdx,%rsi
   226f3:	48 89 c7             	mov    %rax,%rdi
   226f6:	e8 e5 3d ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   226fb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22702:	48 8b 40 10          	mov    0x10(%rax),%rax
   22706:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   2270d:	48 89 d6             	mov    %rdx,%rsi
   22710:	48 89 c7             	mov    %rax,%rdi
   22713:	41 ff d4             	callq  *%r12
   22716:	89 45 dc             	mov    %eax,-0x24(%rbp)
   22719:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   22720:	48 89 c7             	mov    %rax,%rdi
   22723:	e8 08 2e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				if (tmp <= 0) return (br == 0 ? -1 : br);
   22728:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   2272c:	7f 1a                	jg     22748 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0xe4>
   2272e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   22732:	74 05                	je     22739 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0xd5>
   22734:	8b 45 ec             	mov    -0x14(%rbp),%eax
   22737:	eb 05                	jmp    2273e <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0xda>
   22739:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2273e:	89 c3                	mov    %eax,%ebx
   22740:	41 bc 00 00 00 00    	mov    $0x0,%r12d
   22746:	eb 21                	jmp    22769 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x105>
				buf_index = 0;
   22748:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2274f:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
				buf_length = tmp;
   22756:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2275d:	8b 55 dc             	mov    -0x24(%rbp),%edx
   22760:	89 50 28             	mov    %edx,0x28(%rax)
   22763:	41 bc 01 00 00 00    	mov    $0x1,%r12d
		int br = 0;
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
   22769:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22770:	48 89 c7             	mov    %rax,%rdi
   22773:	e8 b8 2d ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				int tmp = s->Read(tmpb);
				if (tmp <= 0) return (br == 0 ? -1 : br);
				buf_index = 0;
				buf_length = tmp;
   22778:	41 83 fc 01          	cmp    $0x1,%r12d
   2277c:	0f 85 6c 02 00 00    	jne    229ee <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x38a>
			}
			int tmp2 = buf_length + buf_index;
   22782:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22789:	8b 50 28             	mov    0x28(%rax),%edx
   2278c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22793:	8b 40 24             	mov    0x24(%rax),%eax
   22796:	01 d0                	add    %edx,%eax
   22798:	89 45 d8             	mov    %eax,-0x28(%rbp)
			for (int i = buf_index; i < tmp2; i++)
   2279b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   227a2:	8b 40 24             	mov    0x24(%rax),%eax
   227a5:	89 45 e8             	mov    %eax,-0x18(%rbp)
   227a8:	e9 93 01 00 00       	jmpq   22940 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x2dc>
			{
				for (int j = 0; j < delimitor_count; j++)
   227ad:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   227b4:	e9 6f 01 00 00       	jmpq   22928 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x2c4>
					if (((char*) (this->buf))[i] == delimitors[j])
   227b9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   227c0:	48 8b 50 18          	mov    0x18(%rax),%rdx
   227c4:	8b 45 e8             	mov    -0x18(%rbp),%eax
   227c7:	48 98                	cltq   
   227c9:	48 01 d0             	add    %rdx,%rax
   227cc:	0f b6 10             	movzbl (%rax),%edx
   227cf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   227d2:	48 98                	cltq   
   227d4:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
   227db:	0f b6 00             	movzbl (%rax),%eax
   227de:	38 c2                	cmp    %al,%dl
   227e0:	0f 85 3e 01 00 00    	jne    22924 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x2c0>
					{
						int tmp = i - buf_index;
   227e6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   227ed:	8b 40 24             	mov    0x24(%rax),%eax
   227f0:	8b 55 e8             	mov    -0x18(%rbp),%edx
   227f3:	89 d1                	mov    %edx,%ecx
   227f5:	29 c1                	sub    %eax,%ecx
   227f7:	89 c8                	mov    %ecx,%eax
   227f9:	89 45 e0             	mov    %eax,-0x20(%rbp)
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   227fc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22803:	48 8b 50 18          	mov    0x18(%rax),%rdx
   22807:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2280e:	8b 40 24             	mov    0x24(%rax),%eax
   22811:	48 98                	cltq   
   22813:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   22817:	8b 55 e0             	mov    -0x20(%rbp),%edx
   2281a:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22821:	48 89 ce             	mov    %rcx,%rsi
   22824:	48 89 c7             	mov    %rax,%rdi
   22827:	e8 14 42 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
						buf.Append(tmpb);
   2282c:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   22833:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   22837:	48 89 d6             	mov    %rdx,%rsi
   2283a:	48 89 c7             	mov    %rax,%rdi
   2283d:	e8 9e 3c ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   22842:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   22846:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2284d:	48 89 d6             	mov    %rdx,%rsi
   22850:	48 89 c7             	mov    %rax,%rdi
   22853:	e8 28 31 ff ff       	callq  15980 <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE@plt>
   22858:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   2285c:	48 89 c7             	mov    %rax,%rdi
   2285f:	e8 cc 2c ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
						br += tmp;
   22864:	8b 45 e0             	mov    -0x20(%rbp),%eax
   22867:	01 45 ec             	add    %eax,-0x14(%rbp)
						tmp++;
   2286a:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
						while (tmp < buf_length)
   2286e:	eb 57                	jmp    228c7 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x263>
						{
							for (j = 0; j < delimitor_count; j++)
   22870:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   22877:	eb 37                	jmp    228b0 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x24c>
								if (((char*) (this->buf))[buf_index + tmp]
   22879:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22880:	48 8b 50 18          	mov    0x18(%rax),%rdx
   22884:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2288b:	8b 40 24             	mov    0x24(%rax),%eax
   2288e:	03 45 e0             	add    -0x20(%rbp),%eax
   22891:	48 98                	cltq   
   22893:	48 01 d0             	add    %rdx,%rax
   22896:	0f b6 10             	movzbl (%rax),%edx
										== delimitors[j]) goto asdfg;
   22899:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2289c:	48 98                	cltq   
   2289e:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
						br += tmp;
						tmp++;
						while (tmp < buf_length)
						{
							for (j = 0; j < delimitor_count; j++)
								if (((char*) (this->buf))[buf_index + tmp]
   228a5:	0f b6 00             	movzbl (%rax),%eax
   228a8:	38 c2                	cmp    %al,%dl
   228aa:	74 16                	je     228c2 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x25e>
						buf.Append(tmpb);
						br += tmp;
						tmp++;
						while (tmp < buf_length)
						{
							for (j = 0; j < delimitor_count; j++)
   228ac:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   228b0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   228b3:	3b 85 14 ff ff ff    	cmp    -0xec(%rbp),%eax
   228b9:	0f 9c c0             	setl   %al
   228bc:	84 c0                	test   %al,%al
   228be:	75 b9                	jne    22879 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x215>
								if (((char*) (this->buf))[buf_index + tmp]
										== delimitors[j]) goto asdfg;
							break;
   228c0:	eb 19                	jmp    228db <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x277>
						tmp++;
						while (tmp < buf_length)
						{
							for (j = 0; j < delimitor_count; j++)
								if (((char*) (this->buf))[buf_index + tmp]
										== delimitors[j]) goto asdfg;
   228c2:	90                   	nop
							break;
							asdfg: tmp++;
   228c3:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
						buf.Append(tmpb);
						br += tmp;
						tmp++;
						while (tmp < buf_length)
   228c7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   228ce:	8b 40 28             	mov    0x28(%rax),%eax
   228d1:	3b 45 e0             	cmp    -0x20(%rbp),%eax
   228d4:	0f 9f c0             	setg   %al
   228d7:	84 c0                	test   %al,%al
   228d9:	75 95                	jne    22870 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x20c>
								if (((char*) (this->buf))[buf_index + tmp]
										== delimitors[j]) goto asdfg;
							break;
							asdfg: tmp++;
						}
						buf_index += tmp;
   228db:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   228e2:	8b 40 24             	mov    0x24(%rax),%eax
   228e5:	89 c2                	mov    %eax,%edx
   228e7:	03 55 e0             	add    -0x20(%rbp),%edx
   228ea:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   228f1:	89 50 24             	mov    %edx,0x24(%rax)
						buf_length -= tmp;
   228f4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   228fb:	8b 40 28             	mov    0x28(%rax),%eax
   228fe:	89 c2                	mov    %eax,%edx
   22900:	2b 55 e0             	sub    -0x20(%rbp),%edx
   22903:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2290a:	89 50 28             	mov    %edx,0x28(%rax)
						return br;
   2290d:	8b 5d ec             	mov    -0x14(%rbp),%ebx
			{
				for (int j = 0; j < delimitor_count; j++)
					if (((char*) (this->buf))[i] == delimitors[j])
					{
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   22910:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22917:	48 89 c7             	mov    %rax,%rdi
   2291a:	e8 11 2c ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2291f:	e9 ca 00 00 00       	jmpq   229ee <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x38a>
				buf_length = tmp;
			}
			int tmp2 = buf_length + buf_index;
			for (int i = buf_index; i < tmp2; i++)
			{
				for (int j = 0; j < delimitor_count; j++)
   22924:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   22928:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2292b:	3b 85 14 ff ff ff    	cmp    -0xec(%rbp),%eax
   22931:	0f 9c c0             	setl   %al
   22934:	84 c0                	test   %al,%al
   22936:	0f 85 7d fe ff ff    	jne    227b9 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x155>
				if (tmp <= 0) return (br == 0 ? -1 : br);
				buf_index = 0;
				buf_length = tmp;
			}
			int tmp2 = buf_length + buf_index;
			for (int i = buf_index; i < tmp2; i++)
   2293c:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
   22940:	8b 45 e8             	mov    -0x18(%rbp),%eax
   22943:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   22946:	0f 9c c0             	setl   %al
   22949:	84 c0                	test   %al,%al
   2294b:	0f 85 5c fe ff ff    	jne    227ad <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x149>
						buf_index += tmp;
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   22951:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22958:	8b 50 28             	mov    0x28(%rax),%edx
   2295b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22962:	48 8b 48 18          	mov    0x18(%rax),%rcx
   22966:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2296d:	8b 40 24             	mov    0x24(%rax),%eax
   22970:	48 98                	cltq   
   22972:	48 01 c1             	add    %rax,%rcx
   22975:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   2297c:	48 89 ce             	mov    %rcx,%rsi
   2297f:	48 89 c7             	mov    %rax,%rdi
   22982:	e8 b9 40 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
			buf.Append(tmpb);
   22987:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   2298e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   22992:	48 89 d6             	mov    %rdx,%rsi
   22995:	48 89 c7             	mov    %rax,%rdi
   22998:	e8 43 3b ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   2299d:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   229a1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   229a8:	48 89 d6             	mov    %rdx,%rsi
   229ab:	48 89 c7             	mov    %rax,%rdi
   229ae:	e8 cd 2f ff ff       	callq  15980 <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE@plt>
   229b3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   229b7:	48 89 c7             	mov    %rax,%rdi
   229ba:	e8 71 2b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			br += buf_length;
   229bf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   229c6:	8b 40 28             	mov    0x28(%rax),%eax
   229c9:	01 45 ec             	add    %eax,-0x14(%rbp)
			buf_length = 0;
   229cc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   229d3:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
						buf_index += tmp;
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   229da:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   229e1:	48 89 c7             	mov    %rax,%rdi
   229e4:	e8 47 2b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
	}
	int StreamReader::Read(StringBuilder& buf, const char* delimitors,
			int delimitor_count)
	{
		int br = 0;
		while (1)
   229e9:	e9 a6 fc ff ff       	jmpq   22694 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x30>
   229ee:	89 d8                	mov    %ebx,%eax
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
			buf.Append(tmpb);
			br += buf_length;
			buf_length = 0;
		}
	}
   229f0:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   229f7:	5b                   	pop    %rbx
   229f8:	41 5c                	pop    %r12
   229fa:	5d                   	pop    %rbp
   229fb:	c3                   	retq   
   229fc:	48 89 c3             	mov    %rax,%rbx
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
				int tmp = s->Read(tmpb);
   229ff:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   22a06:	48 89 c7             	mov    %rax,%rdi
   22a09:	e8 22 2b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22a0e:	eb 03                	jmp    22a13 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x3af>
   22a10:	48 89 c3             	mov    %rax,%rbx
		int br = 0;
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
   22a13:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22a1a:	48 89 c7             	mov    %rax,%rdi
   22a1d:	e8 0e 2b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22a22:	48 89 d8             	mov    %rbx,%rax
   22a25:	48 89 c7             	mov    %rax,%rdi
   22a28:	e8 83 40 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   22a2d:	48 89 c3             	mov    %rax,%rbx
				for (int j = 0; j < delimitor_count; j++)
					if (((char*) (this->buf))[i] == delimitors[j])
					{
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
						buf.Append(tmpb);
   22a30:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   22a34:	48 89 c7             	mov    %rax,%rdi
   22a37:	e8 f4 2a ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22a3c:	eb 03                	jmp    22a41 <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x3dd>
   22a3e:	48 89 c3             	mov    %rax,%rbx
			{
				for (int j = 0; j < delimitor_count; j++)
					if (((char*) (this->buf))[i] == delimitors[j])
					{
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   22a41:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22a48:	48 89 c7             	mov    %rax,%rdi
   22a4b:	e8 e0 2a ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22a50:	48 89 d8             	mov    %rbx,%rax
   22a53:	48 89 c7             	mov    %rax,%rdi
   22a56:	e8 55 40 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   22a5b:	48 89 c3             	mov    %rax,%rbx
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
			buf.Append(tmpb);
   22a5e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   22a62:	48 89 c7             	mov    %rax,%rdi
   22a65:	e8 c6 2a ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22a6a:	eb 03                	jmp    22a6f <_ZN6xaxaxa12StreamReader4ReadERNS_13StringBuilderEPKci+0x40b>
   22a6c:	48 89 c3             	mov    %rax,%rbx
						buf_index += tmp;
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   22a6f:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   22a76:	48 89 c7             	mov    %rax,%rdi
   22a79:	e8 b2 2a ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22a7e:	48 89 d8             	mov    %rbx,%rax
   22a81:	48 89 c7             	mov    %rax,%rdi
   22a84:	e8 27 40 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   22a89:	90                   	nop

0000000000022a8a <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci>:
			br += buf_length;
			buf_length = 0;
		}
	}
	int StreamReader::Read(Stream& buf, const char* delimitors, int delimitor_count)
	{
   22a8a:	55                   	push   %rbp
   22a8b:	48 89 e5             	mov    %rsp,%rbp
   22a8e:	41 54                	push   %r12
   22a90:	53                   	push   %rbx
   22a91:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   22a98:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   22a9f:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   22aa6:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   22aad:	89 8d 14 ff ff ff    	mov    %ecx,-0xec(%rbp)
		int br = 0;
   22ab3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
		while (1)
		{
			if (buf_length <= 0)
   22aba:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22ac1:	8b 40 28             	mov    0x28(%rax),%eax
   22ac4:	85 c0                	test   %eax,%eax
   22ac6:	0f 8f dc 00 00 00    	jg     22ba8 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x11e>
			{
				Buffer tmpb((char*) this->buf, buf_size);
   22acc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22ad3:	8b 50 20             	mov    0x20(%rax),%edx
   22ad6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22add:	48 8b 48 18          	mov    0x18(%rax),%rcx
   22ae1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22ae8:	48 89 ce             	mov    %rcx,%rsi
   22aeb:	48 89 c7             	mov    %rax,%rdi
   22aee:	e8 4d 3f ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
				int tmp = s->Read(tmpb);
   22af3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22afa:	48 8b 40 10          	mov    0x10(%rax),%rax
   22afe:	48 8b 00             	mov    (%rax),%rax
   22b01:	48 83 c0 10          	add    $0x10,%rax
   22b05:	4c 8b 20             	mov    (%rax),%r12
   22b08:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   22b0f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   22b16:	48 89 d6             	mov    %rdx,%rsi
   22b19:	48 89 c7             	mov    %rax,%rdi
   22b1c:	e8 bf 39 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   22b21:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22b28:	48 8b 40 10          	mov    0x10(%rax),%rax
   22b2c:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   22b33:	48 89 d6             	mov    %rdx,%rsi
   22b36:	48 89 c7             	mov    %rax,%rdi
   22b39:	41 ff d4             	callq  *%r12
   22b3c:	89 45 dc             	mov    %eax,-0x24(%rbp)
   22b3f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   22b46:	48 89 c7             	mov    %rax,%rdi
   22b49:	e8 e2 29 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				if (tmp <= 0) return (br == 0 ? -1 : br);
   22b4e:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   22b52:	7f 1a                	jg     22b6e <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0xe4>
   22b54:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   22b58:	74 05                	je     22b5f <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0xd5>
   22b5a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   22b5d:	eb 05                	jmp    22b64 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0xda>
   22b5f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   22b64:	89 c3                	mov    %eax,%ebx
   22b66:	41 bc 00 00 00 00    	mov    $0x0,%r12d
   22b6c:	eb 21                	jmp    22b8f <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x105>
				buf_index = 0;
   22b6e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22b75:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
				buf_length = tmp;
   22b7c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22b83:	8b 55 dc             	mov    -0x24(%rbp),%edx
   22b86:	89 50 28             	mov    %edx,0x28(%rax)
   22b89:	41 bc 01 00 00 00    	mov    $0x1,%r12d
		int br = 0;
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
   22b8f:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22b96:	48 89 c7             	mov    %rax,%rdi
   22b99:	e8 92 29 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				int tmp = s->Read(tmpb);
				if (tmp <= 0) return (br == 0 ? -1 : br);
				buf_index = 0;
				buf_length = tmp;
   22b9e:	41 83 fc 01          	cmp    $0x1,%r12d
   22ba2:	0f 85 89 02 00 00    	jne    22e31 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x3a7>
			}
			int tmp2 = buf_length + buf_index;
   22ba8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22baf:	8b 50 28             	mov    0x28(%rax),%edx
   22bb2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22bb9:	8b 40 24             	mov    0x24(%rax),%eax
   22bbc:	01 d0                	add    %edx,%eax
   22bbe:	89 45 d8             	mov    %eax,-0x28(%rbp)
			for (int i = buf_index; i < tmp2; i++)
   22bc1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22bc8:	8b 40 24             	mov    0x24(%rax),%eax
   22bcb:	89 45 e8             	mov    %eax,-0x18(%rbp)
   22bce:	e9 a1 01 00 00       	jmpq   22d74 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x2ea>
			{
				for (int j = 0; j < delimitor_count; j++)
   22bd3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   22bda:	e9 7d 01 00 00       	jmpq   22d5c <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x2d2>
					if (((char*) (this->buf))[i] == delimitors[j])
   22bdf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22be6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   22bea:	8b 45 e8             	mov    -0x18(%rbp),%eax
   22bed:	48 98                	cltq   
   22bef:	48 01 d0             	add    %rdx,%rax
   22bf2:	0f b6 10             	movzbl (%rax),%edx
   22bf5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   22bf8:	48 98                	cltq   
   22bfa:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
   22c01:	0f b6 00             	movzbl (%rax),%eax
   22c04:	38 c2                	cmp    %al,%dl
   22c06:	0f 85 4c 01 00 00    	jne    22d58 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x2ce>
					{
						int tmp = i - buf_index;
   22c0c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22c13:	8b 40 24             	mov    0x24(%rax),%eax
   22c16:	8b 55 e8             	mov    -0x18(%rbp),%edx
   22c19:	89 d1                	mov    %edx,%ecx
   22c1b:	29 c1                	sub    %eax,%ecx
   22c1d:	89 c8                	mov    %ecx,%eax
   22c1f:	89 45 e0             	mov    %eax,-0x20(%rbp)
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   22c22:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22c29:	48 8b 50 18          	mov    0x18(%rax),%rdx
   22c2d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22c34:	8b 40 24             	mov    0x24(%rax),%eax
   22c37:	48 98                	cltq   
   22c39:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   22c3d:	8b 55 e0             	mov    -0x20(%rbp),%edx
   22c40:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22c47:	48 89 ce             	mov    %rcx,%rsi
   22c4a:	48 89 c7             	mov    %rax,%rdi
   22c4d:	e8 ee 3d ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
						buf.Write(tmpb);
   22c52:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   22c59:	48 8b 00             	mov    (%rax),%rax
   22c5c:	48 83 c0 18          	add    $0x18,%rax
   22c60:	48 8b 18             	mov    (%rax),%rbx
   22c63:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   22c6a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   22c6e:	48 89 d6             	mov    %rdx,%rsi
   22c71:	48 89 c7             	mov    %rax,%rdi
   22c74:	e8 67 38 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   22c79:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   22c7d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   22c84:	48 89 d6             	mov    %rdx,%rsi
   22c87:	48 89 c7             	mov    %rax,%rdi
   22c8a:	ff d3                	callq  *%rbx
   22c8c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   22c90:	48 89 c7             	mov    %rax,%rdi
   22c93:	e8 98 28 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
						br += tmp;
   22c98:	8b 45 e0             	mov    -0x20(%rbp),%eax
   22c9b:	01 45 ec             	add    %eax,-0x14(%rbp)
						tmp++;
   22c9e:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
						while (tmp < buf_length)
   22ca2:	eb 57                	jmp    22cfb <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x271>
						{
							for (j = 0; j < delimitor_count; j++)
   22ca4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   22cab:	eb 37                	jmp    22ce4 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x25a>
								if (((char*) (this->buf))[buf_index + tmp]
   22cad:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22cb4:	48 8b 50 18          	mov    0x18(%rax),%rdx
   22cb8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22cbf:	8b 40 24             	mov    0x24(%rax),%eax
   22cc2:	03 45 e0             	add    -0x20(%rbp),%eax
   22cc5:	48 98                	cltq   
   22cc7:	48 01 d0             	add    %rdx,%rax
   22cca:	0f b6 10             	movzbl (%rax),%edx
										== delimitors[j]) goto asdfg;
   22ccd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   22cd0:	48 98                	cltq   
   22cd2:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
						br += tmp;
						tmp++;
						while (tmp < buf_length)
						{
							for (j = 0; j < delimitor_count; j++)
								if (((char*) (this->buf))[buf_index + tmp]
   22cd9:	0f b6 00             	movzbl (%rax),%eax
   22cdc:	38 c2                	cmp    %al,%dl
   22cde:	74 16                	je     22cf6 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x26c>
						buf.Write(tmpb);
						br += tmp;
						tmp++;
						while (tmp < buf_length)
						{
							for (j = 0; j < delimitor_count; j++)
   22ce0:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   22ce4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   22ce7:	3b 85 14 ff ff ff    	cmp    -0xec(%rbp),%eax
   22ced:	0f 9c c0             	setl   %al
   22cf0:	84 c0                	test   %al,%al
   22cf2:	75 b9                	jne    22cad <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x223>
								if (((char*) (this->buf))[buf_index + tmp]
										== delimitors[j]) goto asdfg;
							break;
   22cf4:	eb 19                	jmp    22d0f <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x285>
						tmp++;
						while (tmp < buf_length)
						{
							for (j = 0; j < delimitor_count; j++)
								if (((char*) (this->buf))[buf_index + tmp]
										== delimitors[j]) goto asdfg;
   22cf6:	90                   	nop
							break;
							asdfg: tmp++;
   22cf7:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
						buf.Write(tmpb);
						br += tmp;
						tmp++;
						while (tmp < buf_length)
   22cfb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22d02:	8b 40 28             	mov    0x28(%rax),%eax
   22d05:	3b 45 e0             	cmp    -0x20(%rbp),%eax
   22d08:	0f 9f c0             	setg   %al
   22d0b:	84 c0                	test   %al,%al
   22d0d:	75 95                	jne    22ca4 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x21a>
								if (((char*) (this->buf))[buf_index + tmp]
										== delimitors[j]) goto asdfg;
							break;
							asdfg: tmp++;
						}
						buf_index += tmp;
   22d0f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22d16:	8b 40 24             	mov    0x24(%rax),%eax
   22d19:	89 c2                	mov    %eax,%edx
   22d1b:	03 55 e0             	add    -0x20(%rbp),%edx
   22d1e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22d25:	89 50 24             	mov    %edx,0x24(%rax)
						buf_length -= tmp;
   22d28:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22d2f:	8b 40 28             	mov    0x28(%rax),%eax
   22d32:	89 c2                	mov    %eax,%edx
   22d34:	2b 55 e0             	sub    -0x20(%rbp),%edx
   22d37:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22d3e:	89 50 28             	mov    %edx,0x28(%rax)
						return br;
   22d41:	8b 5d ec             	mov    -0x14(%rbp),%ebx
			{
				for (int j = 0; j < delimitor_count; j++)
					if (((char*) (this->buf))[i] == delimitors[j])
					{
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   22d44:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22d4b:	48 89 c7             	mov    %rax,%rdi
   22d4e:	e8 dd 27 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22d53:	e9 d9 00 00 00       	jmpq   22e31 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x3a7>
				buf_length = tmp;
			}
			int tmp2 = buf_length + buf_index;
			for (int i = buf_index; i < tmp2; i++)
			{
				for (int j = 0; j < delimitor_count; j++)
   22d58:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   22d5c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   22d5f:	3b 85 14 ff ff ff    	cmp    -0xec(%rbp),%eax
   22d65:	0f 9c c0             	setl   %al
   22d68:	84 c0                	test   %al,%al
   22d6a:	0f 85 6f fe ff ff    	jne    22bdf <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x155>
				if (tmp <= 0) return (br == 0 ? -1 : br);
				buf_index = 0;
				buf_length = tmp;
			}
			int tmp2 = buf_length + buf_index;
			for (int i = buf_index; i < tmp2; i++)
   22d70:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
   22d74:	8b 45 e8             	mov    -0x18(%rbp),%eax
   22d77:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   22d7a:	0f 9c c0             	setl   %al
   22d7d:	84 c0                	test   %al,%al
   22d7f:	0f 85 4e fe ff ff    	jne    22bd3 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x149>
						buf_index += tmp;
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   22d85:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22d8c:	8b 50 28             	mov    0x28(%rax),%edx
   22d8f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22d96:	48 8b 48 18          	mov    0x18(%rax),%rcx
   22d9a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22da1:	8b 40 24             	mov    0x24(%rax),%eax
   22da4:	48 98                	cltq   
   22da6:	48 01 c1             	add    %rax,%rcx
   22da9:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   22db0:	48 89 ce             	mov    %rcx,%rsi
   22db3:	48 89 c7             	mov    %rax,%rdi
   22db6:	e8 85 3c ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
			buf.Write(tmpb);
   22dbb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   22dc2:	48 8b 00             	mov    (%rax),%rax
   22dc5:	48 83 c0 18          	add    $0x18,%rax
   22dc9:	4c 8b 20             	mov    (%rax),%r12
   22dcc:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   22dd3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   22dd7:	48 89 d6             	mov    %rdx,%rsi
   22dda:	48 89 c7             	mov    %rax,%rdi
   22ddd:	e8 fe 36 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   22de2:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   22de6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   22ded:	48 89 d6             	mov    %rdx,%rsi
   22df0:	48 89 c7             	mov    %rax,%rdi
   22df3:	41 ff d4             	callq  *%r12
   22df6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   22dfa:	48 89 c7             	mov    %rax,%rdi
   22dfd:	e8 2e 27 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			br += buf_length;
   22e02:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22e09:	8b 40 28             	mov    0x28(%rax),%eax
   22e0c:	01 45 ec             	add    %eax,-0x14(%rbp)
			buf_length = 0;
   22e0f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22e16:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
						buf_index += tmp;
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   22e1d:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   22e24:	48 89 c7             	mov    %rax,%rdi
   22e27:	e8 04 27 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
		}
	}
	int StreamReader::Read(Stream& buf, const char* delimitors, int delimitor_count)
	{
		int br = 0;
		while (1)
   22e2c:	e9 89 fc ff ff       	jmpq   22aba <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x30>
   22e31:	89 d8                	mov    %ebx,%eax
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
			buf.Write(tmpb);
			br += buf_length;
			buf_length = 0;
		}
	}
   22e33:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   22e3a:	5b                   	pop    %rbx
   22e3b:	41 5c                	pop    %r12
   22e3d:	5d                   	pop    %rbp
   22e3e:	c3                   	retq   
   22e3f:	48 89 c3             	mov    %rax,%rbx
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
				int tmp = s->Read(tmpb);
   22e42:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   22e49:	48 89 c7             	mov    %rax,%rdi
   22e4c:	e8 df 26 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22e51:	eb 03                	jmp    22e56 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x3cc>
   22e53:	48 89 c3             	mov    %rax,%rbx
		int br = 0;
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
   22e56:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22e5d:	48 89 c7             	mov    %rax,%rdi
   22e60:	e8 cb 26 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22e65:	48 89 d8             	mov    %rbx,%rax
   22e68:	48 89 c7             	mov    %rax,%rdi
   22e6b:	e8 40 3c ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   22e70:	48 89 c3             	mov    %rax,%rbx
				for (int j = 0; j < delimitor_count; j++)
					if (((char*) (this->buf))[i] == delimitors[j])
					{
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
						buf.Write(tmpb);
   22e73:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   22e77:	48 89 c7             	mov    %rax,%rdi
   22e7a:	e8 b1 26 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22e7f:	eb 03                	jmp    22e84 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x3fa>
   22e81:	48 89 c3             	mov    %rax,%rbx
			{
				for (int j = 0; j < delimitor_count; j++)
					if (((char*) (this->buf))[i] == delimitors[j])
					{
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   22e84:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22e8b:	48 89 c7             	mov    %rax,%rdi
   22e8e:	e8 9d 26 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22e93:	48 89 d8             	mov    %rbx,%rax
   22e96:	48 89 c7             	mov    %rax,%rdi
   22e99:	e8 12 3c ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   22e9e:	48 89 c3             	mov    %rax,%rbx
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
			buf.Write(tmpb);
   22ea1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   22ea5:	48 89 c7             	mov    %rax,%rdi
   22ea8:	e8 83 26 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22ead:	eb 03                	jmp    22eb2 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKci+0x428>
   22eaf:	48 89 c3             	mov    %rax,%rbx
						buf_index += tmp;
						buf_length -= tmp;
						return br;
					}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   22eb2:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   22eb9:	48 89 c7             	mov    %rax,%rdi
   22ebc:	e8 6f 26 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   22ec1:	48 89 d8             	mov    %rbx,%rax
   22ec4:	48 89 c7             	mov    %rax,%rdi
   22ec7:	e8 e4 3b ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000022ecc <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi>:
			buf_length = 0;
		}
	}
	int StreamReader::Read(Stream& buf, const STRING* delimitors,
			int delimitor_count)
	{
   22ecc:	55                   	push   %rbp
   22ecd:	48 89 e5             	mov    %rsp,%rbp
   22ed0:	41 54                	push   %r12
   22ed2:	53                   	push   %rbx
   22ed3:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   22eda:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   22ee1:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   22ee8:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   22eef:	89 8d 14 ff ff ff    	mov    %ecx,-0xec(%rbp)
		int br = 0;
   22ef5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
		while (1)
		{
			if (buf_length <= 0)
   22efc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22f03:	8b 40 28             	mov    0x28(%rax),%eax
   22f06:	85 c0                	test   %eax,%eax
   22f08:	0f 8f dc 00 00 00    	jg     22fea <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x11e>
			{
				Buffer tmpb((char*) this->buf, buf_size);
   22f0e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22f15:	8b 50 20             	mov    0x20(%rax),%edx
   22f18:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22f1f:	48 8b 48 18          	mov    0x18(%rax),%rcx
   22f23:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22f2a:	48 89 ce             	mov    %rcx,%rsi
   22f2d:	48 89 c7             	mov    %rax,%rdi
   22f30:	e8 0b 3b ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
				int tmp = s->Read(tmpb);
   22f35:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22f3c:	48 8b 40 10          	mov    0x10(%rax),%rax
   22f40:	48 8b 00             	mov    (%rax),%rax
   22f43:	48 83 c0 10          	add    $0x10,%rax
   22f47:	4c 8b 20             	mov    (%rax),%r12
   22f4a:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   22f51:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   22f58:	48 89 d6             	mov    %rdx,%rsi
   22f5b:	48 89 c7             	mov    %rax,%rdi
   22f5e:	e8 7d 35 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   22f63:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22f6a:	48 8b 40 10          	mov    0x10(%rax),%rax
   22f6e:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   22f75:	48 89 d6             	mov    %rdx,%rsi
   22f78:	48 89 c7             	mov    %rax,%rdi
   22f7b:	41 ff d4             	callq  *%r12
   22f7e:	89 45 dc             	mov    %eax,-0x24(%rbp)
   22f81:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   22f88:	48 89 c7             	mov    %rax,%rdi
   22f8b:	e8 a0 25 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				if (tmp <= 0) return (br == 0 ? -1 : br);
   22f90:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   22f94:	7f 1a                	jg     22fb0 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0xe4>
   22f96:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   22f9a:	74 05                	je     22fa1 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0xd5>
   22f9c:	8b 45 ec             	mov    -0x14(%rbp),%eax
   22f9f:	eb 05                	jmp    22fa6 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0xda>
   22fa1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   22fa6:	89 c3                	mov    %eax,%ebx
   22fa8:	41 bc 00 00 00 00    	mov    $0x0,%r12d
   22fae:	eb 21                	jmp    22fd1 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x105>
				buf_index = 0;
   22fb0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22fb7:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
				buf_length = tmp;
   22fbe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22fc5:	8b 55 dc             	mov    -0x24(%rbp),%edx
   22fc8:	89 50 28             	mov    %edx,0x28(%rax)
   22fcb:	41 bc 01 00 00 00    	mov    $0x1,%r12d
		int br = 0;
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
   22fd1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   22fd8:	48 89 c7             	mov    %rax,%rdi
   22fdb:	e8 50 25 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
				int tmp = s->Read(tmpb);
				if (tmp <= 0) return (br == 0 ? -1 : br);
				buf_index = 0;
				buf_length = tmp;
   22fe0:	41 83 fc 01          	cmp    $0x1,%r12d
   22fe4:	0f 85 b5 02 00 00    	jne    2329f <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x3d3>
			}
			int tmp2 = buf_length + buf_index;
   22fea:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22ff1:	8b 50 28             	mov    0x28(%rax),%edx
   22ff4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   22ffb:	8b 40 24             	mov    0x24(%rax),%eax
   22ffe:	01 d0                	add    %edx,%eax
   23000:	89 45 d8             	mov    %eax,-0x28(%rbp)
			for (int i = buf_index; i < tmp2; i++)
   23003:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2300a:	8b 40 24             	mov    0x24(%rax),%eax
   2300d:	89 45 e8             	mov    %eax,-0x18(%rbp)
   23010:	e9 cd 01 00 00       	jmpq   231e2 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x316>
			{
				for (int j = 0; j < delimitor_count; j++)
   23015:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   2301c:	e9 a9 01 00 00       	jmpq   231ca <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x2fe>
				{
					if (((char*) (this->buf))[i] == delimitors[j].c[0])
   23021:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   23028:	48 8b 50 18          	mov    0x18(%rax),%rdx
   2302c:	8b 45 e8             	mov    -0x18(%rbp),%eax
   2302f:	48 98                	cltq   
   23031:	48 01 d0             	add    %rdx,%rax
   23034:	0f b6 10             	movzbl (%rax),%edx
   23037:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2303a:	48 98                	cltq   
   2303c:	48 c1 e0 04          	shl    $0x4,%rax
   23040:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
   23047:	48 8b 00             	mov    (%rax),%rax
   2304a:	0f b6 00             	movzbl (%rax),%eax
   2304d:	38 c2                	cmp    %al,%dl
   2304f:	0f 85 71 01 00 00    	jne    231c6 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x2fa>
					{
						for (int ii = 0; ii < delimitors[j].length; ii++)
   23055:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
   2305c:	eb 56                	jmp    230b4 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x1e8>
						{
							if (i + ii >= tmp2) goto cont;
   2305e:	8b 45 e0             	mov    -0x20(%rbp),%eax
   23061:	8b 55 e8             	mov    -0x18(%rbp),%edx
   23064:	01 d0                	add    %edx,%eax
   23066:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   23069:	0f 8d 53 01 00 00    	jge    231c2 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x2f6>
							if (((char*) (this->buf))[i + ii] != delimitors[j].c[ii])
   2306f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   23076:	48 8b 50 18          	mov    0x18(%rax),%rdx
   2307a:	8b 45 e0             	mov    -0x20(%rbp),%eax
   2307d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
   23080:	01 c8                	add    %ecx,%eax
   23082:	48 98                	cltq   
   23084:	48 01 d0             	add    %rdx,%rax
   23087:	0f b6 10             	movzbl (%rax),%edx
   2308a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   2308d:	48 98                	cltq   
   2308f:	48 c1 e0 04          	shl    $0x4,%rax
   23093:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
   2309a:	48 8b 08             	mov    (%rax),%rcx
   2309d:	8b 45 e0             	mov    -0x20(%rbp),%eax
   230a0:	48 98                	cltq   
   230a2:	48 01 c8             	add    %rcx,%rax
   230a5:	0f b6 00             	movzbl (%rax),%eax
   230a8:	38 c2                	cmp    %al,%dl
   230aa:	0f 85 15 01 00 00    	jne    231c5 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x2f9>
			{
				for (int j = 0; j < delimitor_count; j++)
				{
					if (((char*) (this->buf))[i] == delimitors[j].c[0])
					{
						for (int ii = 0; ii < delimitors[j].length; ii++)
   230b0:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
   230b4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   230b7:	48 98                	cltq   
   230b9:	48 c1 e0 04          	shl    $0x4,%rax
   230bd:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
   230c4:	8b 40 08             	mov    0x8(%rax),%eax
   230c7:	3b 45 e0             	cmp    -0x20(%rbp),%eax
   230ca:	0f 9f c0             	setg   %al
   230cd:	84 c0                	test   %al,%al
   230cf:	75 8d                	jne    2305e <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x192>
						{
							if (i + ii >= tmp2) goto cont;
							if (((char*) (this->buf))[i + ii] != delimitors[j].c[ii])
								goto cont;
						}
						int tmp = i - buf_index;
   230d1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   230d8:	8b 40 24             	mov    0x24(%rax),%eax
   230db:	8b 55 e8             	mov    -0x18(%rbp),%edx
   230de:	89 d1                	mov    %edx,%ecx
   230e0:	29 c1                	sub    %eax,%ecx
   230e2:	89 c8                	mov    %ecx,%eax
   230e4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   230e7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   230ee:	48 8b 50 18          	mov    0x18(%rax),%rdx
   230f2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   230f9:	8b 40 24             	mov    0x24(%rax),%eax
   230fc:	48 98                	cltq   
   230fe:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   23102:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   23105:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   2310c:	48 89 ce             	mov    %rcx,%rsi
   2310f:	48 89 c7             	mov    %rax,%rdi
   23112:	e8 29 39 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
						buf.Write(tmpb);
   23117:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2311e:	48 8b 00             	mov    (%rax),%rax
   23121:	48 83 c0 18          	add    $0x18,%rax
   23125:	48 8b 18             	mov    (%rax),%rbx
   23128:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   2312f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   23133:	48 89 d6             	mov    %rdx,%rsi
   23136:	48 89 c7             	mov    %rax,%rdi
   23139:	e8 a2 33 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   2313e:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   23142:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   23149:	48 89 d6             	mov    %rdx,%rsi
   2314c:	48 89 c7             	mov    %rax,%rdi
   2314f:	ff d3                	callq  *%rbx
   23151:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   23155:	48 89 c7             	mov    %rax,%rdi
   23158:	e8 d3 23 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
						br += tmp;
   2315d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   23160:	01 45 ec             	add    %eax,-0x14(%rbp)
						tmp += delimitors[j].length;
   23163:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   23166:	48 98                	cltq   
   23168:	48 c1 e0 04          	shl    $0x4,%rax
   2316c:	48 03 85 18 ff ff ff 	add    -0xe8(%rbp),%rax
   23173:	8b 40 08             	mov    0x8(%rax),%eax
   23176:	01 45 d4             	add    %eax,-0x2c(%rbp)
						 if (((char*) (this->buf))[buf_index + tmp]
						 == delimitors[j]) goto asdfg;
						 break;
						 asdfg: tmp++;
						 }*/
						buf_index += tmp;
   23179:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   23180:	8b 40 24             	mov    0x24(%rax),%eax
   23183:	89 c2                	mov    %eax,%edx
   23185:	03 55 d4             	add    -0x2c(%rbp),%edx
   23188:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2318f:	89 50 24             	mov    %edx,0x24(%rax)
						buf_length -= tmp;
   23192:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   23199:	8b 40 28             	mov    0x28(%rax),%eax
   2319c:	89 c2                	mov    %eax,%edx
   2319e:	2b 55 d4             	sub    -0x2c(%rbp),%edx
   231a1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   231a8:	89 50 28             	mov    %edx,0x28(%rax)
						return br;
   231ab:	8b 5d ec             	mov    -0x14(%rbp),%ebx
							if (i + ii >= tmp2) goto cont;
							if (((char*) (this->buf))[i + ii] != delimitors[j].c[ii])
								goto cont;
						}
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   231ae:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   231b5:	48 89 c7             	mov    %rax,%rdi
   231b8:	e8 73 23 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   231bd:	e9 dd 00 00 00       	jmpq   2329f <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x3d3>
				{
					if (((char*) (this->buf))[i] == delimitors[j].c[0])
					{
						for (int ii = 0; ii < delimitors[j].length; ii++)
						{
							if (i + ii >= tmp2) goto cont;
   231c2:	90                   	nop
   231c3:	eb 01                	jmp    231c6 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x2fa>
							if (((char*) (this->buf))[i + ii] != delimitors[j].c[ii])
								goto cont;
   231c5:	90                   	nop
				buf_length = tmp;
			}
			int tmp2 = buf_length + buf_index;
			for (int i = buf_index; i < tmp2; i++)
			{
				for (int j = 0; j < delimitor_count; j++)
   231c6:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   231ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   231cd:	3b 85 14 ff ff ff    	cmp    -0xec(%rbp),%eax
   231d3:	0f 9c c0             	setl   %al
   231d6:	84 c0                	test   %al,%al
   231d8:	0f 85 43 fe ff ff    	jne    23021 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x155>
				if (tmp <= 0) return (br == 0 ? -1 : br);
				buf_index = 0;
				buf_length = tmp;
			}
			int tmp2 = buf_length + buf_index;
			for (int i = buf_index; i < tmp2; i++)
   231de:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
   231e2:	8b 45 e8             	mov    -0x18(%rbp),%eax
   231e5:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   231e8:	0f 9c c0             	setl   %al
   231eb:	84 c0                	test   %al,%al
   231ed:	0f 85 22 fe ff ff    	jne    23015 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x149>
						return br;
					}
					cont: ;
				}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   231f3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   231fa:	8b 50 28             	mov    0x28(%rax),%edx
   231fd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   23204:	48 8b 48 18          	mov    0x18(%rax),%rcx
   23208:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   2320f:	8b 40 24             	mov    0x24(%rax),%eax
   23212:	48 98                	cltq   
   23214:	48 01 c1             	add    %rax,%rcx
   23217:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   2321e:	48 89 ce             	mov    %rcx,%rsi
   23221:	48 89 c7             	mov    %rax,%rdi
   23224:	e8 17 38 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
			buf.Write(tmpb);
   23229:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   23230:	48 8b 00             	mov    (%rax),%rax
   23233:	48 83 c0 18          	add    $0x18,%rax
   23237:	4c 8b 20             	mov    (%rax),%r12
   2323a:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   23241:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   23245:	48 89 d6             	mov    %rdx,%rsi
   23248:	48 89 c7             	mov    %rax,%rdi
   2324b:	e8 90 32 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   23250:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   23254:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   2325b:	48 89 d6             	mov    %rdx,%rsi
   2325e:	48 89 c7             	mov    %rax,%rdi
   23261:	41 ff d4             	callq  *%r12
   23264:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   23268:	48 89 c7             	mov    %rax,%rdi
   2326b:	e8 c0 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			br += buf_length;
   23270:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   23277:	8b 40 28             	mov    0x28(%rax),%eax
   2327a:	01 45 ec             	add    %eax,-0x14(%rbp)
			buf_length = 0;
   2327d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   23284:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
						return br;
					}
					cont: ;
				}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   2328b:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   23292:	48 89 c7             	mov    %rax,%rdi
   23295:	e8 96 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
	}
	int StreamReader::Read(Stream& buf, const STRING* delimitors,
			int delimitor_count)
	{
		int br = 0;
		while (1)
   2329a:	e9 5d fc ff ff       	jmpq   22efc <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x30>
   2329f:	89 d8                	mov    %ebx,%eax
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
			buf.Write(tmpb);
			br += buf_length;
			buf_length = 0;
		}
	}
   232a1:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   232a8:	5b                   	pop    %rbx
   232a9:	41 5c                	pop    %r12
   232ab:	5d                   	pop    %rbp
   232ac:	c3                   	retq   
   232ad:	48 89 c3             	mov    %rax,%rbx
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
				int tmp = s->Read(tmpb);
   232b0:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   232b7:	48 89 c7             	mov    %rax,%rdi
   232ba:	e8 71 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   232bf:	eb 03                	jmp    232c4 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x3f8>
   232c1:	48 89 c3             	mov    %rax,%rbx
		int br = 0;
		while (1)
		{
			if (buf_length <= 0)
			{
				Buffer tmpb((char*) this->buf, buf_size);
   232c4:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   232cb:	48 89 c7             	mov    %rax,%rdi
   232ce:	e8 5d 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   232d3:	48 89 d8             	mov    %rbx,%rax
   232d6:	48 89 c7             	mov    %rax,%rdi
   232d9:	e8 d2 37 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   232de:	48 89 c3             	mov    %rax,%rbx
							if (((char*) (this->buf))[i + ii] != delimitors[j].c[ii])
								goto cont;
						}
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
						buf.Write(tmpb);
   232e1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   232e5:	48 89 c7             	mov    %rax,%rdi
   232e8:	e8 43 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   232ed:	eb 03                	jmp    232f2 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x426>
   232ef:	48 89 c3             	mov    %rax,%rbx
							if (i + ii >= tmp2) goto cont;
							if (((char*) (this->buf))[i + ii] != delimitors[j].c[ii])
								goto cont;
						}
						int tmp = i - buf_index;
						Buffer tmpb((char*) this->buf + buf_index, tmp);
   232f2:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   232f9:	48 89 c7             	mov    %rax,%rdi
   232fc:	e8 2f 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   23301:	48 89 d8             	mov    %rbx,%rax
   23304:	48 89 c7             	mov    %rax,%rdi
   23307:	e8 a4 37 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   2330c:	48 89 c3             	mov    %rax,%rbx
					}
					cont: ;
				}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
			buf.Write(tmpb);
   2330f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   23313:	48 89 c7             	mov    %rax,%rdi
   23316:	e8 15 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2331b:	eb 03                	jmp    23320 <_ZN6xaxaxa12StreamReader4ReadERNS_6StreamEPKNS_6STRINGEi+0x454>
   2331d:	48 89 c3             	mov    %rax,%rbx
						return br;
					}
					cont: ;
				}
			}
			Buffer tmpb((char*) this->buf + buf_index, buf_length);
   23320:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   23327:	48 89 c7             	mov    %rax,%rdi
   2332a:	e8 01 22 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2332f:	48 89 d8             	mov    %rbx,%rax
   23332:	48 89 c7             	mov    %rax,%rdi
   23335:	e8 76 37 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

000000000002333a <_ZN6xaxaxa12StreamReader8ReadLineERNS_13StringBuilderE>:
			br += buf_length;
			buf_length = 0;
		}
	}
	int StreamReader::ReadLine(StringBuilder& buf)
	{
   2333a:	55                   	push   %rbp
   2333b:	48 89 e5             	mov    %rsp,%rbp
   2333e:	48 83 ec 10          	sub    $0x10,%rsp
   23342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23346:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		return Read(buf, "\x0A\x0D", 2);
   2334a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2334e:	48 8b 00             	mov    (%rax),%rax
   23351:	48 83 c0 58          	add    $0x58,%rax
   23355:	4c 8b 00             	mov    (%rax),%r8
   23358:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   2335c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23360:	b9 02 00 00 00       	mov    $0x2,%ecx
   23365:	48 8d 15 78 10 00 00 	lea    0x1078(%rip),%rdx        # 243e4 <_ZStL6ignore+0x62>
   2336c:	48 89 c7             	mov    %rax,%rdi
   2336f:	41 ff d0             	callq  *%r8
	}
   23372:	c9                   	leaveq 
   23373:	c3                   	retq   

0000000000023374 <_ZN6xaxaxa12StreamReader5WriteENS_6BufferE>:
	void StreamReader::Write(Buffer buf)
	{
   23374:	55                   	push   %rbp
   23375:	48 89 e5             	mov    %rsp,%rbp
   23378:	53                   	push   %rbx
   23379:	48 83 ec 38          	sub    $0x38,%rsp
   2337d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   23381:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
		s->Write(buf);
   23385:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23389:	48 8b 40 10          	mov    0x10(%rax),%rax
   2338d:	48 8b 00             	mov    (%rax),%rax
   23390:	48 83 c0 18          	add    $0x18,%rax
   23394:	48 8b 18             	mov    (%rax),%rbx
   23397:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   2339b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2339f:	48 89 d6             	mov    %rdx,%rsi
   233a2:	48 89 c7             	mov    %rax,%rdi
   233a5:	e8 36 31 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   233aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   233ae:	48 8b 40 10          	mov    0x10(%rax),%rax
   233b2:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   233b6:	48 89 d6             	mov    %rdx,%rsi
   233b9:	48 89 c7             	mov    %rax,%rdi
   233bc:	ff d3                	callq  *%rbx
   233be:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   233c2:	48 89 c7             	mov    %rax,%rdi
   233c5:	e8 66 21 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
	}
   233ca:	48 83 c4 38          	add    $0x38,%rsp
   233ce:	5b                   	pop    %rbx
   233cf:	5d                   	pop    %rbp
   233d0:	c3                   	retq   
   233d1:	48 89 c3             	mov    %rax,%rbx
	{
		return Read(buf, "\x0A\x0D", 2);
	}
	void StreamReader::Write(Buffer buf)
	{
		s->Write(buf);
   233d4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   233d8:	48 89 c7             	mov    %rax,%rdi
   233db:	e8 50 21 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   233e0:	48 89 d8             	mov    %rbx,%rax
   233e3:	48 89 c7             	mov    %rax,%rdi
   233e6:	e8 c5 36 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   233eb:	90                   	nop

00000000000233ec <_ZN6xaxaxa12StreamReader5FlushEv>:
	}
	void StreamReader::Flush()
	{
   233ec:	55                   	push   %rbp
   233ed:	48 89 e5             	mov    %rsp,%rbp
   233f0:	48 83 ec 10          	sub    $0x10,%rsp
   233f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		s->Flush();
   233f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   233fc:	48 8b 40 10          	mov    0x10(%rax),%rax
   23400:	48 8b 00             	mov    (%rax),%rax
   23403:	48 83 c0 20          	add    $0x20,%rax
   23407:	48 8b 10             	mov    (%rax),%rdx
   2340a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2340e:	48 8b 40 10          	mov    0x10(%rax),%rax
   23412:	48 89 c7             	mov    %rax,%rdi
   23415:	ff d2                	callq  *%rdx
	}
   23417:	c9                   	leaveq 
   23418:	c3                   	retq   
   23419:	90                   	nop

000000000002341a <_ZN6xaxaxa12StreamReader5CloseEv>:
	void StreamReader::Close()
	{
   2341a:	55                   	push   %rbp
   2341b:	48 89 e5             	mov    %rsp,%rbp
   2341e:	48 83 ec 10          	sub    $0x10,%rsp
   23422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		s->Close();
   23426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2342a:	48 8b 40 10          	mov    0x10(%rax),%rax
   2342e:	48 8b 00             	mov    (%rax),%rax
   23431:	48 83 c0 28          	add    $0x28,%rax
   23435:	48 8b 10             	mov    (%rax),%rdx
   23438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2343c:	48 8b 40 10          	mov    0x10(%rax),%rax
   23440:	48 89 c7             	mov    %rax,%rdi
   23443:	ff d2                	callq  *%rdx
	}
   23445:	c9                   	leaveq 
   23446:	c3                   	retq   
   23447:	90                   	nop

0000000000023448 <_ZN6xaxaxa13StringBuilderC1Ei>:
/////////////////////////////////////////////////////////

	StringBuilder::StringBuilder(int initsize)
   23448:	55                   	push   %rbp
   23449:	48 89 e5             	mov    %rsp,%rbp
   2344c:	48 83 ec 10          	sub    $0x10,%rsp
   23450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23454:	89 75 f4             	mov    %esi,-0xc(%rbp)
   23457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2345b:	48 89 c7             	mov    %rax,%rdi
   2345e:	e8 0d 2e ff ff       	callq  16270 <_ZN6xaxaxa6StreamC2Ev@plt>
   23463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23467:	48 8b 15 ea 6c 20 00 	mov    0x206cea(%rip),%rdx        # 22a158 <_DYNAMIC+0x2c0>
   2346e:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   23472:	48 89 10             	mov    %rdx,(%rax)
	{
		this->buf = malloc(initsize);
   23475:	8b 45 f4             	mov    -0xc(%rbp),%eax
   23478:	48 98                	cltq   
   2347a:	48 89 c7             	mov    %rax,%rdi
   2347d:	e8 4e 23 ff ff       	callq  157d0 <malloc@plt>
   23482:	48 89 c2             	mov    %rax,%rdx
   23485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23489:	48 89 50 10          	mov    %rdx,0x10(%rax)
		this->Capacity = initsize;
   2348d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23491:	8b 55 f4             	mov    -0xc(%rbp),%edx
   23494:	89 50 18             	mov    %edx,0x18(%rax)
		this->Length = 0;
   23497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2349b:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
	}
   234a2:	c9                   	leaveq 
   234a3:	c3                   	retq   

00000000000234a4 <_ZN6xaxaxa13StringBuilderD1Ev>:
	StringBuilder::~StringBuilder()
   234a4:	55                   	push   %rbp
   234a5:	48 89 e5             	mov    %rsp,%rbp
   234a8:	48 83 ec 10          	sub    $0x10,%rsp
   234ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   234b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234b4:	48 8b 15 9d 6c 20 00 	mov    0x206c9d(%rip),%rdx        # 22a158 <_DYNAMIC+0x2c0>
   234bb:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   234bf:	48 89 10             	mov    %rdx,(%rax)
	{
		free(buf);
   234c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234c6:	48 8b 40 10          	mov    0x10(%rax),%rax
   234ca:	48 89 c7             	mov    %rax,%rdi
   234cd:	e8 de 26 ff ff       	callq  15bb0 <free@plt>
	{
		this->buf = malloc(initsize);
		this->Capacity = initsize;
		this->Length = 0;
	}
	StringBuilder::~StringBuilder()
   234d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234d6:	48 89 c7             	mov    %rax,%rdi
   234d9:	e8 c2 34 ff ff       	callq  169a0 <_ZN6xaxaxa6StreamD2Ev@plt>
	{
		free(buf);
	}
   234de:	b8 00 00 00 00       	mov    $0x0,%eax
   234e3:	83 e0 01             	and    $0x1,%eax
   234e6:	84 c0                	test   %al,%al
   234e8:	74 0c                	je     234f6 <_ZN6xaxaxa13StringBuilderD1Ev+0x52>
   234ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234ee:	48 89 c7             	mov    %rax,%rdi
   234f1:	e8 fa 20 ff ff       	callq  155f0 <_ZdlPv@plt>
   234f6:	c9                   	leaveq 
   234f7:	c3                   	retq   

00000000000234f8 <_ZN6xaxaxa13StringBuilderD0Ev>:
	{
		this->buf = malloc(initsize);
		this->Capacity = initsize;
		this->Length = 0;
	}
	StringBuilder::~StringBuilder()
   234f8:	55                   	push   %rbp
   234f9:	48 89 e5             	mov    %rsp,%rbp
   234fc:	48 83 ec 10          	sub    $0x10,%rsp
   23500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{
		free(buf);
	}
   23504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23508:	48 89 c7             	mov    %rax,%rdi
   2350b:	e8 b0 24 ff ff       	callq  159c0 <_ZN6xaxaxa13StringBuilderD1Ev@plt>
   23510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23514:	48 89 c7             	mov    %rax,%rdi
   23517:	e8 d4 20 ff ff       	callq  155f0 <_ZdlPv@plt>
   2351c:	c9                   	leaveq 
   2351d:	c3                   	retq   

000000000002351e <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE>:
	void StringBuilder::Append(Buffer buf)
	{
   2351e:	55                   	push   %rbp
   2351f:	48 89 e5             	mov    %rsp,%rbp
   23522:	48 83 ec 10          	sub    $0x10,%rsp
   23526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2352a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		//int tmp=this->Length;
		this->EnsureCapacity(this->Length + buf.Length);
   2352e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23532:	8b 50 1c             	mov    0x1c(%rax),%edx
   23535:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23539:	8b 40 1c             	mov    0x1c(%rax),%eax
   2353c:	01 c2                	add    %eax,%edx
   2353e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23542:	89 d6                	mov    %edx,%esi
   23544:	48 89 c7             	mov    %rax,%rdi
   23547:	e8 a4 23 ff ff       	callq  158f0 <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi@plt>
		memcpy((char*) this->buf + this->Length, buf.Data, buf.Length);
   2354c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23550:	8b 40 1c             	mov    0x1c(%rax),%eax
   23553:	48 63 d0             	movslq %eax,%rdx
   23556:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2355a:	48 8b 40 10          	mov    0x10(%rax),%rax
   2355e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   23562:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   23566:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   2356a:	8b 49 1c             	mov    0x1c(%rcx),%ecx
   2356d:	48 63 c9             	movslq %ecx,%rcx
   23570:	48 01 f1             	add    %rsi,%rcx
   23573:	48 89 c6             	mov    %rax,%rsi
   23576:	48 89 cf             	mov    %rcx,%rdi
   23579:	e8 82 35 ff ff       	callq  16b00 <memcpy@plt>
		this->Length += buf.Length;
   2357e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23582:	8b 50 1c             	mov    0x1c(%rax),%edx
   23585:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23589:	8b 40 1c             	mov    0x1c(%rax),%eax
   2358c:	01 c2                	add    %eax,%edx
   2358e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23592:	89 50 1c             	mov    %edx,0x1c(%rax)
	}
   23595:	c9                   	leaveq 
   23596:	c3                   	retq   
   23597:	90                   	nop

0000000000023598 <_ZN6xaxaxa13StringBuilder6AppendENS_6STRINGE>:
	void StringBuilder::Append(STRING buf)
	{
   23598:	55                   	push   %rbp
   23599:	48 89 e5             	mov    %rsp,%rbp
   2359c:	48 83 ec 20          	sub    $0x20,%rsp
   235a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   235a4:	48 89 f1             	mov    %rsi,%rcx
   235a7:	89 d0                	mov    %edx,%eax
   235a9:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
   235ad:	89 45 f0             	mov    %eax,-0x10(%rbp)
		//int tmp=this->Length;
		this->EnsureCapacity(this->Length + buf.length);
   235b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   235b4:	8b 50 1c             	mov    0x1c(%rax),%edx
   235b7:	8b 45 f0             	mov    -0x10(%rbp),%eax
   235ba:	01 c2                	add    %eax,%edx
   235bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   235c0:	89 d6                	mov    %edx,%esi
   235c2:	48 89 c7             	mov    %rax,%rdi
   235c5:	e8 26 23 ff ff       	callq  158f0 <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi@plt>
		memcpy((char*) this->buf + this->Length, buf.c, buf.length);
   235ca:	8b 45 f0             	mov    -0x10(%rbp),%eax
   235cd:	48 63 d0             	movslq %eax,%rdx
   235d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   235d4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   235d8:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   235dc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   235e0:	8b 49 1c             	mov    0x1c(%rcx),%ecx
   235e3:	48 63 c9             	movslq %ecx,%rcx
   235e6:	48 01 f1             	add    %rsi,%rcx
   235e9:	48 89 c6             	mov    %rax,%rsi
   235ec:	48 89 cf             	mov    %rcx,%rdi
   235ef:	e8 0c 35 ff ff       	callq  16b00 <memcpy@plt>
		this->Length += buf.length;
   235f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   235f8:	8b 50 1c             	mov    0x1c(%rax),%edx
   235fb:	8b 45 f0             	mov    -0x10(%rbp),%eax
   235fe:	01 c2                	add    %eax,%edx
   23600:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23604:	89 50 1c             	mov    %edx,0x1c(%rax)
	}
   23607:	c9                   	leaveq 
   23608:	c3                   	retq   
   23609:	90                   	nop

000000000002360a <_ZN6xaxaxa13StringBuilder6AppendEPKS0_>:
	void StringBuilder::Append(const StringBuilder* s)
	{
   2360a:	55                   	push   %rbp
   2360b:	48 89 e5             	mov    %rsp,%rbp
   2360e:	53                   	push   %rbx
   2360f:	48 83 ec 58          	sub    $0x58,%rsp
   23613:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   23617:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
		Buffer tmpb((char*) s->buf, s->Length);
   2361b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   2361f:	8b 50 1c             	mov    0x1c(%rax),%edx
   23622:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   23626:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2362a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2362e:	48 89 ce             	mov    %rcx,%rsi
   23631:	48 89 c7             	mov    %rax,%rdi
   23634:	e8 07 34 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
		Append(tmpb);
   23639:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   2363d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   23641:	48 89 d6             	mov    %rdx,%rsi
   23644:	48 89 c7             	mov    %rax,%rdi
   23647:	e8 94 2e ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   2364c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   23650:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23654:	48 89 d6             	mov    %rdx,%rsi
   23657:	48 89 c7             	mov    %rax,%rdi
   2365a:	e8 21 23 ff ff       	callq  15980 <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE@plt>
   2365f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   23663:	48 89 c7             	mov    %rax,%rdi
   23666:	e8 c5 1e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
		memcpy((char*) this->buf + this->Length, buf.c, buf.length);
		this->Length += buf.length;
	}
	void StringBuilder::Append(const StringBuilder* s)
	{
		Buffer tmpb((char*) s->buf, s->Length);
   2366b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2366f:	48 89 c7             	mov    %rax,%rdi
   23672:	e8 b9 1e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
		Append(tmpb);
	}
   23677:	48 83 c4 58          	add    $0x58,%rsp
   2367b:	5b                   	pop    %rbx
   2367c:	5d                   	pop    %rbp
   2367d:	c3                   	retq   
   2367e:	48 89 c3             	mov    %rax,%rbx
		this->Length += buf.length;
	}
	void StringBuilder::Append(const StringBuilder* s)
	{
		Buffer tmpb((char*) s->buf, s->Length);
		Append(tmpb);
   23681:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   23685:	48 89 c7             	mov    %rax,%rdi
   23688:	e8 a3 1e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2368d:	eb 03                	jmp    23692 <_ZN6xaxaxa13StringBuilder6AppendEPKS0_+0x88>
   2368f:	48 89 c3             	mov    %rax,%rbx
		memcpy((char*) this->buf + this->Length, buf.c, buf.length);
		this->Length += buf.length;
	}
	void StringBuilder::Append(const StringBuilder* s)
	{
		Buffer tmpb((char*) s->buf, s->Length);
   23692:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   23696:	48 89 c7             	mov    %rax,%rdi
   23699:	e8 92 1e ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2369e:	48 89 d8             	mov    %rbx,%rax
   236a1:	48 89 c7             	mov    %rax,%rdi
   236a4:	e8 07 34 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   236a9:	90                   	nop

00000000000236aa <_ZN6xaxaxa13StringBuilder6AppendEPci>:
		Append(tmpb);
	}
	void StringBuilder::Append(char* buf, int length)
	{
   236aa:	55                   	push   %rbp
   236ab:	48 89 e5             	mov    %rsp,%rbp
   236ae:	48 83 ec 20          	sub    $0x20,%rsp
   236b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   236b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   236ba:	89 55 ec             	mov    %edx,-0x14(%rbp)
		this->EnsureCapacity(this->Length + length);
   236bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   236c1:	8b 40 1c             	mov    0x1c(%rax),%eax
   236c4:	89 c2                	mov    %eax,%edx
   236c6:	03 55 ec             	add    -0x14(%rbp),%edx
   236c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   236cd:	89 d6                	mov    %edx,%esi
   236cf:	48 89 c7             	mov    %rax,%rdi
   236d2:	e8 19 22 ff ff       	callq  158f0 <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi@plt>
		memcpy((char*) this->buf + this->Length, buf, length);
   236d7:	8b 45 ec             	mov    -0x14(%rbp),%eax
   236da:	48 63 d0             	movslq %eax,%rdx
   236dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   236e1:	48 8b 48 10          	mov    0x10(%rax),%rcx
   236e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   236e9:	8b 40 1c             	mov    0x1c(%rax),%eax
   236ec:	48 98                	cltq   
   236ee:	48 01 c1             	add    %rax,%rcx
   236f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   236f5:	48 89 c6             	mov    %rax,%rsi
   236f8:	48 89 cf             	mov    %rcx,%rdi
   236fb:	e8 00 34 ff ff       	callq  16b00 <memcpy@plt>
		this->Length += length;
   23700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23704:	8b 40 1c             	mov    0x1c(%rax),%eax
   23707:	89 c2                	mov    %eax,%edx
   23709:	03 55 ec             	add    -0x14(%rbp),%edx
   2370c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23710:	89 50 1c             	mov    %edx,0x1c(%rax)
	}
   23713:	c9                   	leaveq 
   23714:	c3                   	retq   
   23715:	90                   	nop

0000000000023716 <_ZN6xaxaxa13StringBuilder6AppendEPc>:
	void StringBuilder::Append(char* buf)
	{
   23716:	55                   	push   %rbp
   23717:	48 89 e5             	mov    %rsp,%rbp
   2371a:	48 83 ec 10          	sub    $0x10,%rsp
   2371e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		Append(buf, strlen(buf));
   23726:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2372a:	48 89 c7             	mov    %rax,%rdi
   2372d:	e8 ee 24 ff ff       	callq  15c20 <strlen@plt>
   23732:	89 c2                	mov    %eax,%edx
   23734:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   23738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2373c:	48 89 ce             	mov    %rcx,%rsi
   2373f:	48 89 c7             	mov    %rax,%rdi
   23742:	e8 59 30 ff ff       	callq  167a0 <_ZN6xaxaxa13StringBuilder6AppendEPci@plt>
	}
   23747:	c9                   	leaveq 
   23748:	c3                   	retq   
   23749:	90                   	nop

000000000002374a <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi>:
	void StringBuilder::EnsureCapacity(int c)
	{
   2374a:	55                   	push   %rbp
   2374b:	48 89 e5             	mov    %rsp,%rbp
   2374e:	48 83 ec 20          	sub    $0x20,%rsp
   23752:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23756:	89 75 e4             	mov    %esi,-0x1c(%rbp)
		if (Capacity >= c) return;
   23759:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2375d:	8b 40 18             	mov    0x18(%rax),%eax
   23760:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   23763:	7d 49                	jge    237ae <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi+0x64>
		int tmp = this->Capacity;
   23765:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23769:	8b 40 18             	mov    0x18(%rax),%eax
   2376c:	89 45 fc             	mov    %eax,-0x4(%rbp)
		while (tmp < c)
   2376f:	eb 03                	jmp    23774 <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi+0x2a>
		{
			tmp *= 2;
   23771:	d1 65 fc             	shll   -0x4(%rbp)
	}
	void StringBuilder::EnsureCapacity(int c)
	{
		if (Capacity >= c) return;
		int tmp = this->Capacity;
		while (tmp < c)
   23774:	8b 45 fc             	mov    -0x4(%rbp),%eax
   23777:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   2377a:	0f 9c c0             	setl   %al
   2377d:	84 c0                	test   %al,%al
   2377f:	75 f0                	jne    23771 <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi+0x27>
		{
			tmp *= 2;
		}
		this->buf = realloc(this->buf, tmp);
   23781:	8b 45 fc             	mov    -0x4(%rbp),%eax
   23784:	48 63 d0             	movslq %eax,%rdx
   23787:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2378b:	48 8b 40 10          	mov    0x10(%rax),%rax
   2378f:	48 89 d6             	mov    %rdx,%rsi
   23792:	48 89 c7             	mov    %rax,%rdi
   23795:	e8 d6 31 ff ff       	callq  16970 <realloc@plt>
   2379a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2379e:	48 89 42 10          	mov    %rax,0x10(%rdx)
		this->Capacity = tmp;
   237a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   237a6:	8b 55 fc             	mov    -0x4(%rbp),%edx
   237a9:	89 50 18             	mov    %edx,0x18(%rax)
   237ac:	eb 01                	jmp    237af <_ZN6xaxaxa13StringBuilder14EnsureCapacityEi+0x65>
	{
		Append(buf, strlen(buf));
	}
	void StringBuilder::EnsureCapacity(int c)
	{
		if (Capacity >= c) return;
   237ae:	90                   	nop
		{
			tmp *= 2;
		}
		this->buf = realloc(this->buf, tmp);
		this->Capacity = tmp;
	}
   237af:	c9                   	leaveq 
   237b0:	c3                   	retq   
   237b1:	90                   	nop

00000000000237b2 <_ZN6xaxaxa13StringBuilder9CompareToENS_6BufferE>:
	int StringBuilder::CompareTo(Buffer buf)
	{
   237b2:	55                   	push   %rbp
   237b3:	48 89 e5             	mov    %rsp,%rbp
   237b6:	48 83 ec 10          	sub    $0x10,%rsp
   237ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   237be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		if (buf.Length <= 0 || this->Length <= 0) return -1;
   237c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   237c6:	8b 40 1c             	mov    0x1c(%rax),%eax
   237c9:	85 c0                	test   %eax,%eax
   237cb:	7e 0b                	jle    237d8 <_ZN6xaxaxa13StringBuilder9CompareToENS_6BufferE+0x26>
   237cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   237d1:	8b 40 1c             	mov    0x1c(%rax),%eax
   237d4:	85 c0                	test   %eax,%eax
   237d6:	7f 07                	jg     237df <_ZN6xaxaxa13StringBuilder9CompareToENS_6BufferE+0x2d>
   237d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   237dd:	eb 31                	jmp    23810 <_ZN6xaxaxa13StringBuilder9CompareToENS_6BufferE+0x5e>
		return memcmp(this->buf, buf.Data,
				buf.Length < this->Length ? buf.Length : this->Length);
   237df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   237e3:	8b 50 1c             	mov    0x1c(%rax),%edx
   237e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   237ea:	8b 40 1c             	mov    0x1c(%rax),%eax
   237ed:	39 c2                	cmp    %eax,%edx
   237ef:	0f 4e c2             	cmovle %edx,%eax
   237f2:	48 63 d0             	movslq %eax,%rdx
   237f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   237f9:	48 8b 48 10          	mov    0x10(%rax),%rcx
   237fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23801:	48 8b 40 10          	mov    0x10(%rax),%rax
   23805:	48 89 ce             	mov    %rcx,%rsi
   23808:	48 89 c7             	mov    %rax,%rdi
   2380b:	e8 c0 2e ff ff       	callq  166d0 <memcmp@plt>
	}
   23810:	c9                   	leaveq 
   23811:	c3                   	retq   

0000000000023812 <_ZN6xaxaxa13StringBuilder9CompareToEPKS0_>:
	int StringBuilder::CompareTo(const StringBuilder* sb)
	{
   23812:	55                   	push   %rbp
   23813:	48 89 e5             	mov    %rsp,%rbp
   23816:	48 83 ec 10          	sub    $0x10,%rsp
   2381a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2381e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		if (sb->Length <= 0 || this->Length <= 0) return -1;
   23822:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23826:	8b 40 1c             	mov    0x1c(%rax),%eax
   23829:	85 c0                	test   %eax,%eax
   2382b:	7e 0b                	jle    23838 <_ZN6xaxaxa13StringBuilder9CompareToEPKS0_+0x26>
   2382d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23831:	8b 40 1c             	mov    0x1c(%rax),%eax
   23834:	85 c0                	test   %eax,%eax
   23836:	7f 07                	jg     2383f <_ZN6xaxaxa13StringBuilder9CompareToEPKS0_+0x2d>
   23838:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2383d:	eb 31                	jmp    23870 <_ZN6xaxaxa13StringBuilder9CompareToEPKS0_+0x5e>
		return memcmp(buf, sb->buf,
				sb->Length < this->Length ? sb->Length : this->Length);
   2383f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23843:	8b 50 1c             	mov    0x1c(%rax),%edx
   23846:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2384a:	8b 40 1c             	mov    0x1c(%rax),%eax
   2384d:	39 c2                	cmp    %eax,%edx
   2384f:	0f 4e c2             	cmovle %edx,%eax
   23852:	48 63 d0             	movslq %eax,%rdx
   23855:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23859:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2385d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23861:	48 8b 40 10          	mov    0x10(%rax),%rax
   23865:	48 89 ce             	mov    %rcx,%rsi
   23868:	48 89 c7             	mov    %rax,%rdi
   2386b:	e8 60 2e ff ff       	callq  166d0 <memcmp@plt>
	}
   23870:	c9                   	leaveq 
   23871:	c3                   	retq   

0000000000023872 <_ZN6xaxaxa13StringBuilder8ToStringEv>:
	STRING StringBuilder::ToString()
	{
   23872:	55                   	push   %rbp
   23873:	48 89 e5             	mov    %rsp,%rbp
   23876:	48 83 ec 40          	sub    $0x40,%rsp
   2387a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
		STRING tmp;
   2387e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23882:	48 89 c7             	mov    %rax,%rdi
   23885:	e8 36 23 ff ff       	callq  15bc0 <_ZN6xaxaxa6STRINGC1Ev@plt>
		/*tmp.c=(char*)malloc(Length);
		 memcpy(tmp.c,buf,Length);
		 tmp.length=Length;*/
		tmp.c = (char*) this->buf;
   2388a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2388e:	48 8b 40 10          	mov    0x10(%rax),%rax
   23892:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		tmp.length = Length;
   23896:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2389a:	8b 40 1c             	mov    0x1c(%rax),%eax
   2389d:	89 45 e8             	mov    %eax,-0x18(%rbp)
		return tmp;
   238a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   238a4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   238a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   238b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   238b4:	8b 55 f8             	mov    -0x8(%rbp),%edx
	}
   238b7:	c9                   	leaveq 
   238b8:	c3                   	retq   
   238b9:	90                   	nop

00000000000238ba <_ZN6xaxaxa13StringBuilder8ToBufferEv>:
	Buffer StringBuilder::ToBuffer()
	{
   238ba:	55                   	push   %rbp
   238bb:	48 89 e5             	mov    %rsp,%rbp
   238be:	48 83 ec 10          	sub    $0x10,%rsp
   238c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   238c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		return Buffer((char*) this->buf, Length);
   238ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   238ce:	8b 50 1c             	mov    0x1c(%rax),%edx
   238d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   238d5:	48 8b 48 10          	mov    0x10(%rax),%rcx
   238d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   238dd:	48 89 ce             	mov    %rcx,%rsi
   238e0:	48 89 c7             	mov    %rax,%rdi
   238e3:	e8 58 31 ff ff       	callq  16a40 <_ZN6xaxaxa6BufferC1EPvi@plt>
	}
   238e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   238ec:	c9                   	leaveq 
   238ed:	c3                   	retq   

00000000000238ee <_ZN6xaxaxa13StringBuilder4ReadENS_6BufferE>:

	int StringBuilder::Read(Buffer buf)
	{
   238ee:	55                   	push   %rbp
   238ef:	48 89 e5             	mov    %rsp,%rbp
   238f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   238f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		return 0;
   238fa:	b8 00 00 00 00       	mov    $0x0,%eax
	}
   238ff:	5d                   	pop    %rbp
   23900:	c3                   	retq   
   23901:	90                   	nop

0000000000023902 <_ZN6xaxaxa13StringBuilder5WriteENS_6BufferE>:
	void StringBuilder::Write(Buffer buf)
	{
   23902:	55                   	push   %rbp
   23903:	48 89 e5             	mov    %rsp,%rbp
   23906:	53                   	push   %rbx
   23907:	48 83 ec 38          	sub    $0x38,%rsp
   2390b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2390f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
		Append(buf);
   23913:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   23917:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2391b:	48 89 d6             	mov    %rdx,%rsi
   2391e:	48 89 c7             	mov    %rax,%rdi
   23921:	e8 ba 2b ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   23926:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   2392a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2392e:	48 89 d6             	mov    %rdx,%rsi
   23931:	48 89 c7             	mov    %rax,%rdi
   23934:	e8 47 20 ff ff       	callq  15980 <_ZN6xaxaxa13StringBuilder6AppendENS_6BufferE@plt>
   23939:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2393d:	48 89 c7             	mov    %rax,%rdi
   23940:	e8 eb 1b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
	}
   23945:	48 83 c4 38          	add    $0x38,%rsp
   23949:	5b                   	pop    %rbx
   2394a:	5d                   	pop    %rbp
   2394b:	c3                   	retq   
   2394c:	48 89 c3             	mov    %rax,%rbx
	{
		return 0;
	}
	void StringBuilder::Write(Buffer buf)
	{
		Append(buf);
   2394f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   23953:	48 89 c7             	mov    %rax,%rdi
   23956:	e8 d5 1b ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   2395b:	48 89 d8             	mov    %rbx,%rax
   2395e:	48 89 c7             	mov    %rax,%rdi
   23961:	e8 4a 31 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000023966 <_ZN6xaxaxa13StringBuilder5FlushEv>:
	}
	void StringBuilder::Flush()
	{
   23966:	55                   	push   %rbp
   23967:	48 89 e5             	mov    %rsp,%rbp
   2396a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)

	}
   2396e:	5d                   	pop    %rbp
   2396f:	c3                   	retq   

0000000000023970 <_ZN6xaxaxa13StringBuilder5CloseEv>:
	void StringBuilder::Close()
	{
   23970:	55                   	push   %rbp
   23971:	48 89 e5             	mov    %rsp,%rbp
   23974:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)

	}
   23978:	5d                   	pop    %rbp
   23979:	c3                   	retq   

000000000002397a <_ZN6xaxaxaL10handle_sigEi>:

//////////////////////////////////////////////////////////////////////////
	static void handle_sig(int sig)
	{
   2397a:	55                   	push   %rbp
   2397b:	48 89 e5             	mov    %rsp,%rbp
   2397e:	41 54                	push   %r12
   23980:	53                   	push   %rbx
   23981:	48 83 ec 10          	sub    $0x10,%rsp
   23985:	89 7d ec             	mov    %edi,-0x14(%rbp)
		//asm(".intel_syntax noprefix");
		//asm("pop %eax");
		//asm("ret");
		//return;
		//Exception *ex;
		switch (sig)
   23988:	8b 45 ec             	mov    -0x14(%rbp),%eax
   2398b:	83 f8 0b             	cmp    $0xb,%eax
   2398e:	75 31                	jne    239c1 <_ZN6xaxaxaL10handle_sigEi+0x47>
		{
			case SIGSEGV:
				throw PointerException();
   23990:	bf 18 00 00 00       	mov    $0x18,%edi
   23995:	e8 96 2b ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   2399a:	48 89 c3             	mov    %rax,%rbx
   2399d:	48 89 df             	mov    %rbx,%rdi
   239a0:	e8 3b 20 ff ff       	callq  159e0 <_ZN6xaxaxa16PointerExceptionC1Ev@plt>
   239a5:	48 8b 05 9c 67 20 00 	mov    0x20679c(%rip),%rax        # 22a148 <_DYNAMIC+0x2b0>
   239ac:	48 89 c2             	mov    %rax,%rdx
   239af:	48 8b 05 02 67 20 00 	mov    0x206702(%rip),%rax        # 22a0b8 <_DYNAMIC+0x220>
   239b6:	48 89 c6             	mov    %rax,%rsi
   239b9:	48 89 df             	mov    %rbx,%rdi
   239bc:	e8 4f 2d ff ff       	callq  16710 <__cxa_throw@plt>
				break;
			default:
				throw Exception();
   239c1:	bf 18 00 00 00       	mov    $0x18,%edi
   239c6:	e8 65 2b ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   239cb:	48 89 c3             	mov    %rax,%rbx
   239ce:	48 89 df             	mov    %rbx,%rdi
   239d1:	e8 1a 18 ff ff       	callq  151f0 <_ZN6xaxaxa9ExceptionC1Ev@plt>
   239d6:	48 8b 05 bb 66 20 00 	mov    0x2066bb(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   239dd:	48 89 c2             	mov    %rax,%rdx
   239e0:	48 8b 05 51 67 20 00 	mov    0x206751(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   239e7:	48 89 c6             	mov    %rax,%rsi
   239ea:	48 89 df             	mov    %rbx,%rdi
   239ed:	e8 1e 2d ff ff       	callq  16710 <__cxa_throw@plt>
   239f2:	49 89 c4             	mov    %rax,%r12
		//return;
		//Exception *ex;
		switch (sig)
		{
			case SIGSEGV:
				throw PointerException();
   239f5:	48 89 df             	mov    %rbx,%rdi
   239f8:	e8 b3 2b ff ff       	callq  165b0 <__cxa_free_exception@plt>
   239fd:	4c 89 e0             	mov    %r12,%rax
   23a00:	48 89 c7             	mov    %rax,%rdi
   23a03:	e8 a8 30 ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   23a08:	49 89 c4             	mov    %rax,%r12
				break;
			default:
				throw Exception();
   23a0b:	48 89 df             	mov    %rbx,%rdi
   23a0e:	e8 9d 2b ff ff       	callq  165b0 <__cxa_free_exception@plt>
   23a13:	4c 89 e0             	mov    %r12,%rax
   23a16:	48 89 c7             	mov    %rax,%rdi
   23a19:	e8 92 30 ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000023a1e <_ZN6xaxaxa18RegisterExceptionsEv>:
		}

	}
	void RegisterExceptions()
	{
   23a1e:	55                   	push   %rbp
   23a1f:	48 89 e5             	mov    %rsp,%rbp
		signal(SIGSEGV, &handle_sig);
   23a22:	48 8d 35 51 ff ff ff 	lea    -0xaf(%rip),%rsi        # 2397a <_ZN6xaxaxaL10handle_sigEi>
   23a29:	bf 0b 00 00 00       	mov    $0xb,%edi
   23a2e:	e8 8d 28 ff ff       	callq  162c0 <signal@plt>
	}
   23a33:	5d                   	pop    %rbp
   23a34:	c3                   	retq   

0000000000023a35 <_Z41__static_initialization_and_destruction_0ii>:

}
   23a35:	55                   	push   %rbp
   23a36:	48 89 e5             	mov    %rsp,%rbp
   23a39:	48 83 ec 10          	sub    $0x10,%rsp
   23a3d:	89 7d fc             	mov    %edi,-0x4(%rbp)
   23a40:	89 75 f8             	mov    %esi,-0x8(%rbp)
   23a43:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   23a47:	0f 85 a2 00 00 00    	jne    23aef <_Z41__static_initialization_and_destruction_0ii+0xba>
   23a4d:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   23a54:	0f 85 95 00 00 00    	jne    23aef <_Z41__static_initialization_and_destruction_0ii+0xba>
   23a5a:	48 8d 3d b7 74 20 00 	lea    0x2074b7(%rip),%rdi        # 22af18 <_ZStL8__ioinit>
   23a61:	e8 ea 1c ff ff       	callq  15750 <_ZNSt8ios_base4InitC1Ev@plt>
   23a66:	48 8b 05 53 66 20 00 	mov    0x206653(%rip),%rax        # 22a0c0 <_DYNAMIC+0x228>
   23a6d:	48 8b 15 7c 66 20 00 	mov    0x20667c(%rip),%rdx        # 22a0f0 <_DYNAMIC+0x258>
   23a74:	48 8d 35 9d 74 20 00 	lea    0x20749d(%rip),%rsi        # 22af18 <_ZStL8__ioinit>
   23a7b:	48 89 c7             	mov    %rax,%rdi
   23a7e:	e8 ed 1e ff ff       	callq  15970 <__cxa_atexit@plt>
static boost::arg<8> _8;
static boost::arg<9> _9;

#else

boost::arg<1> _1;
   23a83:	48 8d 3d 8f 74 20 00 	lea    0x20748f(%rip),%rdi        # 22af19 <_ZN12_GLOBAL__N_12_1E>
   23a8a:	e8 91 28 ff ff       	callq  16320 <_ZN5boost3argILi1EEC1Ev@plt>
boost::arg<2> _2;
   23a8f:	48 8d 3d 84 74 20 00 	lea    0x207484(%rip),%rdi        # 22af1a <_ZN12_GLOBAL__N_12_2E>
   23a96:	e8 05 22 ff ff       	callq  15ca0 <_ZN5boost3argILi2EEC1Ev@plt>
boost::arg<3> _3;
   23a9b:	48 8d 3d 79 74 20 00 	lea    0x207479(%rip),%rdi        # 22af1b <_ZN12_GLOBAL__N_12_3E>
   23aa2:	e8 39 24 ff ff       	callq  15ee0 <_ZN5boost3argILi3EEC1Ev@plt>
boost::arg<4> _4;
   23aa7:	48 8d 3d 6e 74 20 00 	lea    0x20746e(%rip),%rdi        # 22af1c <_ZN12_GLOBAL__N_12_4E>
   23aae:	e8 fd 1e ff ff       	callq  159b0 <_ZN5boost3argILi4EEC1Ev@plt>
boost::arg<5> _5;
   23ab3:	48 8d 3d 63 74 20 00 	lea    0x207463(%rip),%rdi        # 22af1d <_ZN12_GLOBAL__N_12_5E>
   23aba:	e8 01 27 ff ff       	callq  161c0 <_ZN5boost3argILi5EEC1Ev@plt>
boost::arg<6> _6;
   23abf:	48 8d 3d 58 74 20 00 	lea    0x207458(%rip),%rdi        # 22af1e <_ZN12_GLOBAL__N_12_6E>
   23ac6:	e8 05 18 ff ff       	callq  152d0 <_ZN5boost3argILi6EEC1Ev@plt>
boost::arg<7> _7;
   23acb:	48 8d 3d 4d 74 20 00 	lea    0x20744d(%rip),%rdi        # 22af1f <_ZN12_GLOBAL__N_12_7E>
   23ad2:	e8 c9 1b ff ff       	callq  156a0 <_ZN5boost3argILi7EEC1Ev@plt>
boost::arg<8> _8;
   23ad7:	48 8d 3d 42 74 20 00 	lea    0x207442(%rip),%rdi        # 22af20 <_ZN12_GLOBAL__N_12_8E>
   23ade:	e8 4d 19 ff ff       	callq  15430 <_ZN5boost3argILi8EEC1Ev@plt>
boost::arg<9> _9;
   23ae3:	48 8d 3d 37 74 20 00 	lea    0x207437(%rip),%rdi        # 22af21 <_ZN12_GLOBAL__N_12_9E>
   23aea:	e8 f1 18 ff ff       	callq  153e0 <_ZN5boost3argILi9EEC1Ev@plt>
   23aef:	c9                   	leaveq 
   23af0:	c3                   	retq   

0000000000023af1 <_GLOBAL__sub_I_cplib.cpp>:
   23af1:	55                   	push   %rbp
   23af2:	48 89 e5             	mov    %rsp,%rbp
   23af5:	be ff ff 00 00       	mov    $0xffff,%esi
   23afa:	bf 01 00 00 00       	mov    $0x1,%edi
   23aff:	e8 31 ff ff ff       	callq  23a35 <_Z41__static_initialization_and_destruction_0ii>
   23b04:	5d                   	pop    %rbp
   23b05:	c3                   	retq   

0000000000023b06 <_ZN6xaxaxa6STRINGC1Ev>:
		STRING(const char* c)
		{
			this->c = (char*) c;
			length = strlen(c);
		}
		STRING()
   23b06:	55                   	push   %rbp
   23b07:	48 89 e5             	mov    %rsp,%rbp
   23b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
		}
   23b0e:	5d                   	pop    %rbp
   23b0f:	c3                   	retq   

0000000000023b10 <_ZNK6xaxaxa6Buffer9SubBufferEi>:
		{
			if (index < 0 || length > this->Length) throw Exception("SubBuffer() out of range");
			if (IsRaw) return Buffer(Data + index, length);
			else return Buffer(Data + index, length, pbuf);
		}
		inline Buffer SubBuffer(int index) const
   23b10:	55                   	push   %rbp
   23b11:	48 89 e5             	mov    %rsp,%rbp
   23b14:	48 83 ec 20          	sub    $0x20,%rsp
   23b18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23b1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23b20:	89 55 ec             	mov    %edx,-0x14(%rbp)
		{
			return SubBuffer(index, Length - index);
   23b23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23b27:	8b 40 1c             	mov    0x1c(%rax),%eax
   23b2a:	89 c1                	mov    %eax,%ecx
   23b2c:	2b 4d ec             	sub    -0x14(%rbp),%ecx
   23b2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23b33:	8b 55 ec             	mov    -0x14(%rbp),%edx
   23b36:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   23b3a:	48 89 c7             	mov    %rax,%rdi
   23b3d:	e8 5e 24 ff ff       	callq  15fa0 <_ZNK6xaxaxa6Buffer9SubBufferEii@plt>
		}
   23b42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23b46:	c9                   	leaveq 
   23b47:	c3                   	retq   

0000000000023b48 <_ZN6xaxaxa6Stream9BeginReadENS_6BufferENS0_8CallbackE>:
		virtual void Close()=0;

		//typedef boost::function<void (void*,Stream*)> Callback;
		FUNCTION_DECLARE(Callback,void,Stream*);
		int __tmp;
		virtual void BeginRead(Buffer buf, Callback cb)
   23b48:	55                   	push   %rbp
   23b49:	48 89 e5             	mov    %rsp,%rbp
   23b4c:	41 54                	push   %r12
   23b4e:	53                   	push   %rbx
   23b4f:	48 83 ec 50          	sub    $0x50,%rsp
   23b53:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   23b57:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   23b5b:	48 89 c8             	mov    %rcx,%rax
   23b5e:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
   23b62:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
		{
			__tmp = Read(buf);
   23b66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   23b6a:	48 8b 00             	mov    (%rax),%rax
   23b6d:	48 83 c0 10          	add    $0x10,%rax
   23b71:	48 8b 18             	mov    (%rax),%rbx
   23b74:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   23b78:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   23b7c:	48 89 d6             	mov    %rdx,%rsi
   23b7f:	48 89 c7             	mov    %rax,%rdi
   23b82:	e8 59 29 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   23b87:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   23b8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   23b8f:	48 89 d6             	mov    %rdx,%rsi
   23b92:	48 89 c7             	mov    %rax,%rdi
   23b95:	ff d3                	callq  *%rbx
   23b97:	89 c2                	mov    %eax,%edx
   23b99:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   23b9d:	89 50 0c             	mov    %edx,0xc(%rax)
   23ba0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   23ba4:	48 89 c7             	mov    %rax,%rdi
   23ba7:	e8 84 19 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			FUNCTION_CALL(cb, this);
   23bac:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   23bb0:	48 85 c0             	test   %rax,%rax
   23bb3:	75 73                	jne    23c28 <_ZN6xaxaxa6Stream9BeginReadENS_6BufferENS0_8CallbackE+0xe0>
   23bb5:	bf 18 00 00 00       	mov    $0x18,%edi
   23bba:	e8 71 29 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   23bbf:	48 89 c3             	mov    %rax,%rbx
   23bc2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23bc6:	48 89 c7             	mov    %rax,%rdi
   23bc9:	e8 22 2e ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   23bce:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   23bd2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23bd6:	48 8d 35 d3 07 00 00 	lea    0x7d3(%rip),%rsi        # 243b0 <_ZStL6ignore+0x2e>
   23bdd:	48 89 c7             	mov    %rax,%rdi
   23be0:	e8 fb 23 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   23be5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23be9:	48 89 c6             	mov    %rax,%rsi
   23bec:	48 89 df             	mov    %rbx,%rdi
   23bef:	e8 6c 24 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   23bf4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23bf8:	48 89 c7             	mov    %rax,%rdi
   23bfb:	e8 40 1f ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   23c00:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23c04:	48 89 c7             	mov    %rax,%rdi
   23c07:	e8 34 29 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   23c0c:	48 8b 05 85 64 20 00 	mov    0x206485(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   23c13:	48 89 c2             	mov    %rax,%rdx
   23c16:	48 8b 05 1b 65 20 00 	mov    0x20651b(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   23c1d:	48 89 c6             	mov    %rax,%rsi
   23c20:	48 89 df             	mov    %rbx,%rdi
   23c23:	e8 e8 2a ff ff       	callq  16710 <__cxa_throw@plt>
   23c28:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   23c2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23c30:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   23c34:	48 89 d6             	mov    %rdx,%rsi
   23c37:	48 89 c7             	mov    %rax,%rdi
   23c3a:	ff d1                	callq  *%rcx
		}
   23c3c:	48 83 c4 50          	add    $0x50,%rsp
   23c40:	5b                   	pop    %rbx
   23c41:	41 5c                	pop    %r12
   23c43:	5d                   	pop    %rbp
   23c44:	c3                   	retq   
   23c45:	48 89 c3             	mov    %rax,%rbx
		//typedef boost::function<void (void*,Stream*)> Callback;
		FUNCTION_DECLARE(Callback,void,Stream*);
		int __tmp;
		virtual void BeginRead(Buffer buf, Callback cb)
		{
			__tmp = Read(buf);
   23c48:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   23c4c:	48 89 c7             	mov    %rax,%rdi
   23c4f:	e8 dc 18 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   23c54:	48 89 d8             	mov    %rbx,%rax
   23c57:	48 89 c7             	mov    %rax,%rdi
   23c5a:	e8 51 2e ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   23c5f:	49 89 c4             	mov    %rax,%r12
			FUNCTION_CALL(cb, this);
   23c62:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23c66:	48 89 c7             	mov    %rax,%rdi
   23c69:	e8 d2 1e ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   23c6e:	eb 03                	jmp    23c73 <_ZN6xaxaxa6Stream9BeginReadENS_6BufferENS0_8CallbackE+0x12b>
   23c70:	49 89 c4             	mov    %rax,%r12
   23c73:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23c77:	48 89 c7             	mov    %rax,%rdi
   23c7a:	e8 c1 28 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   23c7f:	48 89 df             	mov    %rbx,%rdi
   23c82:	e8 29 29 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   23c87:	4c 89 e0             	mov    %r12,%rax
   23c8a:	48 89 c7             	mov    %rax,%rdi
   23c8d:	e8 1e 2e ff ff       	callq  16ab0 <_Unwind_Resume@plt>

0000000000023c92 <_ZN6xaxaxa6Stream10BeginWriteENS_6BufferENS0_8CallbackE>:
		}
		virtual void BeginWrite(Buffer buf, Callback cb)
   23c92:	55                   	push   %rbp
   23c93:	48 89 e5             	mov    %rsp,%rbp
   23c96:	41 54                	push   %r12
   23c98:	53                   	push   %rbx
   23c99:	48 83 ec 50          	sub    $0x50,%rsp
   23c9d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   23ca1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   23ca5:	48 89 c8             	mov    %rcx,%rax
   23ca8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
   23cac:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
		{
			Write(buf);
   23cb0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   23cb4:	48 8b 00             	mov    (%rax),%rax
   23cb7:	48 83 c0 18          	add    $0x18,%rax
   23cbb:	48 8b 18             	mov    (%rax),%rbx
   23cbe:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   23cc2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   23cc6:	48 89 d6             	mov    %rdx,%rsi
   23cc9:	48 89 c7             	mov    %rax,%rdi
   23ccc:	e8 0f 28 ff ff       	callq  164e0 <_ZN6xaxaxa6BufferC1ERKS0_@plt>
   23cd1:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   23cd5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   23cd9:	48 89 d6             	mov    %rdx,%rsi
   23cdc:	48 89 c7             	mov    %rax,%rdi
   23cdf:	ff d3                	callq  *%rbx
   23ce1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   23ce5:	48 89 c7             	mov    %rax,%rdi
   23ce8:	e8 43 18 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
			FUNCTION_CALL(cb, this);
   23ced:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   23cf1:	48 85 c0             	test   %rax,%rax
   23cf4:	75 73                	jne    23d69 <_ZN6xaxaxa6Stream10BeginWriteENS_6BufferENS0_8CallbackE+0xd7>
   23cf6:	bf 18 00 00 00       	mov    $0x18,%edi
   23cfb:	e8 30 28 ff ff       	callq  16530 <__cxa_allocate_exception@plt>
   23d00:	48 89 c3             	mov    %rax,%rbx
   23d03:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23d07:	48 89 c7             	mov    %rax,%rdi
   23d0a:	e8 e1 2c ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   23d0f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   23d13:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23d17:	48 8d 35 92 06 00 00 	lea    0x692(%rip),%rsi        # 243b0 <_ZStL6ignore+0x2e>
   23d1e:	48 89 c7             	mov    %rax,%rdi
   23d21:	e8 ba 22 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   23d26:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23d2a:	48 89 c6             	mov    %rax,%rsi
   23d2d:	48 89 df             	mov    %rbx,%rdi
   23d30:	e8 2b 23 ff ff       	callq  16060 <_ZN6xaxaxa9ExceptionC1ESs@plt>
   23d35:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23d39:	48 89 c7             	mov    %rax,%rdi
   23d3c:	e8 ff 1d ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   23d41:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23d45:	48 89 c7             	mov    %rax,%rdi
   23d48:	e8 f3 27 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   23d4d:	48 8b 05 44 63 20 00 	mov    0x206344(%rip),%rax        # 22a098 <_DYNAMIC+0x200>
   23d54:	48 89 c2             	mov    %rax,%rdx
   23d57:	48 8b 05 da 63 20 00 	mov    0x2063da(%rip),%rax        # 22a138 <_DYNAMIC+0x2a0>
   23d5e:	48 89 c6             	mov    %rax,%rsi
   23d61:	48 89 df             	mov    %rbx,%rdi
   23d64:	e8 a7 29 ff ff       	callq  16710 <__cxa_throw@plt>
   23d69:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   23d6d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23d71:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   23d75:	48 89 d6             	mov    %rdx,%rsi
   23d78:	48 89 c7             	mov    %rax,%rdi
   23d7b:	ff d1                	callq  *%rcx
		}
   23d7d:	48 83 c4 50          	add    $0x50,%rsp
   23d81:	5b                   	pop    %rbx
   23d82:	41 5c                	pop    %r12
   23d84:	5d                   	pop    %rbp
   23d85:	c3                   	retq   
   23d86:	48 89 c3             	mov    %rax,%rbx
			__tmp = Read(buf);
			FUNCTION_CALL(cb, this);
		}
		virtual void BeginWrite(Buffer buf, Callback cb)
		{
			Write(buf);
   23d89:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   23d8d:	48 89 c7             	mov    %rax,%rdi
   23d90:	e8 9b 17 ff ff       	callq  15530 <_ZN6xaxaxa6BufferD1Ev@plt>
   23d95:	48 89 d8             	mov    %rbx,%rax
   23d98:	48 89 c7             	mov    %rax,%rdi
   23d9b:	e8 10 2d ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   23da0:	49 89 c4             	mov    %rax,%r12
			FUNCTION_CALL(cb, this);
   23da3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23da7:	48 89 c7             	mov    %rax,%rdi
   23daa:	e8 91 1d ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   23daf:	eb 03                	jmp    23db4 <_ZN6xaxaxa6Stream10BeginWriteENS_6BufferENS0_8CallbackE+0x122>
   23db1:	49 89 c4             	mov    %rax,%r12
   23db4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23db8:	48 89 c7             	mov    %rax,%rdi
   23dbb:	e8 80 27 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   23dc0:	48 89 df             	mov    %rbx,%rdi
   23dc3:	e8 e8 27 ff ff       	callq  165b0 <__cxa_free_exception@plt>
   23dc8:	4c 89 e0             	mov    %r12,%rax
   23dcb:	48 89 c7             	mov    %rax,%rdi
   23dce:	e8 dd 2c ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   23dd3:	90                   	nop

0000000000023dd4 <_ZN6xaxaxa6Stream7EndReadEv>:
		}
		virtual Int EndRead()
   23dd4:	55                   	push   %rbp
   23dd5:	48 89 e5             	mov    %rsp,%rbp
   23dd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{
			return __tmp;
   23ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23de0:	8b 40 0c             	mov    0xc(%rax),%eax
		}
   23de3:	5d                   	pop    %rbp
   23de4:	c3                   	retq   
   23de5:	90                   	nop

0000000000023de6 <_ZN6xaxaxa6Stream8EndWriteEv>:
		virtual void EndWrite()
   23de6:	55                   	push   %rbp
   23de7:	48 89 e5             	mov    %rsp,%rbp
   23dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		{

		}
   23dee:	5d                   	pop    %rbp
   23def:	c3                   	retq   

0000000000023df0 <_ZN6xaxaxa16PointerExceptionC1Ev>:
		}
	};
	class PointerException: public Exception
	{
	public:
		inline PointerException() :
   23df0:	55                   	push   %rbp
   23df1:	48 89 e5             	mov    %rsp,%rbp
   23df4:	53                   	push   %rbx
   23df5:	48 83 ec 28          	sub    $0x28,%rsp
   23df9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
				Exception("segmentation fault")
   23dfd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23e01:	48 89 c7             	mov    %rax,%rdi
   23e04:	e8 e7 2b ff ff       	callq  169f0 <_ZNSaIcEC1Ev@plt>
   23e09:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   23e0d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23e11:	48 8d 35 b9 05 00 00 	lea    0x5b9(%rip),%rsi        # 243d1 <_ZStL6ignore+0x4f>
   23e18:	48 89 c7             	mov    %rax,%rdi
   23e1b:	e8 c0 21 ff ff       	callq  15fe0 <_ZNSsC1EPKcRKSaIcE@plt>
   23e20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e24:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   23e28:	48 89 d6             	mov    %rdx,%rsi
   23e2b:	48 89 c7             	mov    %rax,%rdi
   23e2e:	e8 6d 27 ff ff       	callq  165a0 <_ZN6xaxaxa9ExceptionC2ESs@plt>
   23e33:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23e37:	48 89 c7             	mov    %rax,%rdi
   23e3a:	e8 01 1d ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   23e3f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23e43:	48 89 c7             	mov    %rax,%rdi
   23e46:	e8 f5 26 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   23e4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e4f:	48 8b 15 da 62 20 00 	mov    0x2062da(%rip),%rdx        # 22a130 <_DYNAMIC+0x298>
   23e56:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   23e5a:	48 89 10             	mov    %rdx,(%rax)
		{
			//this();
		}
   23e5d:	48 83 c4 28          	add    $0x28,%rsp
   23e61:	5b                   	pop    %rbx
   23e62:	5d                   	pop    %rbp
   23e63:	c3                   	retq   
   23e64:	48 89 c3             	mov    %rax,%rbx
	};
	class PointerException: public Exception
	{
	public:
		inline PointerException() :
				Exception("segmentation fault")
   23e67:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   23e6b:	48 89 c7             	mov    %rax,%rdi
   23e6e:	e8 cd 1c ff ff       	callq  15b40 <_ZNSsD1Ev@plt>
   23e73:	eb 03                	jmp    23e78 <_ZN6xaxaxa16PointerExceptionC1Ev+0x88>
   23e75:	48 89 c3             	mov    %rax,%rbx
   23e78:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23e7c:	48 89 c7             	mov    %rax,%rdi
   23e7f:	e8 bc 26 ff ff       	callq  16540 <_ZNSaIcED1Ev@plt>
   23e84:	48 89 d8             	mov    %rbx,%rax
   23e87:	48 89 c7             	mov    %rax,%rdi
   23e8a:	e8 21 2c ff ff       	callq  16ab0 <_Unwind_Resume@plt>
   23e8f:	90                   	nop

0000000000023e90 <_ZN6xaxaxa6StreamC1Ev>:
		{\
		for(auto gjfdjdsghddjh=(NAME).handlers.begin();gjfdjdsghddjh!=(NAME).handlers.end();gjfdjdsghddjh++)\
		{CALL((*gjfdjdsghddjh),__VA_ARGS__);}}
#define ADDHANDLER(NAME,DEL) (NAME).addhandler(DEL)
#define REMOVEHANDLER(NAME,DEL) (NAME).removehandler(DEL)
	class Stream: public Object
   23e90:	55                   	push   %rbp
   23e91:	48 89 e5             	mov    %rsp,%rbp
   23e94:	48 83 ec 10          	sub    $0x10,%rsp
   23e98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23ea0:	48 89 c7             	mov    %rax,%rdi
   23ea3:	e8 a8 21 ff ff       	callq  16050 <_ZN6xaxaxa6ObjectC2Ev@plt>
   23ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23eac:	48 8b 15 ed 61 20 00 	mov    0x2061ed(%rip),%rdx        # 22a0a0 <_DYNAMIC+0x208>
   23eb3:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   23eb7:	48 89 10             	mov    %rdx,(%rax)
   23eba:	c9                   	leaveq 
   23ebb:	c3                   	retq   

0000000000023ebc <_ZN6xaxaxa6StreamD1Ev>:
   23ebc:	55                   	push   %rbp
   23ebd:	48 89 e5             	mov    %rsp,%rbp
   23ec0:	48 83 ec 10          	sub    $0x10,%rsp
   23ec4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23ec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23ecc:	48 8b 15 cd 61 20 00 	mov    0x2061cd(%rip),%rdx        # 22a0a0 <_DYNAMIC+0x208>
   23ed3:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   23ed7:	48 89 10             	mov    %rdx,(%rax)
   23eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23ede:	48 89 c7             	mov    %rax,%rdi
   23ee1:	e8 fa 22 ff ff       	callq  161e0 <_ZN6xaxaxa6ObjectD2Ev@plt>
   23ee6:	b8 00 00 00 00       	mov    $0x0,%eax
   23eeb:	83 e0 01             	and    $0x1,%eax
   23eee:	84 c0                	test   %al,%al
   23ef0:	74 0c                	je     23efe <_ZN6xaxaxa6StreamD1Ev+0x42>
   23ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23ef6:	48 89 c7             	mov    %rax,%rdi
   23ef9:	e8 f2 16 ff ff       	callq  155f0 <_ZdlPv@plt>
   23efe:	c9                   	leaveq 
   23eff:	c3                   	retq   

0000000000023f00 <_ZN6xaxaxa6StreamD0Ev>:
   23f00:	55                   	push   %rbp
   23f01:	48 89 e5             	mov    %rsp,%rbp
   23f04:	48 83 ec 10          	sub    $0x10,%rsp
   23f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f10:	48 89 c7             	mov    %rax,%rdi
   23f13:	e8 f8 1a ff ff       	callq  15a10 <_ZN6xaxaxa6StreamD1Ev@plt>
   23f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f1c:	48 89 c7             	mov    %rax,%rdi
   23f1f:	e8 cc 16 ff ff       	callq  155f0 <_ZdlPv@plt>
   23f24:	c9                   	leaveq 
   23f25:	c3                   	retq   

0000000000023f26 <_ZN6xaxaxa16PointerExceptionD1Ev>:
				while (__getlength(s1, s2, __wrap) > 0 && !(b.Get(__intwrap(s1,size))));
			}
			else b.Set(__intwrap(i,size), false);
		}
	};
	class PointerException: public Exception
   23f26:	55                   	push   %rbp
   23f27:	48 89 e5             	mov    %rsp,%rbp
   23f2a:	48 83 ec 10          	sub    $0x10,%rsp
   23f2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23f32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f36:	48 8b 15 f3 61 20 00 	mov    0x2061f3(%rip),%rdx        # 22a130 <_DYNAMIC+0x298>
   23f3d:	48 8d 52 10          	lea    0x10(%rdx),%rdx
   23f41:	48 89 10             	mov    %rdx,(%rax)
   23f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f48:	48 89 c7             	mov    %rax,%rdi
   23f4b:	e8 c0 25 ff ff       	callq  16510 <_ZN6xaxaxa9ExceptionD2Ev@plt>
   23f50:	b8 00 00 00 00       	mov    $0x0,%eax
   23f55:	83 e0 01             	and    $0x1,%eax
   23f58:	84 c0                	test   %al,%al
   23f5a:	74 0c                	je     23f68 <_ZN6xaxaxa16PointerExceptionD1Ev+0x42>
   23f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f60:	48 89 c7             	mov    %rax,%rdi
   23f63:	e8 88 16 ff ff       	callq  155f0 <_ZdlPv@plt>
   23f68:	c9                   	leaveq 
   23f69:	c3                   	retq   

0000000000023f6a <_ZN6xaxaxa16PointerExceptionD0Ev>:
   23f6a:	55                   	push   %rbp
   23f6b:	48 89 e5             	mov    %rsp,%rbp
   23f6e:	48 83 ec 10          	sub    $0x10,%rsp
   23f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f7a:	48 89 c7             	mov    %rax,%rdi
   23f7d:	e8 4e 29 ff ff       	callq  168d0 <_ZN6xaxaxa16PointerExceptionD1Ev@plt>
   23f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f86:	48 89 c7             	mov    %rax,%rdi
   23f89:	e8 62 16 ff ff       	callq  155f0 <_ZdlPv@plt>
   23f8e:	c9                   	leaveq 
   23f8f:	c3                   	retq   

0000000000023f90 <__do_global_ctors_aux>:
   23f90:	55                   	push   %rbp
   23f91:	48 89 e5             	mov    %rsp,%rbp
   23f94:	53                   	push   %rbx
   23f95:	48 83 ec 08          	sub    $0x8,%rsp
   23f99:	48 8b 05 e8 58 20 00 	mov    0x2058e8(%rip),%rax        # 229888 <__CTOR_LIST__>
   23fa0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   23fa4:	74 19                	je     23fbf <__do_global_ctors_aux+0x2f>
   23fa6:	48 8d 1d db 58 20 00 	lea    0x2058db(%rip),%rbx        # 229888 <__CTOR_LIST__>
   23fad:	0f 1f 00             	nopl   (%rax)
   23fb0:	48 83 eb 08          	sub    $0x8,%rbx
   23fb4:	ff d0                	callq  *%rax
   23fb6:	48 8b 03             	mov    (%rbx),%rax
   23fb9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   23fbd:	75 f1                	jne    23fb0 <__do_global_ctors_aux+0x20>
   23fbf:	48 83 c4 08          	add    $0x8,%rsp
   23fc3:	5b                   	pop    %rbx
   23fc4:	5d                   	pop    %rbp
   23fc5:	c3                   	retq   
   23fc6:	90                   	nop
   23fc7:	90                   	nop

Disassembly of section .fini:

0000000000023fc8 <_fini>:
   23fc8:	48 83 ec 08          	sub    $0x8,%rsp
   23fcc:	e8 5f 2c ff ff       	callq  16c30 <__do_global_dtors_aux>
   23fd1:	48 83 c4 08          	add    $0x8,%rsp
   23fd5:	c3                   	retq   
